/*
 Navicat Premium Data Transfer

 Source Server         : mysql57
 Source Server Type    : MySQL
 Source Server Version : 50739
 Source Host           : localhost:3307
 Source Schema         : k8s

 Target Server Type    : MySQL
 Target Server Version : 50739
 File Encoding         : 65001

 Date: 27/09/2022 17:56:03
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for resources
-- ----------------------------
DROP TABLE IF EXISTS `resources`;
CREATE TABLE `resources`  (
  `id` bigint(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  `namespace` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NULL DEFAULT NULL,
  `name` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
  `cluster` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
  `group` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
  `version` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
  `resource` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
  `kind` varchar(60) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
  `resource_version` varchar(80) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NULL DEFAULT NULL,
  `owner` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NULL DEFAULT NULL COMMENT 'owner uid',
  `uid` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
  `hash` varchar(1024) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NULL DEFAULT NULL,
  `object` json NULL,
  `create_at` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `delete_at` timestamp(0) NULL DEFAULT NULL,
  `update_at` timestamp(0) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uid`(`uid`) USING BTREE
) ENGINE = MyISAM AUTO_INCREMENT = 879 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_bin ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of resources
-- ----------------------------
INSERT INTO `resources` VALUES (777, 'cattle-system', 'istio-ca-root-cert', '', 'v1', 'configmaps', 'ConfigMap', '12083462', '', '36f5d245-82e3-49a8-84b4-526436bc23fb', '3fad4ece59097cef1e80', '{\"data\": {\"root-cert.pem\": \"-----BEGIN CERTIFICATE-----\\nMIIC/DCCAeSgAwIBAgIQIm0uJrxR03UgVKC4hRH+QTANBgkqhkiG9w0BAQsFADAY\\nMRYwFAYDVQQKEw1jbHVzdGVyLmxvY2FsMB4XDTIxMDkxODA5MTUwOVoXDTMxMDkx\\nNjA5MTUwOVowGDEWMBQGA1UEChMNY2x1c3Rlci5sb2NhbDCCASIwDQYJKoZIhvcN\\nAQEBBQADggEPADCCAQoCggEBAMxhNFjEB+bW82xWVKfQUpvZVpQVskQs4bdbPuqM\\ns+4xpe42cfFvnJ4aNdLeespk7l0iNIo4p+WJ0pkkoi1/N+TztbmDOHsRW6h22YsB\\n/kWMf7LpLFBTWIqTe30DAG+DFbvn+yb7eLEdtUpbg3m7sYAZmX5BTxKiO5wl0i0D\\nDBRvqivJrhyDLikh4+xJ+dkxO3WlKJiik8SnzoGLaX2XiLeeRFTde4ynM9xZkA5i\\nwAgy8JTyiZ0rAIgj1DZ9n434IlWHykA7JG4tF2yeEeoJQfIjEK29ToVlLpFp+Cx5\\n/2Xe8CuCVRQJeH3hrDaf43o5HFJ2BIIpAsAUf8Ayd3K/PBUCAwEAAaNCMEAwDgYD\\nVR0PAQH/BAQDAgIEMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFFC+UlUIc2gM\\n1pG6lD1JZVEcrdAMMA0GCSqGSIb3DQEBCwUAA4IBAQCFkiXChryTn/VYRxhKull2\\nq1wdl5xEYqvOt+68krE8kSHh8XrA1mvhhp6rOtPbcNQ4kJulhzAs+IkFN/aygT7r\\nP+Q/JTKuSNNJVFmW1sSCAwcNyCxhNaNJBZL3MCjL7asqsmKxiVNMxYrgvvUgX2x6\\nsbNdjdQkRA9GJSuYTaAlX/vIdHK9XJxv2T/KbD0aB7bszujDP66LJZaq/DkDMePP\\nr1qTBFoEw0edtwFI8ESaQMpFlpQJcCIMdJ12z6EVcnBufEqDwLV1pU4zzB4/3Hzb\\ngAAAx46M4q/b8QareLuufAoOVyABeMjZdWVMGIFIqNSPLYp91iLhPLef3ZgEOPnr\\n-----END CERTIFICATE-----\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"36f5d245-82e3-49a8-84b4-526436bc23fb\", \"name\": \"istio-ca-root-cert\", \"labels\": {\"istio.io/config\": \"true\"}, \"namespace\": \"cattle-system\", \"managedFields\": [{\"time\": \"2021-09-20T08:20:24Z\", \"manager\": \"pilot-discovery\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:root-cert.pem\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:istio.io/config\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"12083462\", \"creationTimestamp\": \"2021-09-20T08:20:24Z\"}, \"apiVersion\": \"v1\"}', '2021-09-20 16:20:24', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (778, 'kube-federation-system', 'istio-ca-root-cert', '', 'v1', 'configmaps', 'ConfigMap', '10588513', '', '0653e619-a2be-447b-8bea-1e71c1d07d4c', '2d7f4085ae876288b6ac', '{\"data\": {\"root-cert.pem\": \"-----BEGIN CERTIFICATE-----\\nMIIC/DCCAeSgAwIBAgIQIm0uJrxR03UgVKC4hRH+QTANBgkqhkiG9w0BAQsFADAY\\nMRYwFAYDVQQKEw1jbHVzdGVyLmxvY2FsMB4XDTIxMDkxODA5MTUwOVoXDTMxMDkx\\nNjA5MTUwOVowGDEWMBQGA1UEChMNY2x1c3Rlci5sb2NhbDCCASIwDQYJKoZIhvcN\\nAQEBBQADggEPADCCAQoCggEBAMxhNFjEB+bW82xWVKfQUpvZVpQVskQs4bdbPuqM\\ns+4xpe42cfFvnJ4aNdLeespk7l0iNIo4p+WJ0pkkoi1/N+TztbmDOHsRW6h22YsB\\n/kWMf7LpLFBTWIqTe30DAG+DFbvn+yb7eLEdtUpbg3m7sYAZmX5BTxKiO5wl0i0D\\nDBRvqivJrhyDLikh4+xJ+dkxO3WlKJiik8SnzoGLaX2XiLeeRFTde4ynM9xZkA5i\\nwAgy8JTyiZ0rAIgj1DZ9n434IlWHykA7JG4tF2yeEeoJQfIjEK29ToVlLpFp+Cx5\\n/2Xe8CuCVRQJeH3hrDaf43o5HFJ2BIIpAsAUf8Ayd3K/PBUCAwEAAaNCMEAwDgYD\\nVR0PAQH/BAQDAgIEMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFFC+UlUIc2gM\\n1pG6lD1JZVEcrdAMMA0GCSqGSIb3DQEBCwUAA4IBAQCFkiXChryTn/VYRxhKull2\\nq1wdl5xEYqvOt+68krE8kSHh8XrA1mvhhp6rOtPbcNQ4kJulhzAs+IkFN/aygT7r\\nP+Q/JTKuSNNJVFmW1sSCAwcNyCxhNaNJBZL3MCjL7asqsmKxiVNMxYrgvvUgX2x6\\nsbNdjdQkRA9GJSuYTaAlX/vIdHK9XJxv2T/KbD0aB7bszujDP66LJZaq/DkDMePP\\nr1qTBFoEw0edtwFI8ESaQMpFlpQJcCIMdJ12z6EVcnBufEqDwLV1pU4zzB4/3Hzb\\ngAAAx46M4q/b8QareLuufAoOVyABeMjZdWVMGIFIqNSPLYp91iLhPLef3ZgEOPnr\\n-----END CERTIFICATE-----\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"0653e619-a2be-447b-8bea-1e71c1d07d4c\", \"name\": \"istio-ca-root-cert\", \"labels\": {\"istio.io/config\": \"true\"}, \"namespace\": \"kube-federation-system\", \"managedFields\": [{\"time\": \"2021-08-22T18:06:39Z\", \"manager\": \"pilot-discovery\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:root-cert.pem\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:istio.io/config\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"10588513\", \"creationTimestamp\": \"2021-08-22T18:06:39Z\"}, \"apiVersion\": \"v1\"}', '2021-08-23 02:06:39', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (779, 'myweb', 'kube-root-ca.crt', '', 'v1', 'configmaps', 'ConfigMap', '118301714', '', '451b9943-9043-4b2b-acce-c05a453438a0', '22515410ed2569e4e93b', '{\"data\": {\"ca.crt\": \"-----BEGIN CERTIFICATE-----\\nMIIC/jCCAeagAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\\ncm5ldGVzMB4XDTIxMDgxNjE4MjQ0MVoXDTMxMDgxNDE4MjQ0MVowFTETMBEGA1UE\\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKAQ\\n/td7qUH75HBRNBsJksTZWRSr0ZsBghzsO4FTKz90biavL/XVneiN0YNa7PCqusCR\\nYS6W6vUFepyjWtlYdKdHc6ZRPuAPokxGFOurLXHqdDg/vSgmR1J2bDe25AQ1O/8M\\n/MlBVRLIfsnjMOrPdegYhmQhlqN/qkcy0EYlTWMPxPiBmTiocalPG4OAtDqXmCJj\\ny6/hJhQ7ta1pnaiLWe+b8v99udJ7RGrRAQv5KWRwMY6nwNviV8OAAiEL9nkFIDs5\\n7r5OtHhC6fv4DByj3zZzsdN9JOogrZbnP/6/UtovgYvt8Sv+0Z4q1T5tpV+0EXZi\\n4LFkYy0bXWvWOfppHXUCAwEAAaNZMFcwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB\\n/wQFMAMBAf8wHQYDVR0OBBYEFIHMJBmfKRukQct2JCPpvxdGOP1mMBUGA1UdEQQO\\nMAyCCmt1YmVybmV0ZXMwDQYJKoZIhvcNAQELBQADggEBAFuzNT+/vgIZ2s37cjXB\\nLA2NsR73Yvp4Cg2VcuaDqSD+ZIgp0bSrnHXTcoZIW5KaEJf92FF4kZG1riQaeJFo\\nkzOCH6Xp7qbYp1XsKW+IbbYia1Ps/cY3tG3od6j56tvyokrURI+rBC9QngmhIJPM\\nUGlboIV+xnE2662wMWNu/FsbsW33lTK29gdicAiDPleBCPdtgUDlQyJTSKZuFi8h\\nV6aWCLuFxIkW6l0mLpQIhbc5Jx6uTZ0AFoMd0dPJohttCwZ97Kjew7X1Saimbnox\\naH9EPUfLNWonQ+tBkp5/0krm0LrAhNT5aA5M7tcYKSg5ytTukMdAaJwQWHCH5M1t\\nI9s=\\n-----END CERTIFICATE-----\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"451b9943-9043-4b2b-acce-c05a453438a0\", \"name\": \"kube-root-ca.crt\", \"namespace\": \"myweb\", \"annotations\": {\"kubernetes.io/description\": \"Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters.\"}, \"managedFields\": [{\"time\": \"2022-02-13T15:20:49Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:ca.crt\": {}}, \"f:metadata\": {\"f:annotations\": {\".\": {}, \"f:kubernetes.io/description\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"118301714\", \"creationTimestamp\": \"2022-02-13T15:20:49Z\"}, \"apiVersion\": \"v1\"}', '2022-02-13 23:20:49', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (780, 'argocd', 'argocd-ssh-known-hosts-cm', '', 'v1', 'configmaps', 'ConfigMap', '31177027', '', '37c955e2-c8c8-4aaa-acd7-960e17b0f517', '818ac0beba78562cee5a', '{\"data\": {\"ssh_known_hosts\": \"bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==\\ngithub.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==\\ngitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=\\ngitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf\\ngitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9\\nssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\\nvs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"37c955e2-c8c8-4aaa-acd7-960e17b0f517\", \"name\": \"argocd-ssh-known-hosts-cm\", \"labels\": {\"app.kubernetes.io/name\": \"argocd-ssh-known-hosts-cm\", \"app.kubernetes.io/part-of\": \"argocd\"}, \"namespace\": \"argocd\", \"annotations\": {\"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"data\\\":{\\\"ssh_known_hosts\\\":\\\"bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==\\\\ngithub.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==\\\\ngitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=\\\\ngitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf\\\\ngitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9\\\\nssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\\\\nvs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\\\\n\\\"},\\\"kind\\\":\\\"ConfigMap\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app.kubernetes.io/name\\\":\\\"argocd-ssh-known-hosts-cm\\\",\\\"app.kubernetes.io/part-of\\\":\\\"argocd\\\"},\\\"name\\\":\\\"argocd-ssh-known-hosts-cm\\\",\\\"namespace\\\":\\\"argocd\\\"}}\\n\"}, \"managedFields\": [{\"time\": \"2021-10-15T10:23:22Z\", \"manager\": \"kubectl-client-side-apply\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:ssh_known_hosts\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:app.kubernetes.io/name\": {}, \"f:app.kubernetes.io/part-of\": {}}, \"f:annotations\": {\".\": {}, \"f:kubectl.kubernetes.io/last-applied-configuration\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"31177027\", \"creationTimestamp\": \"2021-10-15T10:23:22Z\"}, \"apiVersion\": \"v1\"}', '2021-10-15 18:23:22', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (781, 'ingress-nginx', 'kube-root-ca.crt', '', 'v1', 'configmaps', 'ConfigMap', '111207', '', 'b8d23c8c-e98c-49f5-9a7d-69bee71b137d', '7163487f168f1e2bb7c7', '{\"data\": {\"ca.crt\": \"-----BEGIN CERTIFICATE-----\\nMIIC/jCCAeagAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\\ncm5ldGVzMB4XDTIxMDgxNjE4MjQ0MVoXDTMxMDgxNDE4MjQ0MVowFTETMBEGA1UE\\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKAQ\\n/td7qUH75HBRNBsJksTZWRSr0ZsBghzsO4FTKz90biavL/XVneiN0YNa7PCqusCR\\nYS6W6vUFepyjWtlYdKdHc6ZRPuAPokxGFOurLXHqdDg/vSgmR1J2bDe25AQ1O/8M\\n/MlBVRLIfsnjMOrPdegYhmQhlqN/qkcy0EYlTWMPxPiBmTiocalPG4OAtDqXmCJj\\ny6/hJhQ7ta1pnaiLWe+b8v99udJ7RGrRAQv5KWRwMY6nwNviV8OAAiEL9nkFIDs5\\n7r5OtHhC6fv4DByj3zZzsdN9JOogrZbnP/6/UtovgYvt8Sv+0Z4q1T5tpV+0EXZi\\n4LFkYy0bXWvWOfppHXUCAwEAAaNZMFcwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB\\n/wQFMAMBAf8wHQYDVR0OBBYEFIHMJBmfKRukQct2JCPpvxdGOP1mMBUGA1UdEQQO\\nMAyCCmt1YmVybmV0ZXMwDQYJKoZIhvcNAQELBQADggEBAFuzNT+/vgIZ2s37cjXB\\nLA2NsR73Yvp4Cg2VcuaDqSD+ZIgp0bSrnHXTcoZIW5KaEJf92FF4kZG1riQaeJFo\\nkzOCH6Xp7qbYp1XsKW+IbbYia1Ps/cY3tG3od6j56tvyokrURI+rBC9QngmhIJPM\\nUGlboIV+xnE2662wMWNu/FsbsW33lTK29gdicAiDPleBCPdtgUDlQyJTSKZuFi8h\\nV6aWCLuFxIkW6l0mLpQIhbc5Jx6uTZ0AFoMd0dPJohttCwZ97Kjew7X1Saimbnox\\naH9EPUfLNWonQ+tBkp5/0krm0LrAhNT5aA5M7tcYKSg5ytTukMdAaJwQWHCH5M1t\\nI9s=\\n-----END CERTIFICATE-----\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"b8d23c8c-e98c-49f5-9a7d-69bee71b137d\", \"name\": \"kube-root-ca.crt\", \"namespace\": \"ingress-nginx\", \"annotations\": {\"kubernetes.io/description\": \"Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters.\"}, \"managedFields\": [{\"time\": \"2021-08-17T14:27:14Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:ca.crt\": {}}, \"f:metadata\": {\"f:annotations\": {\".\": {}, \"f:kubernetes.io/description\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"111207\", \"creationTimestamp\": \"2021-08-17T14:27:14Z\"}, \"apiVersion\": \"v1\"}', '2021-08-17 22:27:14', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (782, 'kube-public', 'istio-ca-root-cert', '', 'v1', 'configmaps', 'ConfigMap', '31165773', '', '5f82ebb1-e17d-4ea9-ad1d-deee2c527863', '57b24d3e87f7409bee82', '{\"data\": {\"root-cert.pem\": \"-----BEGIN CERTIFICATE-----\\nMIIC/DCCAeSgAwIBAgIQIm0uJrxR03UgVKC4hRH+QTANBgkqhkiG9w0BAQsFADAY\\nMRYwFAYDVQQKEw1jbHVzdGVyLmxvY2FsMB4XDTIxMDkxODA5MTUwOVoXDTMxMDkx\\nNjA5MTUwOVowGDEWMBQGA1UEChMNY2x1c3Rlci5sb2NhbDCCASIwDQYJKoZIhvcN\\nAQEBBQADggEPADCCAQoCggEBAMxhNFjEB+bW82xWVKfQUpvZVpQVskQs4bdbPuqM\\ns+4xpe42cfFvnJ4aNdLeespk7l0iNIo4p+WJ0pkkoi1/N+TztbmDOHsRW6h22YsB\\n/kWMf7LpLFBTWIqTe30DAG+DFbvn+yb7eLEdtUpbg3m7sYAZmX5BTxKiO5wl0i0D\\nDBRvqivJrhyDLikh4+xJ+dkxO3WlKJiik8SnzoGLaX2XiLeeRFTde4ynM9xZkA5i\\nwAgy8JTyiZ0rAIgj1DZ9n434IlWHykA7JG4tF2yeEeoJQfIjEK29ToVlLpFp+Cx5\\n/2Xe8CuCVRQJeH3hrDaf43o5HFJ2BIIpAsAUf8Ayd3K/PBUCAwEAAaNCMEAwDgYD\\nVR0PAQH/BAQDAgIEMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFFC+UlUIc2gM\\n1pG6lD1JZVEcrdAMMA0GCSqGSIb3DQEBCwUAA4IBAQCFkiXChryTn/VYRxhKull2\\nq1wdl5xEYqvOt+68krE8kSHh8XrA1mvhhp6rOtPbcNQ4kJulhzAs+IkFN/aygT7r\\nP+Q/JTKuSNNJVFmW1sSCAwcNyCxhNaNJBZL3MCjL7asqsmKxiVNMxYrgvvUgX2x6\\nsbNdjdQkRA9GJSuYTaAlX/vIdHK9XJxv2T/KbD0aB7bszujDP66LJZaq/DkDMePP\\nr1qTBFoEw0edtwFI8ESaQMpFlpQJcCIMdJ12z6EVcnBufEqDwLV1pU4zzB4/3Hzb\\ngAAAx46M4q/b8QareLuufAoOVyABeMjZdWVMGIFIqNSPLYp91iLhPLef3ZgEOPnr\\n-----END CERTIFICATE-----\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"5f82ebb1-e17d-4ea9-ad1d-deee2c527863\", \"name\": \"istio-ca-root-cert\", \"labels\": {\"istio.io/config\": \"true\"}, \"namespace\": \"kube-public\", \"managedFields\": [{\"time\": \"2021-08-17T03:57:58Z\", \"manager\": \"pilot-discovery\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:root-cert.pem\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:istio.io/config\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"31165773\", \"creationTimestamp\": \"2021-08-17T03:57:58Z\"}, \"apiVersion\": \"v1\"}', '2021-08-17 11:57:58', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (783, 'kube-system', 'istio-ca-root-cert', '', 'v1', 'configmaps', 'ConfigMap', '31165774', '', 'fe8097e7-553a-401f-8066-e1153eb9de88', '3041b1369c8e391e10ae', '{\"data\": {\"root-cert.pem\": \"-----BEGIN CERTIFICATE-----\\nMIIC/DCCAeSgAwIBAgIQIm0uJrxR03UgVKC4hRH+QTANBgkqhkiG9w0BAQsFADAY\\nMRYwFAYDVQQKEw1jbHVzdGVyLmxvY2FsMB4XDTIxMDkxODA5MTUwOVoXDTMxMDkx\\nNjA5MTUwOVowGDEWMBQGA1UEChMNY2x1c3Rlci5sb2NhbDCCASIwDQYJKoZIhvcN\\nAQEBBQADggEPADCCAQoCggEBAMxhNFjEB+bW82xWVKfQUpvZVpQVskQs4bdbPuqM\\ns+4xpe42cfFvnJ4aNdLeespk7l0iNIo4p+WJ0pkkoi1/N+TztbmDOHsRW6h22YsB\\n/kWMf7LpLFBTWIqTe30DAG+DFbvn+yb7eLEdtUpbg3m7sYAZmX5BTxKiO5wl0i0D\\nDBRvqivJrhyDLikh4+xJ+dkxO3WlKJiik8SnzoGLaX2XiLeeRFTde4ynM9xZkA5i\\nwAgy8JTyiZ0rAIgj1DZ9n434IlWHykA7JG4tF2yeEeoJQfIjEK29ToVlLpFp+Cx5\\n/2Xe8CuCVRQJeH3hrDaf43o5HFJ2BIIpAsAUf8Ayd3K/PBUCAwEAAaNCMEAwDgYD\\nVR0PAQH/BAQDAgIEMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFFC+UlUIc2gM\\n1pG6lD1JZVEcrdAMMA0GCSqGSIb3DQEBCwUAA4IBAQCFkiXChryTn/VYRxhKull2\\nq1wdl5xEYqvOt+68krE8kSHh8XrA1mvhhp6rOtPbcNQ4kJulhzAs+IkFN/aygT7r\\nP+Q/JTKuSNNJVFmW1sSCAwcNyCxhNaNJBZL3MCjL7asqsmKxiVNMxYrgvvUgX2x6\\nsbNdjdQkRA9GJSuYTaAlX/vIdHK9XJxv2T/KbD0aB7bszujDP66LJZaq/DkDMePP\\nr1qTBFoEw0edtwFI8ESaQMpFlpQJcCIMdJ12z6EVcnBufEqDwLV1pU4zzB4/3Hzb\\ngAAAx46M4q/b8QareLuufAoOVyABeMjZdWVMGIFIqNSPLYp91iLhPLef3ZgEOPnr\\n-----END CERTIFICATE-----\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"fe8097e7-553a-401f-8066-e1153eb9de88\", \"name\": \"istio-ca-root-cert\", \"labels\": {\"istio.io/config\": \"true\"}, \"namespace\": \"kube-system\", \"managedFields\": [{\"time\": \"2021-08-17T03:57:58Z\", \"manager\": \"pilot-discovery\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:root-cert.pem\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:istio.io/config\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"31165774\", \"creationTimestamp\": \"2021-08-17T03:57:58Z\"}, \"apiVersion\": \"v1\"}', '2021-08-17 11:57:58', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (784, 'k8sblog', 'istio-ca-root-cert', '', 'v1', 'configmaps', 'ConfigMap', '145106245', '', '8d5d62b9-1e2e-4a2c-bce6-4d46257fda44', '912100c6a2f01d62d10d', '{\"data\": {\"root-cert.pem\": \"-----BEGIN CERTIFICATE-----\\nMIIC/DCCAeSgAwIBAgIQIm0uJrxR03UgVKC4hRH+QTANBgkqhkiG9w0BAQsFADAY\\nMRYwFAYDVQQKEw1jbHVzdGVyLmxvY2FsMB4XDTIxMDkxODA5MTUwOVoXDTMxMDkx\\nNjA5MTUwOVowGDEWMBQGA1UEChMNY2x1c3Rlci5sb2NhbDCCASIwDQYJKoZIhvcN\\nAQEBBQADggEPADCCAQoCggEBAMxhNFjEB+bW82xWVKfQUpvZVpQVskQs4bdbPuqM\\ns+4xpe42cfFvnJ4aNdLeespk7l0iNIo4p+WJ0pkkoi1/N+TztbmDOHsRW6h22YsB\\n/kWMf7LpLFBTWIqTe30DAG+DFbvn+yb7eLEdtUpbg3m7sYAZmX5BTxKiO5wl0i0D\\nDBRvqivJrhyDLikh4+xJ+dkxO3WlKJiik8SnzoGLaX2XiLeeRFTde4ynM9xZkA5i\\nwAgy8JTyiZ0rAIgj1DZ9n434IlWHykA7JG4tF2yeEeoJQfIjEK29ToVlLpFp+Cx5\\n/2Xe8CuCVRQJeH3hrDaf43o5HFJ2BIIpAsAUf8Ayd3K/PBUCAwEAAaNCMEAwDgYD\\nVR0PAQH/BAQDAgIEMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFFC+UlUIc2gM\\n1pG6lD1JZVEcrdAMMA0GCSqGSIb3DQEBCwUAA4IBAQCFkiXChryTn/VYRxhKull2\\nq1wdl5xEYqvOt+68krE8kSHh8XrA1mvhhp6rOtPbcNQ4kJulhzAs+IkFN/aygT7r\\nP+Q/JTKuSNNJVFmW1sSCAwcNyCxhNaNJBZL3MCjL7asqsmKxiVNMxYrgvvUgX2x6\\nsbNdjdQkRA9GJSuYTaAlX/vIdHK9XJxv2T/KbD0aB7bszujDP66LJZaq/DkDMePP\\nr1qTBFoEw0edtwFI8ESaQMpFlpQJcCIMdJ12z6EVcnBufEqDwLV1pU4zzB4/3Hzb\\ngAAAx46M4q/b8QareLuufAoOVyABeMjZdWVMGIFIqNSPLYp91iLhPLef3ZgEOPnr\\n-----END CERTIFICATE-----\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"8d5d62b9-1e2e-4a2c-bce6-4d46257fda44\", \"name\": \"istio-ca-root-cert\", \"labels\": {\"istio.io/config\": \"true\"}, \"namespace\": \"k8sblog\", \"managedFields\": [{\"time\": \"2022-06-25T04:49:17Z\", \"manager\": \"pilot-discovery\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:root-cert.pem\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:istio.io/config\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"145106245\", \"creationTimestamp\": \"2022-06-25T04:49:17Z\"}, \"apiVersion\": \"v1\"}', '2022-06-25 12:49:17', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (785, 'kube-system', 'kube-proxy', '', 'v1', 'configmaps', 'ConfigMap', '124884216', '', '93b0197b-1ddb-4103-8bd8-7a2abc3c4e2a', 'af3747a4a67ccfda794c', '{\"data\": {\"config.conf\": \"apiVersion: kubeproxy.config.k8s.io/v1alpha1\\nbindAddress: 0.0.0.0\\nbindAddressHardFail: false\\nclientConnection:\\n  acceptContentTypes: \\\"\\\"\\n  burst: 0\\n  contentType: \\\"\\\"\\n  kubeconfig: /var/lib/kube-proxy/kubeconfig.conf\\n  qps: 0\\nclusterCIDR: 10.244.0.0/16\\nconfigSyncPeriod: 0s\\nconntrack:\\n  maxPerCore: null\\n  min: null\\n  tcpCloseWaitTimeout: null\\n  tcpEstablishedTimeout: null\\ndetectLocalMode: \\\"\\\"\\nenableProfiling: false\\nhealthzBindAddress: \\\"\\\"\\nhostnameOverride: \\\"\\\"\\niptables:\\n  masqueradeAll: false\\n  masqueradeBit: null\\n  minSyncPeriod: 0s\\n  syncPeriod: 0s\\nipvs:\\n  excludeCIDRs: null\\n  minSyncPeriod: 0s\\n  scheduler: \\\"\\\"\\n  strictARP: true\\n  syncPeriod: 0s\\n  tcpFinTimeout: 0s\\n  tcpTimeout: 0s\\n  udpTimeout: 0s\\nkind: KubeProxyConfiguration\\nmetricsBindAddress: \\\"\\\"\\nmode: \\\"\\\"\\nnodePortAddresses: null\\noomScoreAdj: null\\nportRange: \\\"\\\"\\nshowHiddenMetricsForVersion: \\\"\\\"\\nudpIdleTimeout: 0s\\nwinkernel:\\n  enableDSR: false\\n  networkName: \\\"\\\"\\n  sourceVip: \\\"\\\"\", \"kubeconfig.conf\": \"apiVersion: v1\\nkind: Config\\nclusters:\\n- cluster:\\n    certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\\n    server: https://172.17.70.144:6443\\n  name: default\\ncontexts:\\n- context:\\n    cluster: default\\n    namespace: default\\n    user: default\\n  name: default\\ncurrent-context: default\\nusers:\\n- name: default\\n  user:\\n    tokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"93b0197b-1ddb-4103-8bd8-7a2abc3c4e2a\", \"name\": \"kube-proxy\", \"labels\": {\"app\": \"kube-proxy\"}, \"namespace\": \"kube-system\", \"annotations\": {\"kubeadm.kubernetes.io/component-config.hash\": \"sha256:c3906153cd7dab48c1f383a31c829a9dc47b2d5b4bc535698410922e127ede94\"}, \"managedFields\": [{\"time\": \"2021-08-16T18:24:55Z\", \"manager\": \"kubeadm\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:kubeconfig.conf\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:app\": {}}, \"f:annotations\": {\".\": {}, \"f:kubeadm.kubernetes.io/component-config.hash\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2022-03-17T06:00:37Z\", \"manager\": \"kubectl\", \"fieldsV1\": {\"f:data\": {\"f:config.conf\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"124884216\", \"creationTimestamp\": \"2021-08-16T18:24:55Z\"}, \"apiVersion\": \"v1\"}', '2021-08-17 02:24:55', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (786, 'myfed', 'istio-ca-root-cert', '', 'v1', 'configmaps', 'ConfigMap', '68408889', '', 'f4019925-7be9-4a37-bc85-2a237be28544', '890bec0304c7dc0da3c3', '{\"data\": {\"root-cert.pem\": \"-----BEGIN CERTIFICATE-----\\nMIIC/DCCAeSgAwIBAgIQIm0uJrxR03UgVKC4hRH+QTANBgkqhkiG9w0BAQsFADAY\\nMRYwFAYDVQQKEw1jbHVzdGVyLmxvY2FsMB4XDTIxMDkxODA5MTUwOVoXDTMxMDkx\\nNjA5MTUwOVowGDEWMBQGA1UEChMNY2x1c3Rlci5sb2NhbDCCASIwDQYJKoZIhvcN\\nAQEBBQADggEPADCCAQoCggEBAMxhNFjEB+bW82xWVKfQUpvZVpQVskQs4bdbPuqM\\ns+4xpe42cfFvnJ4aNdLeespk7l0iNIo4p+WJ0pkkoi1/N+TztbmDOHsRW6h22YsB\\n/kWMf7LpLFBTWIqTe30DAG+DFbvn+yb7eLEdtUpbg3m7sYAZmX5BTxKiO5wl0i0D\\nDBRvqivJrhyDLikh4+xJ+dkxO3WlKJiik8SnzoGLaX2XiLeeRFTde4ynM9xZkA5i\\nwAgy8JTyiZ0rAIgj1DZ9n434IlWHykA7JG4tF2yeEeoJQfIjEK29ToVlLpFp+Cx5\\n/2Xe8CuCVRQJeH3hrDaf43o5HFJ2BIIpAsAUf8Ayd3K/PBUCAwEAAaNCMEAwDgYD\\nVR0PAQH/BAQDAgIEMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFFC+UlUIc2gM\\n1pG6lD1JZVEcrdAMMA0GCSqGSIb3DQEBCwUAA4IBAQCFkiXChryTn/VYRxhKull2\\nq1wdl5xEYqvOt+68krE8kSHh8XrA1mvhhp6rOtPbcNQ4kJulhzAs+IkFN/aygT7r\\nP+Q/JTKuSNNJVFmW1sSCAwcNyCxhNaNJBZL3MCjL7asqsmKxiVNMxYrgvvUgX2x6\\nsbNdjdQkRA9GJSuYTaAlX/vIdHK9XJxv2T/KbD0aB7bszujDP66LJZaq/DkDMePP\\nr1qTBFoEw0edtwFI8ESaQMpFlpQJcCIMdJ12z6EVcnBufEqDwLV1pU4zzB4/3Hzb\\ngAAAx46M4q/b8QareLuufAoOVyABeMjZdWVMGIFIqNSPLYp91iLhPLef3ZgEOPnr\\n-----END CERTIFICATE-----\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"f4019925-7be9-4a37-bc85-2a237be28544\", \"name\": \"istio-ca-root-cert\", \"labels\": {\"istio.io/config\": \"true\"}, \"namespace\": \"myfed\", \"managedFields\": [{\"time\": \"2021-12-04T08:47:24Z\", \"manager\": \"pilot-discovery\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:root-cert.pem\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:istio.io/config\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"68408889\", \"creationTimestamp\": \"2021-12-04T08:47:24Z\"}, \"apiVersion\": \"v1\"}', '2021-12-04 16:47:24', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (787, 'default', 'istio-ca-root-cert', '', 'v1', 'configmaps', 'ConfigMap', '10588526', '', 'cc029617-88ea-4090-97d0-9c4f38b2f4a5', '53e5e69cdc404d1bf45a', '{\"data\": {\"root-cert.pem\": \"-----BEGIN CERTIFICATE-----\\nMIIC/DCCAeSgAwIBAgIQIm0uJrxR03UgVKC4hRH+QTANBgkqhkiG9w0BAQsFADAY\\nMRYwFAYDVQQKEw1jbHVzdGVyLmxvY2FsMB4XDTIxMDkxODA5MTUwOVoXDTMxMDkx\\nNjA5MTUwOVowGDEWMBQGA1UEChMNY2x1c3Rlci5sb2NhbDCCASIwDQYJKoZIhvcN\\nAQEBBQADggEPADCCAQoCggEBAMxhNFjEB+bW82xWVKfQUpvZVpQVskQs4bdbPuqM\\ns+4xpe42cfFvnJ4aNdLeespk7l0iNIo4p+WJ0pkkoi1/N+TztbmDOHsRW6h22YsB\\n/kWMf7LpLFBTWIqTe30DAG+DFbvn+yb7eLEdtUpbg3m7sYAZmX5BTxKiO5wl0i0D\\nDBRvqivJrhyDLikh4+xJ+dkxO3WlKJiik8SnzoGLaX2XiLeeRFTde4ynM9xZkA5i\\nwAgy8JTyiZ0rAIgj1DZ9n434IlWHykA7JG4tF2yeEeoJQfIjEK29ToVlLpFp+Cx5\\n/2Xe8CuCVRQJeH3hrDaf43o5HFJ2BIIpAsAUf8Ayd3K/PBUCAwEAAaNCMEAwDgYD\\nVR0PAQH/BAQDAgIEMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFFC+UlUIc2gM\\n1pG6lD1JZVEcrdAMMA0GCSqGSIb3DQEBCwUAA4IBAQCFkiXChryTn/VYRxhKull2\\nq1wdl5xEYqvOt+68krE8kSHh8XrA1mvhhp6rOtPbcNQ4kJulhzAs+IkFN/aygT7r\\nP+Q/JTKuSNNJVFmW1sSCAwcNyCxhNaNJBZL3MCjL7asqsmKxiVNMxYrgvvUgX2x6\\nsbNdjdQkRA9GJSuYTaAlX/vIdHK9XJxv2T/KbD0aB7bszujDP66LJZaq/DkDMePP\\nr1qTBFoEw0edtwFI8ESaQMpFlpQJcCIMdJ12z6EVcnBufEqDwLV1pU4zzB4/3Hzb\\ngAAAx46M4q/b8QareLuufAoOVyABeMjZdWVMGIFIqNSPLYp91iLhPLef3ZgEOPnr\\n-----END CERTIFICATE-----\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"cc029617-88ea-4090-97d0-9c4f38b2f4a5\", \"name\": \"istio-ca-root-cert\", \"labels\": {\"istio.io/config\": \"true\"}, \"namespace\": \"default\", \"managedFields\": [{\"time\": \"2021-08-17T03:57:58Z\", \"manager\": \"pilot-discovery\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:root-cert.pem\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:istio.io/config\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"10588526\", \"creationTimestamp\": \"2021-08-17T03:57:58Z\"}, \"apiVersion\": \"v1\"}', '2021-08-17 11:57:58', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (788, 'ingress-nginx', 'ingress-controller-leader', '', 'v1', 'configmaps', 'ConfigMap', '162259769', '', 'db142c6f-a4ca-4a5e-85d7-b7ff35d207c3', '58a6473f9d6558c9cf7a', '{\"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"db142c6f-a4ca-4a5e-85d7-b7ff35d207c3\", \"name\": \"ingress-controller-leader\", \"namespace\": \"ingress-nginx\", \"annotations\": {\"control-plane.alpha.kubernetes.io/leader\": \"{\\\"holderIdentity\\\":\\\"myingress-ingress-nginx-controller-x9zhc\\\",\\\"leaseDurationSeconds\\\":30,\\\"acquireTime\\\":\\\"2022-01-19T15:57:50Z\\\",\\\"renewTime\\\":\\\"2022-09-27T09:54:44Z\\\",\\\"leaderTransitions\\\":6}\"}, \"managedFields\": [{\"time\": \"2021-08-17T17:21:20Z\", \"manager\": \"nginx-ingress-controller\", \"fieldsV1\": {\"f:metadata\": {\"f:annotations\": {\".\": {}, \"f:control-plane.alpha.kubernetes.io/leader\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"162259769\", \"creationTimestamp\": \"2021-08-17T17:21:20Z\"}, \"apiVersion\": \"v1\"}', '2021-08-18 01:21:20', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (789, 'kube-node-lease', 'kube-root-ca.crt', '', 'v1', 'configmaps', 'ConfigMap', '410', '', '3a3be856-1eee-4986-ac2f-aff6fa102785', '5881d15cca2bd89a7cc7', '{\"data\": {\"ca.crt\": \"-----BEGIN CERTIFICATE-----\\nMIIC/jCCAeagAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\\ncm5ldGVzMB4XDTIxMDgxNjE4MjQ0MVoXDTMxMDgxNDE4MjQ0MVowFTETMBEGA1UE\\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKAQ\\n/td7qUH75HBRNBsJksTZWRSr0ZsBghzsO4FTKz90biavL/XVneiN0YNa7PCqusCR\\nYS6W6vUFepyjWtlYdKdHc6ZRPuAPokxGFOurLXHqdDg/vSgmR1J2bDe25AQ1O/8M\\n/MlBVRLIfsnjMOrPdegYhmQhlqN/qkcy0EYlTWMPxPiBmTiocalPG4OAtDqXmCJj\\ny6/hJhQ7ta1pnaiLWe+b8v99udJ7RGrRAQv5KWRwMY6nwNviV8OAAiEL9nkFIDs5\\n7r5OtHhC6fv4DByj3zZzsdN9JOogrZbnP/6/UtovgYvt8Sv+0Z4q1T5tpV+0EXZi\\n4LFkYy0bXWvWOfppHXUCAwEAAaNZMFcwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB\\n/wQFMAMBAf8wHQYDVR0OBBYEFIHMJBmfKRukQct2JCPpvxdGOP1mMBUGA1UdEQQO\\nMAyCCmt1YmVybmV0ZXMwDQYJKoZIhvcNAQELBQADggEBAFuzNT+/vgIZ2s37cjXB\\nLA2NsR73Yvp4Cg2VcuaDqSD+ZIgp0bSrnHXTcoZIW5KaEJf92FF4kZG1riQaeJFo\\nkzOCH6Xp7qbYp1XsKW+IbbYia1Ps/cY3tG3od6j56tvyokrURI+rBC9QngmhIJPM\\nUGlboIV+xnE2662wMWNu/FsbsW33lTK29gdicAiDPleBCPdtgUDlQyJTSKZuFi8h\\nV6aWCLuFxIkW6l0mLpQIhbc5Jx6uTZ0AFoMd0dPJohttCwZ97Kjew7X1Saimbnox\\naH9EPUfLNWonQ+tBkp5/0krm0LrAhNT5aA5M7tcYKSg5ytTukMdAaJwQWHCH5M1t\\nI9s=\\n-----END CERTIFICATE-----\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"3a3be856-1eee-4986-ac2f-aff6fa102785\", \"name\": \"kube-root-ca.crt\", \"namespace\": \"kube-node-lease\", \"annotations\": {\"kubernetes.io/description\": \"Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters.\"}, \"managedFields\": [{\"time\": \"2021-08-16T18:25:08Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:ca.crt\": {}}, \"f:metadata\": {\"f:annotations\": {\".\": {}, \"f:kubernetes.io/description\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"410\", \"creationTimestamp\": \"2021-08-16T18:25:08Z\"}, \"apiVersion\": \"v1\"}', '2021-08-17 02:25:08', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (790, 'myhost', 'istio-ca-root-cert', '', 'v1', 'configmaps', 'ConfigMap', '155894458', '', '8d2120f7-e443-49c2-9e97-d6ca321e5d72', '24c63012f009ab12700a', '{\"data\": {\"root-cert.pem\": \"-----BEGIN CERTIFICATE-----\\nMIIC/DCCAeSgAwIBAgIQIm0uJrxR03UgVKC4hRH+QTANBgkqhkiG9w0BAQsFADAY\\nMRYwFAYDVQQKEw1jbHVzdGVyLmxvY2FsMB4XDTIxMDkxODA5MTUwOVoXDTMxMDkx\\nNjA5MTUwOVowGDEWMBQGA1UEChMNY2x1c3Rlci5sb2NhbDCCASIwDQYJKoZIhvcN\\nAQEBBQADggEPADCCAQoCggEBAMxhNFjEB+bW82xWVKfQUpvZVpQVskQs4bdbPuqM\\ns+4xpe42cfFvnJ4aNdLeespk7l0iNIo4p+WJ0pkkoi1/N+TztbmDOHsRW6h22YsB\\n/kWMf7LpLFBTWIqTe30DAG+DFbvn+yb7eLEdtUpbg3m7sYAZmX5BTxKiO5wl0i0D\\nDBRvqivJrhyDLikh4+xJ+dkxO3WlKJiik8SnzoGLaX2XiLeeRFTde4ynM9xZkA5i\\nwAgy8JTyiZ0rAIgj1DZ9n434IlWHykA7JG4tF2yeEeoJQfIjEK29ToVlLpFp+Cx5\\n/2Xe8CuCVRQJeH3hrDaf43o5HFJ2BIIpAsAUf8Ayd3K/PBUCAwEAAaNCMEAwDgYD\\nVR0PAQH/BAQDAgIEMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFFC+UlUIc2gM\\n1pG6lD1JZVEcrdAMMA0GCSqGSIb3DQEBCwUAA4IBAQCFkiXChryTn/VYRxhKull2\\nq1wdl5xEYqvOt+68krE8kSHh8XrA1mvhhp6rOtPbcNQ4kJulhzAs+IkFN/aygT7r\\nP+Q/JTKuSNNJVFmW1sSCAwcNyCxhNaNJBZL3MCjL7asqsmKxiVNMxYrgvvUgX2x6\\nsbNdjdQkRA9GJSuYTaAlX/vIdHK9XJxv2T/KbD0aB7bszujDP66LJZaq/DkDMePP\\nr1qTBFoEw0edtwFI8ESaQMpFlpQJcCIMdJ12z6EVcnBufEqDwLV1pU4zzB4/3Hzb\\ngAAAx46M4q/b8QareLuufAoOVyABeMjZdWVMGIFIqNSPLYp91iLhPLef3ZgEOPnr\\n-----END CERTIFICATE-----\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"8d2120f7-e443-49c2-9e97-d6ca321e5d72\", \"name\": \"istio-ca-root-cert\", \"labels\": {\"istio.io/config\": \"true\"}, \"namespace\": \"myhost\", \"managedFields\": [{\"time\": \"2022-08-21T14:56:12Z\", \"manager\": \"pilot-discovery\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:root-cert.pem\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:istio.io/config\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"155894458\", \"creationTimestamp\": \"2022-08-21T14:56:12Z\"}, \"apiVersion\": \"v1\"}', '2022-08-21 22:56:12', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (791, 'default', 'kube-root-ca.crt', '', 'v1', 'configmaps', 'ConfigMap', '411', '', 'a2a9ef23-0367-483c-ad96-af41a1b14e3b', '0d2ed6abd9379656692a', '{\"data\": {\"ca.crt\": \"-----BEGIN CERTIFICATE-----\\nMIIC/jCCAeagAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\\ncm5ldGVzMB4XDTIxMDgxNjE4MjQ0MVoXDTMxMDgxNDE4MjQ0MVowFTETMBEGA1UE\\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKAQ\\n/td7qUH75HBRNBsJksTZWRSr0ZsBghzsO4FTKz90biavL/XVneiN0YNa7PCqusCR\\nYS6W6vUFepyjWtlYdKdHc6ZRPuAPokxGFOurLXHqdDg/vSgmR1J2bDe25AQ1O/8M\\n/MlBVRLIfsnjMOrPdegYhmQhlqN/qkcy0EYlTWMPxPiBmTiocalPG4OAtDqXmCJj\\ny6/hJhQ7ta1pnaiLWe+b8v99udJ7RGrRAQv5KWRwMY6nwNviV8OAAiEL9nkFIDs5\\n7r5OtHhC6fv4DByj3zZzsdN9JOogrZbnP/6/UtovgYvt8Sv+0Z4q1T5tpV+0EXZi\\n4LFkYy0bXWvWOfppHXUCAwEAAaNZMFcwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB\\n/wQFMAMBAf8wHQYDVR0OBBYEFIHMJBmfKRukQct2JCPpvxdGOP1mMBUGA1UdEQQO\\nMAyCCmt1YmVybmV0ZXMwDQYJKoZIhvcNAQELBQADggEBAFuzNT+/vgIZ2s37cjXB\\nLA2NsR73Yvp4Cg2VcuaDqSD+ZIgp0bSrnHXTcoZIW5KaEJf92FF4kZG1riQaeJFo\\nkzOCH6Xp7qbYp1XsKW+IbbYia1Ps/cY3tG3od6j56tvyokrURI+rBC9QngmhIJPM\\nUGlboIV+xnE2662wMWNu/FsbsW33lTK29gdicAiDPleBCPdtgUDlQyJTSKZuFi8h\\nV6aWCLuFxIkW6l0mLpQIhbc5Jx6uTZ0AFoMd0dPJohttCwZ97Kjew7X1Saimbnox\\naH9EPUfLNWonQ+tBkp5/0krm0LrAhNT5aA5M7tcYKSg5ytTukMdAaJwQWHCH5M1t\\nI9s=\\n-----END CERTIFICATE-----\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"a2a9ef23-0367-483c-ad96-af41a1b14e3b\", \"name\": \"kube-root-ca.crt\", \"namespace\": \"default\", \"annotations\": {\"kubernetes.io/description\": \"Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters.\"}, \"managedFields\": [{\"time\": \"2021-08-16T18:25:08Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:ca.crt\": {}}, \"f:metadata\": {\"f:annotations\": {\".\": {}, \"f:kubernetes.io/description\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"411\", \"creationTimestamp\": \"2021-08-16T18:25:08Z\"}, \"apiVersion\": \"v1\"}', '2021-08-17 02:25:08', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (792, 'default', 'myphp', '', 'v1', 'configmaps', 'ConfigMap', '63247854', '', 'ffc27514-c3ae-4e7d-a9e8-1b4ce5661c9f', '7fa67afb667b39dd6aa3', '{\"data\": {\"myage\": \"20\", \"myname\": \"zhangsan\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"ffc27514-c3ae-4e7d-a9e8-1b4ce5661c9f\", \"name\": \"myphp\", \"labels\": {\"ide\": \"phpstorm\", \"best\": \"true\", \"version\": \"7\"}, \"namespace\": \"default\", \"annotations\": {\"app\": \"php\", \"web\": \"true\", \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"data\\\":{\\\"myage\\\":\\\"20\\\",\\\"myname\\\":\\\"zhangsan\\\"},\\\"kind\\\":\\\"ConfigMap\\\",\\\"metadata\\\":{\\\"annotations\\\":{\\\"app\\\":\\\"php\\\",\\\"web\\\":\\\"true\\\"},\\\"labels\\\":{\\\"best\\\":\\\"true\\\",\\\"ide\\\":\\\"phpstorm\\\",\\\"version\\\":\\\"7\\\"},\\\"name\\\":\\\"myphp\\\",\\\"namespace\\\":\\\"default\\\"}}\\n\"}, \"managedFields\": [{\"time\": \"2021-11-27T08:26:49Z\", \"manager\": \"kubectl\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:myage\": {}, \"f:myname\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:ide\": {}, \"f:best\": {}, \"f:version\": {}}, \"f:annotations\": {\".\": {}, \"f:app\": {}, \"f:web\": {}, \"f:kubectl.kubernetes.io/last-applied-configuration\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"63247854\", \"creationTimestamp\": \"2021-11-19T16:59:16Z\"}, \"apiVersion\": \"v1\"}', '2021-11-20 00:59:16', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (793, 'ingress-nginx', 'ingress-controller-leader-nginx', '', 'v1', 'configmaps', 'ConfigMap', '111782', '', 'ee0b6d4a-616d-416e-989c-7ed92ccd299e', '82f4f22634543c230d58', '{\"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"ee0b6d4a-616d-416e-989c-7ed92ccd299e\", \"name\": \"ingress-controller-leader-nginx\", \"namespace\": \"ingress-nginx\", \"annotations\": {\"control-plane.alpha.kubernetes.io/leader\": \"{\\\"holderIdentity\\\":\\\"ingress-ingress-nginx-controller-88v2w\\\",\\\"leaseDurationSeconds\\\":30,\\\"acquireTime\\\":\\\"2021-08-17T14:28:07Z\\\",\\\"renewTime\\\":\\\"2021-08-17T14:31:44Z\\\",\\\"leaderTransitions\\\":0}\"}, \"managedFields\": [{\"time\": \"2021-08-17T14:28:07Z\", \"manager\": \"nginx-ingress-controller\", \"fieldsV1\": {\"f:metadata\": {\"f:annotations\": {\".\": {}, \"f:control-plane.alpha.kubernetes.io/leader\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"111782\", \"creationTimestamp\": \"2021-08-17T14:28:07Z\"}, \"apiVersion\": \"v1\"}', '2021-08-17 22:28:07', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (794, 'myfed', 'kube-root-ca.crt', '', 'v1', 'configmaps', 'ConfigMap', '68408884', '', '24f22642-2746-4994-ba3b-b0235f017bbb', '0ac63a51acfdba672ae8', '{\"data\": {\"ca.crt\": \"-----BEGIN CERTIFICATE-----\\nMIIC/jCCAeagAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\\ncm5ldGVzMB4XDTIxMDgxNjE4MjQ0MVoXDTMxMDgxNDE4MjQ0MVowFTETMBEGA1UE\\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKAQ\\n/td7qUH75HBRNBsJksTZWRSr0ZsBghzsO4FTKz90biavL/XVneiN0YNa7PCqusCR\\nYS6W6vUFepyjWtlYdKdHc6ZRPuAPokxGFOurLXHqdDg/vSgmR1J2bDe25AQ1O/8M\\n/MlBVRLIfsnjMOrPdegYhmQhlqN/qkcy0EYlTWMPxPiBmTiocalPG4OAtDqXmCJj\\ny6/hJhQ7ta1pnaiLWe+b8v99udJ7RGrRAQv5KWRwMY6nwNviV8OAAiEL9nkFIDs5\\n7r5OtHhC6fv4DByj3zZzsdN9JOogrZbnP/6/UtovgYvt8Sv+0Z4q1T5tpV+0EXZi\\n4LFkYy0bXWvWOfppHXUCAwEAAaNZMFcwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB\\n/wQFMAMBAf8wHQYDVR0OBBYEFIHMJBmfKRukQct2JCPpvxdGOP1mMBUGA1UdEQQO\\nMAyCCmt1YmVybmV0ZXMwDQYJKoZIhvcNAQELBQADggEBAFuzNT+/vgIZ2s37cjXB\\nLA2NsR73Yvp4Cg2VcuaDqSD+ZIgp0bSrnHXTcoZIW5KaEJf92FF4kZG1riQaeJFo\\nkzOCH6Xp7qbYp1XsKW+IbbYia1Ps/cY3tG3od6j56tvyokrURI+rBC9QngmhIJPM\\nUGlboIV+xnE2662wMWNu/FsbsW33lTK29gdicAiDPleBCPdtgUDlQyJTSKZuFi8h\\nV6aWCLuFxIkW6l0mLpQIhbc5Jx6uTZ0AFoMd0dPJohttCwZ97Kjew7X1Saimbnox\\naH9EPUfLNWonQ+tBkp5/0krm0LrAhNT5aA5M7tcYKSg5ytTukMdAaJwQWHCH5M1t\\nI9s=\\n-----END CERTIFICATE-----\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"24f22642-2746-4994-ba3b-b0235f017bbb\", \"name\": \"kube-root-ca.crt\", \"namespace\": \"myfed\", \"annotations\": {\"kubernetes.io/description\": \"Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters.\"}, \"managedFields\": [{\"time\": \"2021-12-04T08:47:24Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:ca.crt\": {}}, \"f:metadata\": {\"f:annotations\": {\".\": {}, \"f:kubernetes.io/description\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"68408884\", \"creationTimestamp\": \"2021-12-04T08:47:24Z\"}, \"apiVersion\": \"v1\"}', '2021-12-04 16:47:24', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (795, 'myhost', 'vc-cidr-myvc1', '', 'v1', 'configmaps', 'ConfigMap', '157248262', '', 'e16fcdd1-ddf6-40e7-8f89-6a5543cb5798', '97535701770f3448f8c5', '{\"data\": {\"cidr\": \"10.96.0.0/12\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"e16fcdd1-ddf6-40e7-8f89-6a5543cb5798\", \"name\": \"vc-cidr-myvc1\", \"namespace\": \"myhost\", \"managedFields\": [{\"time\": \"2022-08-29T10:14:46Z\", \"manager\": \"vcluster\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:cidr\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"157248262\", \"creationTimestamp\": \"2022-08-29T10:14:46Z\"}, \"apiVersion\": \"v1\"}', '2022-08-29 18:14:46', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (796, 'default', 'config-logging-triggers', '', 'v1', 'configmaps', 'ConfigMap', '4613700', '', 'befc1416-fdf8-4acf-b4db-886f06a59f9d', '7265318bd6e203aa672d', '{\"data\": {\"zap-logger-config\": \"{\\\"level\\\": \\\"info\\\",\\\"development\\\": false,\\\"sampling\\\": {\\\"initial\\\": 100,\\\"thereafter\\\": 100},\\\"outputPaths\\\": [\\\"stdout\\\"],\\\"errorOutputPaths\\\": [\\\"stderr\\\"],\\\"encoding\\\": \\\"json\\\",\\\"encoderConfig\\\": {\\\"timeKey\\\": \\\"ts\\\",\\\"levelKey\\\": \\\"level\\\",\\\"nameKey\\\": \\\"logger\\\",\\\"callerKey\\\": \\\"caller\\\",\\\"messageKey\\\": \\\"msg\\\",\\\"stacktraceKey\\\": \\\"stacktrace\\\",\\\"lineEnding\\\": \\\"\\\",\\\"levelEncoder\\\": \\\"\\\",\\\"timeEncoder\\\": \\\"iso8601\\\",\\\"durationEncoder\\\": \\\"\\\",\\\"callerEncoder\\\": \\\"\\\"}}\", \"loglevel.eventlistener\": \"info\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"befc1416-fdf8-4acf-b4db-886f06a59f9d\", \"name\": \"config-logging-triggers\", \"namespace\": \"default\", \"managedFields\": [{\"time\": \"2021-09-10T09:22:07Z\", \"manager\": \"controller\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:zap-logger-config\": {}, \"f:loglevel.eventlistener\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"4613700\", \"creationTimestamp\": \"2021-09-10T09:22:07Z\"}, \"apiVersion\": \"v1\"}', '2021-09-10 17:22:07', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (797, 'argocd', 'argocd-rbac-cm', '', 'v1', 'configmaps', 'ConfigMap', '31177026', '', '43fd2d4a-3edd-4d02-8ac8-6b41b66617d9', '90f9710462135f0f74b1', '{\"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"43fd2d4a-3edd-4d02-8ac8-6b41b66617d9\", \"name\": \"argocd-rbac-cm\", \"labels\": {\"app.kubernetes.io/name\": \"argocd-rbac-cm\", \"app.kubernetes.io/part-of\": \"argocd\"}, \"namespace\": \"argocd\", \"annotations\": {\"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"ConfigMap\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app.kubernetes.io/name\\\":\\\"argocd-rbac-cm\\\",\\\"app.kubernetes.io/part-of\\\":\\\"argocd\\\"},\\\"name\\\":\\\"argocd-rbac-cm\\\",\\\"namespace\\\":\\\"argocd\\\"}}\\n\"}, \"managedFields\": [{\"time\": \"2021-10-15T10:23:22Z\", \"manager\": \"kubectl-client-side-apply\", \"fieldsV1\": {\"f:metadata\": {\"f:labels\": {\".\": {}, \"f:app.kubernetes.io/name\": {}, \"f:app.kubernetes.io/part-of\": {}}, \"f:annotations\": {\".\": {}, \"f:kubectl.kubernetes.io/last-applied-configuration\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"31177026\", \"creationTimestamp\": \"2021-10-15T10:23:22Z\"}, \"apiVersion\": \"v1\"}', '2021-10-15 18:23:22', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (798, 'cattle-system', 'kube-root-ca.crt', '', 'v1', 'configmaps', 'ConfigMap', '12083465', '', 'e0023631-6ec3-49c9-ab7b-e14e2341706e', 'e5eceb491b6c3120a2cd', '{\"data\": {\"ca.crt\": \"-----BEGIN CERTIFICATE-----\\nMIIC/jCCAeagAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\\ncm5ldGVzMB4XDTIxMDgxNjE4MjQ0MVoXDTMxMDgxNDE4MjQ0MVowFTETMBEGA1UE\\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKAQ\\n/td7qUH75HBRNBsJksTZWRSr0ZsBghzsO4FTKz90biavL/XVneiN0YNa7PCqusCR\\nYS6W6vUFepyjWtlYdKdHc6ZRPuAPokxGFOurLXHqdDg/vSgmR1J2bDe25AQ1O/8M\\n/MlBVRLIfsnjMOrPdegYhmQhlqN/qkcy0EYlTWMPxPiBmTiocalPG4OAtDqXmCJj\\ny6/hJhQ7ta1pnaiLWe+b8v99udJ7RGrRAQv5KWRwMY6nwNviV8OAAiEL9nkFIDs5\\n7r5OtHhC6fv4DByj3zZzsdN9JOogrZbnP/6/UtovgYvt8Sv+0Z4q1T5tpV+0EXZi\\n4LFkYy0bXWvWOfppHXUCAwEAAaNZMFcwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB\\n/wQFMAMBAf8wHQYDVR0OBBYEFIHMJBmfKRukQct2JCPpvxdGOP1mMBUGA1UdEQQO\\nMAyCCmt1YmVybmV0ZXMwDQYJKoZIhvcNAQELBQADggEBAFuzNT+/vgIZ2s37cjXB\\nLA2NsR73Yvp4Cg2VcuaDqSD+ZIgp0bSrnHXTcoZIW5KaEJf92FF4kZG1riQaeJFo\\nkzOCH6Xp7qbYp1XsKW+IbbYia1Ps/cY3tG3od6j56tvyokrURI+rBC9QngmhIJPM\\nUGlboIV+xnE2662wMWNu/FsbsW33lTK29gdicAiDPleBCPdtgUDlQyJTSKZuFi8h\\nV6aWCLuFxIkW6l0mLpQIhbc5Jx6uTZ0AFoMd0dPJohttCwZ97Kjew7X1Saimbnox\\naH9EPUfLNWonQ+tBkp5/0krm0LrAhNT5aA5M7tcYKSg5ytTukMdAaJwQWHCH5M1t\\nI9s=\\n-----END CERTIFICATE-----\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"e0023631-6ec3-49c9-ab7b-e14e2341706e\", \"name\": \"kube-root-ca.crt\", \"namespace\": \"cattle-system\", \"annotations\": {\"kubernetes.io/description\": \"Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters.\"}, \"managedFields\": [{\"time\": \"2021-09-20T08:20:24Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:ca.crt\": {}}, \"f:metadata\": {\"f:annotations\": {\".\": {}, \"f:kubernetes.io/description\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"12083465\", \"creationTimestamp\": \"2021-09-20T08:20:24Z\"}, \"apiVersion\": \"v1\"}', '2021-09-20 16:20:24', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (799, 'istio-system', 'kube-root-ca.crt', '', 'v1', 'configmaps', 'ConfigMap', '10588368', '', '71514de0-1551-4009-9206-7555c911db46', '5fa6828ad9afc9dd7b8f', '{\"data\": {\"ca.crt\": \"-----BEGIN CERTIFICATE-----\\nMIIC/jCCAeagAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\\ncm5ldGVzMB4XDTIxMDgxNjE4MjQ0MVoXDTMxMDgxNDE4MjQ0MVowFTETMBEGA1UE\\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKAQ\\n/td7qUH75HBRNBsJksTZWRSr0ZsBghzsO4FTKz90biavL/XVneiN0YNa7PCqusCR\\nYS6W6vUFepyjWtlYdKdHc6ZRPuAPokxGFOurLXHqdDg/vSgmR1J2bDe25AQ1O/8M\\n/MlBVRLIfsnjMOrPdegYhmQhlqN/qkcy0EYlTWMPxPiBmTiocalPG4OAtDqXmCJj\\ny6/hJhQ7ta1pnaiLWe+b8v99udJ7RGrRAQv5KWRwMY6nwNviV8OAAiEL9nkFIDs5\\n7r5OtHhC6fv4DByj3zZzsdN9JOogrZbnP/6/UtovgYvt8Sv+0Z4q1T5tpV+0EXZi\\n4LFkYy0bXWvWOfppHXUCAwEAAaNZMFcwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB\\n/wQFMAMBAf8wHQYDVR0OBBYEFIHMJBmfKRukQct2JCPpvxdGOP1mMBUGA1UdEQQO\\nMAyCCmt1YmVybmV0ZXMwDQYJKoZIhvcNAQELBQADggEBAFuzNT+/vgIZ2s37cjXB\\nLA2NsR73Yvp4Cg2VcuaDqSD+ZIgp0bSrnHXTcoZIW5KaEJf92FF4kZG1riQaeJFo\\nkzOCH6Xp7qbYp1XsKW+IbbYia1Ps/cY3tG3od6j56tvyokrURI+rBC9QngmhIJPM\\nUGlboIV+xnE2662wMWNu/FsbsW33lTK29gdicAiDPleBCPdtgUDlQyJTSKZuFi8h\\nV6aWCLuFxIkW6l0mLpQIhbc5Jx6uTZ0AFoMd0dPJohttCwZ97Kjew7X1Saimbnox\\naH9EPUfLNWonQ+tBkp5/0krm0LrAhNT5aA5M7tcYKSg5ytTukMdAaJwQWHCH5M1t\\nI9s=\\n-----END CERTIFICATE-----\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"71514de0-1551-4009-9206-7555c911db46\", \"name\": \"kube-root-ca.crt\", \"namespace\": \"istio-system\", \"annotations\": {\"kubernetes.io/description\": \"Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters.\"}, \"managedFields\": [{\"time\": \"2021-09-18T09:15:13Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:ca.crt\": {}}, \"f:metadata\": {\"f:annotations\": {\".\": {}, \"f:kubernetes.io/description\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"10588368\", \"creationTimestamp\": \"2021-09-18T09:15:13Z\"}, \"apiVersion\": \"v1\"}', '2021-09-18 17:15:13', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (800, 'kube-public', 'cluster-info', '', 'v1', 'configmaps', 'ConfigMap', '136506', '', 'a845a657-4056-493d-99a3-7f9f601130f5', '828594d0158c5980e9d4', '{\"data\": {\"kubeconfig\": \"apiVersion: v1\\nclusters:\\n- cluster:\\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1EZ3hOakU0TWpRME1Wb1hEVE14TURneE5ERTRNalEwTVZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS0FRCi90ZDdxVUg3NUhCUk5Cc0prc1RaV1JTcjBac0JnaHpzTzRGVEt6OTBiaWF2TC9YVm5laU4wWU5hN1BDcXVzQ1IKWVM2VzZ2VUZlcHlqV3RsWWRLZEhjNlpSUHVBUG9reEdGT3VyTFhIcWREZy92U2dtUjFKMmJEZTI1QVExTy84TQovTWxCVlJMSWZzbmpNT3JQZGVnWWhtUWhscU4vcWtjeTBFWWxUV01QeFBpQm1UaW9jYWxQRzRPQXREcVhtQ0pqCnk2L2hKaFE3dGExcG5haUxXZStiOHY5OXVkSjdSR3JSQVF2NUtXUndNWTZud052aVY4T0FBaUVMOW5rRklEczUKN3I1T3RIaEM2ZnY0REJ5ajN6WnpzZE45Sk9vZ3JaYm5QLzYvVXRvdmdZdnQ4U3YrMFo0cTFUNXRwViswRVhaaQo0TEZrWXkwYlhXdldPZnBwSFhVQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZJSE1KQm1mS1J1a1FjdDJKQ1BwdnhkR09QMW1NQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRnV6TlQrL3ZnSVoyczM3Y2pYQgpMQTJOc1I3M1l2cDRDZzJWY3VhRHFTRCtaSWdwMGJTcm5IWFRjb1pJVzVLYUVKZjkyRkY0a1pHMXJpUWFlSkZvCmt6T0NINlhwN3FiWXAxWHNLVytJYmJZaWExUHMvY1kzdEczb2Q2ajU2dHZ5b2tyVVJJK3JCQzlRbmdtaElKUE0KVUdsYm9JVit4bkUyNjYyd01XTnUvRnNic1czM2xUSzI5Z2RpY0FpRFBsZUJDUGR0Z1VEbFF5SlRTS1p1Rmk4aApWNmFXQ0x1RnhJa1c2bDBtTHBRSWhiYzVKeDZ1VFowQUZvTWQwZFBKb2h0dEN3Wjk3S2pldzdYMVNhaW1ibm94CmFIOUVQVWZMTldvblErdEJrcDUvMGtybTBMckFoTlQ1YUE1TTd0Y1lLU2c1eXRUdWtNZEFhSndRV0hDSDVNMXQKSTlzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\\n    server: https://172.17.70.144:6443\\n  name: \\\"\\\"\\ncontexts: null\\ncurrent-context: \\\"\\\"\\nkind: Config\\npreferences: {}\\nusers: null\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"a845a657-4056-493d-99a3-7f9f601130f5\", \"name\": \"cluster-info\", \"namespace\": \"kube-public\", \"managedFields\": [{\"time\": \"2021-08-16T18:24:54Z\", \"manager\": \"kubeadm\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:kubeconfig\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"136506\", \"creationTimestamp\": \"2021-08-16T18:24:54Z\"}, \"apiVersion\": \"v1\"}', '2021-08-17 02:24:54', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (801, 'kube-system', 'coredns', '', 'v1', 'configmaps', 'ConfigMap', '233', '', '84bd8b2e-2131-4f57-8552-9eff3667b42b', '44b65a2f60ea92b5ca92', '{\"data\": {\"Corefile\": \".:53 {\\n    errors\\n    health {\\n       lameduck 5s\\n    }\\n    ready\\n    kubernetes cluster.local in-addr.arpa ip6.arpa {\\n       pods insecure\\n       fallthrough in-addr.arpa ip6.arpa\\n       ttl 30\\n    }\\n    prometheus :9153\\n    forward . /etc/resolv.conf {\\n       max_concurrent 1000\\n    }\\n    cache 30\\n    loop\\n    reload\\n    loadbalance\\n}\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"84bd8b2e-2131-4f57-8552-9eff3667b42b\", \"name\": \"coredns\", \"namespace\": \"kube-system\", \"managedFields\": [{\"time\": \"2021-08-16T18:24:55Z\", \"manager\": \"kubeadm\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:Corefile\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"233\", \"creationTimestamp\": \"2021-08-16T18:24:55Z\"}, \"apiVersion\": \"v1\"}', '2021-08-17 02:24:55', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (802, 'kube-system', 'kubeadm-config', '', 'v1', 'configmaps', 'ConfigMap', '1451714', '', '4a5b51ec-bb90-49c8-8d33-428f3ad8f110', '7d476f5c7d020b49575e', '{\"data\": {\"ClusterConfiguration\": \"apiServer:\\n  certSANs:\\n  - 127.0.0.1\\n  - 39.105.28.235\\n  extraArgs:\\n    authorization-mode: Node,RBAC\\n  timeoutForControlPlane: 4m0s\\napiVersion: kubeadm.k8s.io/v1beta3\\ncertificatesDir: /etc/kubernetes/pki\\nclusterName: kubernetes\\ncontrollerManager: {}\\ndns: {}\\netcd:\\n  local:\\n    dataDir: /var/lib/etcd\\nimageRepository: k8s.gcr.io\\nkind: ClusterConfiguration\\nkubernetesVersion: v1.22.0\\nnetworking:\\n  dnsDomain: cluster.local\\n  podSubnet: 10.244.0.0/16\\n  serviceSubnet: 10.96.0.0/12\\nscheduler: {}\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"4a5b51ec-bb90-49c8-8d33-428f3ad8f110\", \"name\": \"kubeadm-config\", \"namespace\": \"kube-system\", \"managedFields\": [{\"time\": \"2021-08-16T18:24:53Z\", \"manager\": \"kubeadm\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:ClusterConfiguration\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"1451714\", \"creationTimestamp\": \"2021-08-16T18:24:53Z\"}, \"apiVersion\": \"v1\"}', '2021-08-17 02:24:53', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (803, 'myhost', 'vc-cidr-my-vcluster', '', 'v1', 'configmaps', 'ConfigMap', '155894706', '', 'fc5cf6c5-23a4-433e-b448-38c25c6f854b', 'e6dbac7a0ea37d32c307', '{\"data\": {\"cidr\": \"10.96.0.0/12\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"fc5cf6c5-23a4-433e-b448-38c25c6f854b\", \"name\": \"vc-cidr-my-vcluster\", \"namespace\": \"myhost\", \"managedFields\": [{\"time\": \"2022-08-21T14:57:57Z\", \"manager\": \"vcluster\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:cidr\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"155894706\", \"creationTimestamp\": \"2022-08-21T14:57:57Z\"}, \"apiVersion\": \"v1\"}', '2022-08-21 22:57:57', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (804, 'argocd', 'istio-ca-root-cert', '', 'v1', 'configmaps', 'ConfigMap', '18084258', '', 'd7dd6225-c883-4986-8d9f-edb84d479920', '03ef0568830f04109c1a', '{\"data\": {\"root-cert.pem\": \"-----BEGIN CERTIFICATE-----\\nMIIC/DCCAeSgAwIBAgIQIm0uJrxR03UgVKC4hRH+QTANBgkqhkiG9w0BAQsFADAY\\nMRYwFAYDVQQKEw1jbHVzdGVyLmxvY2FsMB4XDTIxMDkxODA5MTUwOVoXDTMxMDkx\\nNjA5MTUwOVowGDEWMBQGA1UEChMNY2x1c3Rlci5sb2NhbDCCASIwDQYJKoZIhvcN\\nAQEBBQADggEPADCCAQoCggEBAMxhNFjEB+bW82xWVKfQUpvZVpQVskQs4bdbPuqM\\ns+4xpe42cfFvnJ4aNdLeespk7l0iNIo4p+WJ0pkkoi1/N+TztbmDOHsRW6h22YsB\\n/kWMf7LpLFBTWIqTe30DAG+DFbvn+yb7eLEdtUpbg3m7sYAZmX5BTxKiO5wl0i0D\\nDBRvqivJrhyDLikh4+xJ+dkxO3WlKJiik8SnzoGLaX2XiLeeRFTde4ynM9xZkA5i\\nwAgy8JTyiZ0rAIgj1DZ9n434IlWHykA7JG4tF2yeEeoJQfIjEK29ToVlLpFp+Cx5\\n/2Xe8CuCVRQJeH3hrDaf43o5HFJ2BIIpAsAUf8Ayd3K/PBUCAwEAAaNCMEAwDgYD\\nVR0PAQH/BAQDAgIEMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFFC+UlUIc2gM\\n1pG6lD1JZVEcrdAMMA0GCSqGSIb3DQEBCwUAA4IBAQCFkiXChryTn/VYRxhKull2\\nq1wdl5xEYqvOt+68krE8kSHh8XrA1mvhhp6rOtPbcNQ4kJulhzAs+IkFN/aygT7r\\nP+Q/JTKuSNNJVFmW1sSCAwcNyCxhNaNJBZL3MCjL7asqsmKxiVNMxYrgvvUgX2x6\\nsbNdjdQkRA9GJSuYTaAlX/vIdHK9XJxv2T/KbD0aB7bszujDP66LJZaq/DkDMePP\\nr1qTBFoEw0edtwFI8ESaQMpFlpQJcCIMdJ12z6EVcnBufEqDwLV1pU4zzB4/3Hzb\\ngAAAx46M4q/b8QareLuufAoOVyABeMjZdWVMGIFIqNSPLYp91iLhPLef3ZgEOPnr\\n-----END CERTIFICATE-----\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"d7dd6225-c883-4986-8d9f-edb84d479920\", \"name\": \"istio-ca-root-cert\", \"labels\": {\"istio.io/config\": \"true\"}, \"namespace\": \"argocd\", \"managedFields\": [{\"time\": \"2021-09-28T05:23:09Z\", \"manager\": \"pilot-discovery\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:root-cert.pem\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:istio.io/config\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"18084258\", \"creationTimestamp\": \"2021-09-28T05:23:09Z\"}, \"apiVersion\": \"v1\"}', '2021-09-28 13:23:09', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (805, 'istio-system', 'istio-namespace-controller-election', '', 'v1', 'configmaps', 'ConfigMap', '162259766', '', '363cc4ed-5e02-4527-a2e6-aeeed98237d2', '7923af31e72309b6d18d', '{\"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"363cc4ed-5e02-4527-a2e6-aeeed98237d2\", \"name\": \"istio-namespace-controller-election\", \"namespace\": \"istio-system\", \"annotations\": {\"control-plane.alpha.kubernetes.io/leader\": \"{\\\"holderIdentity\\\":\\\"istiod-5b6d7d4cb5-lgv9m\\\",\\\"holderKey\\\":\\\"default\\\",\\\"leaseDurationSeconds\\\":30,\\\"acquireTime\\\":\\\"2022-05-19T05:17:12Z\\\",\\\"renewTime\\\":\\\"2022-09-27T09:54:17Z\\\",\\\"leaderTransitions\\\":4}\"}, \"managedFields\": [{\"time\": \"2021-09-18T09:15:22Z\", \"manager\": \"pilot-discovery\", \"fieldsV1\": {\"f:metadata\": {\"f:annotations\": {\".\": {}, \"f:control-plane.alpha.kubernetes.io/leader\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"162259766\", \"creationTimestamp\": \"2021-09-18T09:15:22Z\"}, \"apiVersion\": \"v1\"}', '2021-09-18 17:15:22', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (806, 'web2', 'kube-root-ca.crt', '', 'v1', 'configmaps', 'ConfigMap', '124910984', '', 'bb220bc7-c39d-4e6a-ac9a-f4f015fde910', '6e96c3f19a9bec19589a', '{\"data\": {\"ca.crt\": \"-----BEGIN CERTIFICATE-----\\nMIIC/jCCAeagAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\\ncm5ldGVzMB4XDTIxMDgxNjE4MjQ0MVoXDTMxMDgxNDE4MjQ0MVowFTETMBEGA1UE\\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKAQ\\n/td7qUH75HBRNBsJksTZWRSr0ZsBghzsO4FTKz90biavL/XVneiN0YNa7PCqusCR\\nYS6W6vUFepyjWtlYdKdHc6ZRPuAPokxGFOurLXHqdDg/vSgmR1J2bDe25AQ1O/8M\\n/MlBVRLIfsnjMOrPdegYhmQhlqN/qkcy0EYlTWMPxPiBmTiocalPG4OAtDqXmCJj\\ny6/hJhQ7ta1pnaiLWe+b8v99udJ7RGrRAQv5KWRwMY6nwNviV8OAAiEL9nkFIDs5\\n7r5OtHhC6fv4DByj3zZzsdN9JOogrZbnP/6/UtovgYvt8Sv+0Z4q1T5tpV+0EXZi\\n4LFkYy0bXWvWOfppHXUCAwEAAaNZMFcwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB\\n/wQFMAMBAf8wHQYDVR0OBBYEFIHMJBmfKRukQct2JCPpvxdGOP1mMBUGA1UdEQQO\\nMAyCCmt1YmVybmV0ZXMwDQYJKoZIhvcNAQELBQADggEBAFuzNT+/vgIZ2s37cjXB\\nLA2NsR73Yvp4Cg2VcuaDqSD+ZIgp0bSrnHXTcoZIW5KaEJf92FF4kZG1riQaeJFo\\nkzOCH6Xp7qbYp1XsKW+IbbYia1Ps/cY3tG3od6j56tvyokrURI+rBC9QngmhIJPM\\nUGlboIV+xnE2662wMWNu/FsbsW33lTK29gdicAiDPleBCPdtgUDlQyJTSKZuFi8h\\nV6aWCLuFxIkW6l0mLpQIhbc5Jx6uTZ0AFoMd0dPJohttCwZ97Kjew7X1Saimbnox\\naH9EPUfLNWonQ+tBkp5/0krm0LrAhNT5aA5M7tcYKSg5ytTukMdAaJwQWHCH5M1t\\nI9s=\\n-----END CERTIFICATE-----\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"bb220bc7-c39d-4e6a-ac9a-f4f015fde910\", \"name\": \"kube-root-ca.crt\", \"namespace\": \"web2\", \"annotations\": {\"kubernetes.io/description\": \"Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters.\"}, \"managedFields\": [{\"time\": \"2022-03-17T09:04:14Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:ca.crt\": {}}, \"f:metadata\": {\"f:annotations\": {\".\": {}, \"f:kubernetes.io/description\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"124910984\", \"creationTimestamp\": \"2022-03-17T09:04:14Z\"}, \"apiVersion\": \"v1\"}', '2022-03-17 17:04:14', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (807, 'myhost', 'vc-cidr-my-vcluster2', '', 'v1', 'configmaps', 'ConfigMap', '156216244', '', 'c5546be0-9f4e-4dcf-b847-c88a1902c9e0', 'f4149935cea1762b8cc7', '{\"data\": {\"cidr\": \"10.96.0.0/12\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"c5546be0-9f4e-4dcf-b847-c88a1902c9e0\", \"name\": \"vc-cidr-my-vcluster2\", \"namespace\": \"myhost\", \"managedFields\": [{\"time\": \"2022-08-23T11:31:07Z\", \"manager\": \"vcluster\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:cidr\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"156216244\", \"creationTimestamp\": \"2022-08-23T11:31:07Z\"}, \"apiVersion\": \"v1\"}', '2022-08-23 19:31:07', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (808, 'default', 'myjava', '', 'v1', 'configmaps', 'ConfigMap', '63247853', '', '3c81c0b9-f94f-423b-9ee4-475d33151a03', '77fd459cc39d076bca5f', '{\"data\": {\"myage\": \"19\", \"myname\": \"shenyi\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"3c81c0b9-f94f-423b-9ee4-475d33151a03\", \"name\": \"myjava\", \"labels\": {\"jdk\": \"1.8\", \"user\": \"shenyi\", \"framework\": \"spring-boot\"}, \"namespace\": \"default\", \"annotations\": {\"app\": \"java\", \"web\": \"true\", \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"data\\\":{\\\"myage\\\":\\\"19\\\",\\\"myname\\\":\\\"shenyi\\\"},\\\"kind\\\":\\\"ConfigMap\\\",\\\"metadata\\\":{\\\"annotations\\\":{\\\"app\\\":\\\"java\\\",\\\"web\\\":\\\"true\\\"},\\\"labels\\\":{\\\"framework\\\":\\\"spring-boot\\\",\\\"jdk\\\":\\\"1.8\\\",\\\"user\\\":\\\"shenyi\\\"},\\\"name\\\":\\\"myjava\\\",\\\"namespace\\\":\\\"default\\\"}}\\n\"}, \"managedFields\": [{\"time\": \"2021-11-27T08:26:49Z\", \"manager\": \"kubectl\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:myage\": {}, \"f:myname\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:jdk\": {}, \"f:user\": {}, \"f:framework\": {}}, \"f:annotations\": {\".\": {}, \"f:app\": {}, \"f:web\": {}, \"f:kubectl.kubernetes.io/last-applied-configuration\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"63247853\", \"creationTimestamp\": \"2021-11-19T16:59:16Z\"}, \"apiVersion\": \"v1\"}', '2021-11-20 00:59:16', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (809, 'ingress-nginx', 'istio-ca-root-cert', '', 'v1', 'configmaps', 'ConfigMap', '10588518', '', 'f7dfcf17-0564-481f-ae91-3ba2b8396b18', '8516178c9982510ad4b8', '{\"data\": {\"root-cert.pem\": \"-----BEGIN CERTIFICATE-----\\nMIIC/DCCAeSgAwIBAgIQIm0uJrxR03UgVKC4hRH+QTANBgkqhkiG9w0BAQsFADAY\\nMRYwFAYDVQQKEw1jbHVzdGVyLmxvY2FsMB4XDTIxMDkxODA5MTUwOVoXDTMxMDkx\\nNjA5MTUwOVowGDEWMBQGA1UEChMNY2x1c3Rlci5sb2NhbDCCASIwDQYJKoZIhvcN\\nAQEBBQADggEPADCCAQoCggEBAMxhNFjEB+bW82xWVKfQUpvZVpQVskQs4bdbPuqM\\ns+4xpe42cfFvnJ4aNdLeespk7l0iNIo4p+WJ0pkkoi1/N+TztbmDOHsRW6h22YsB\\n/kWMf7LpLFBTWIqTe30DAG+DFbvn+yb7eLEdtUpbg3m7sYAZmX5BTxKiO5wl0i0D\\nDBRvqivJrhyDLikh4+xJ+dkxO3WlKJiik8SnzoGLaX2XiLeeRFTde4ynM9xZkA5i\\nwAgy8JTyiZ0rAIgj1DZ9n434IlWHykA7JG4tF2yeEeoJQfIjEK29ToVlLpFp+Cx5\\n/2Xe8CuCVRQJeH3hrDaf43o5HFJ2BIIpAsAUf8Ayd3K/PBUCAwEAAaNCMEAwDgYD\\nVR0PAQH/BAQDAgIEMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFFC+UlUIc2gM\\n1pG6lD1JZVEcrdAMMA0GCSqGSIb3DQEBCwUAA4IBAQCFkiXChryTn/VYRxhKull2\\nq1wdl5xEYqvOt+68krE8kSHh8XrA1mvhhp6rOtPbcNQ4kJulhzAs+IkFN/aygT7r\\nP+Q/JTKuSNNJVFmW1sSCAwcNyCxhNaNJBZL3MCjL7asqsmKxiVNMxYrgvvUgX2x6\\nsbNdjdQkRA9GJSuYTaAlX/vIdHK9XJxv2T/KbD0aB7bszujDP66LJZaq/DkDMePP\\nr1qTBFoEw0edtwFI8ESaQMpFlpQJcCIMdJ12z6EVcnBufEqDwLV1pU4zzB4/3Hzb\\ngAAAx46M4q/b8QareLuufAoOVyABeMjZdWVMGIFIqNSPLYp91iLhPLef3ZgEOPnr\\n-----END CERTIFICATE-----\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"f7dfcf17-0564-481f-ae91-3ba2b8396b18\", \"name\": \"istio-ca-root-cert\", \"labels\": {\"istio.io/config\": \"true\"}, \"namespace\": \"ingress-nginx\", \"managedFields\": [{\"time\": \"2021-08-17T14:27:14Z\", \"manager\": \"pilot-discovery\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:root-cert.pem\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:istio.io/config\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"10588518\", \"creationTimestamp\": \"2021-08-17T14:27:14Z\"}, \"apiVersion\": \"v1\"}', '2021-08-17 22:27:14', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (810, 'istio-system', 'istio', '', 'v1', 'configmaps', 'ConfigMap', '137981291', '', '51deb490-3a66-40cd-b1a1-764b1229b027', '0cbec02486f9e1214850', '{\"data\": {\"mesh\": \"defaultConfig:\\n  discoveryAddress: istiod.istio-system.svc:15012\\n  proxyMetadata: {}\\n  tracing:\\n    zipkin:\\n      address: zipkin.istio-system:9411\\nenablePrometheusMerge: true\\nrootNamespace: istio-system\\ntrustDomain: cluster.local\", \"meshNetworks\": \"networks: {}\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"51deb490-3a66-40cd-b1a1-764b1229b027\", \"name\": \"istio\", \"labels\": {\"release\": \"istio\", \"istio.io/rev\": \"default\", \"operator.istio.io/managed\": \"Reconcile\", \"operator.istio.io/version\": \"1.13.2\", \"operator.istio.io/component\": \"Pilot\", \"install.operator.istio.io/owning-resource\": \"ingress\", \"install.operator.istio.io/owning-resource-namespace\": \"istio-system\"}, \"namespace\": \"istio-system\", \"annotations\": {\"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"data\\\":{\\\"mesh\\\":\\\"defaultConfig:\\\\n  discoveryAddress: istiod.istio-system.svc:15012\\\\n  proxyMetadata: {}\\\\n  tracing:\\\\n    zipkin:\\\\n      address: zipkin.istio-system:9411\\\\nenablePrometheusMerge: true\\\\nrootNamespace: istio-system\\\\ntrustDomain: cluster.local\\\",\\\"meshNetworks\\\":\\\"networks: {}\\\"},\\\"kind\\\":\\\"ConfigMap\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"install.operator.istio.io/owning-resource\\\":\\\"ingress\\\",\\\"install.operator.istio.io/owning-resource-namespace\\\":\\\"istio-system\\\",\\\"istio.io/rev\\\":\\\"default\\\",\\\"operator.istio.io/component\\\":\\\"Pilot\\\",\\\"operator.istio.io/managed\\\":\\\"Reconcile\\\",\\\"operator.istio.io/version\\\":\\\"1.13.2\\\",\\\"release\\\":\\\"istio\\\"},\\\"name\\\":\\\"istio\\\",\\\"namespace\\\":\\\"istio-system\\\"}}\\n\"}, \"managedFields\": [{\"time\": \"2022-05-19T05:11:42Z\", \"manager\": \"istio-operator\", \"fieldsV1\": {\"f:data\": {\"f:mesh\": {}, \"f:meshNetworks\": {}}, \"f:metadata\": {\"f:labels\": {\"f:release\": {}, \"f:istio.io/rev\": {}, \"f:operator.istio.io/managed\": {}, \"f:operator.istio.io/version\": {}, \"f:operator.istio.io/component\": {}, \"f:install.operator.istio.io/owning-resource\": {}, \"f:install.operator.istio.io/owning-resource-namespace\": {}}, \"f:annotations\": {\"f:kubectl.kubernetes.io/last-applied-configuration\": {}}}}, \"operation\": \"Apply\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"137981291\", \"creationTimestamp\": \"2022-05-19T05:11:42Z\"}, \"apiVersion\": \"v1\"}', '2022-05-19 13:11:42', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (811, 'kube-system', 'kubelet-config-1.22', '', 'v1', 'configmaps', 'ConfigMap', '215', '', 'cd9b2a26-0a41-4fa8-a01d-e72c09466e74', 'af5baffe8b646ad6637a', '{\"data\": {\"kubelet\": \"apiVersion: kubelet.config.k8s.io/v1beta1\\nauthentication:\\n  anonymous:\\n    enabled: false\\n  webhook:\\n    cacheTTL: 0s\\n    enabled: true\\n  x509:\\n    clientCAFile: /etc/kubernetes/pki/ca.crt\\nauthorization:\\n  mode: Webhook\\n  webhook:\\n    cacheAuthorizedTTL: 0s\\n    cacheUnauthorizedTTL: 0s\\ncgroupDriver: systemd\\nclusterDNS:\\n- 10.96.0.10\\nclusterDomain: cluster.local\\ncpuManagerReconcilePeriod: 0s\\nevictionPressureTransitionPeriod: 0s\\nfileCheckFrequency: 0s\\nhealthzBindAddress: 127.0.0.1\\nhealthzPort: 10248\\nhttpCheckFrequency: 0s\\nimageMinimumGCAge: 0s\\nkind: KubeletConfiguration\\nlogging: {}\\nmemorySwap: {}\\nnodeStatusReportFrequency: 0s\\nnodeStatusUpdateFrequency: 0s\\nrotateCertificates: true\\nruntimeRequestTimeout: 0s\\nshutdownGracePeriod: 0s\\nshutdownGracePeriodCriticalPods: 0s\\nstaticPodPath: /etc/kubernetes/manifests\\nstreamingConnectionIdleTimeout: 0s\\nsyncFrequency: 0s\\nvolumeStatsAggPeriod: 0s\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"cd9b2a26-0a41-4fa8-a01d-e72c09466e74\", \"name\": \"kubelet-config-1.22\", \"namespace\": \"kube-system\", \"annotations\": {\"kubeadm.kubernetes.io/component-config.hash\": \"sha256:4c9f421edef822211203b587a970fbb190b0bf200194fabe2d3065b5983da050\"}, \"managedFields\": [{\"time\": \"2021-08-16T18:24:53Z\", \"manager\": \"kubeadm\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:kubelet\": {}}, \"f:metadata\": {\"f:annotations\": {\".\": {}, \"f:kubeadm.kubernetes.io/component-config.hash\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"215\", \"creationTimestamp\": \"2021-08-16T18:24:53Z\"}, \"apiVersion\": \"v1\"}', '2021-08-17 02:24:53', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (812, 'myhost', 'myvc1-init-manifests', '', 'v1', 'configmaps', 'ConfigMap', '157302375', '', '4c0f8ca3-28b3-407f-9dcf-161cd3dc5cc7', '073f2cb6146fba1e7640', '{\"data\": {\"manifests\": \"---\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"4c0f8ca3-28b3-407f-9dcf-161cd3dc5cc7\", \"name\": \"myvc1-init-manifests\", \"labels\": {\"app\": \"vcluster\", \"chart\": \"vcluster-0.11.1\", \"release\": \"myvc1\", \"heritage\": \"Helm\", \"app.kubernetes.io/managed-by\": \"Helm\"}, \"namespace\": \"myhost\", \"annotations\": {\"vcluster.loft.sh/status\": \"{\\\"phase\\\":\\\"Success\\\",\\\"manifests\\\":{\\\"phase\\\":\\\"Success\\\",\\\"lastAppliedManifests\\\":\\\"H4sIAAAAAAAA/9LV1QUAAAD//wEAAP//OwohqgMAAAA=\\\"}}\", \"meta.helm.sh/release-name\": \"myvc1\", \"meta.helm.sh/release-namespace\": \"myhost\"}, \"managedFields\": [{\"time\": \"2022-08-29T17:51:20Z\", \"manager\": \"helm\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:manifests\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:app\": {}, \"f:chart\": {}, \"f:release\": {}, \"f:heritage\": {}, \"f:app.kubernetes.io/managed-by\": {}}, \"f:annotations\": {\".\": {}, \"f:meta.helm.sh/release-name\": {}, \"f:meta.helm.sh/release-namespace\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2022-08-29T17:51:32Z\", \"manager\": \"vcluster\", \"fieldsV1\": {\"f:metadata\": {\"f:annotations\": {\"f:vcluster.loft.sh/status\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"157302375\", \"creationTimestamp\": \"2022-08-29T17:51:20Z\"}, \"apiVersion\": \"v1\"}', '2022-08-30 01:51:20', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (813, 'kube-system', 'kube-root-ca.crt', '', 'v1', 'configmaps', 'ConfigMap', '408', '', 'a3cf657d-cdf1-4fd5-a145-f798835e9030', 'a085c69582c4b3628023', '{\"data\": {\"ca.crt\": \"-----BEGIN CERTIFICATE-----\\nMIIC/jCCAeagAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\\ncm5ldGVzMB4XDTIxMDgxNjE4MjQ0MVoXDTMxMDgxNDE4MjQ0MVowFTETMBEGA1UE\\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKAQ\\n/td7qUH75HBRNBsJksTZWRSr0ZsBghzsO4FTKz90biavL/XVneiN0YNa7PCqusCR\\nYS6W6vUFepyjWtlYdKdHc6ZRPuAPokxGFOurLXHqdDg/vSgmR1J2bDe25AQ1O/8M\\n/MlBVRLIfsnjMOrPdegYhmQhlqN/qkcy0EYlTWMPxPiBmTiocalPG4OAtDqXmCJj\\ny6/hJhQ7ta1pnaiLWe+b8v99udJ7RGrRAQv5KWRwMY6nwNviV8OAAiEL9nkFIDs5\\n7r5OtHhC6fv4DByj3zZzsdN9JOogrZbnP/6/UtovgYvt8Sv+0Z4q1T5tpV+0EXZi\\n4LFkYy0bXWvWOfppHXUCAwEAAaNZMFcwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB\\n/wQFMAMBAf8wHQYDVR0OBBYEFIHMJBmfKRukQct2JCPpvxdGOP1mMBUGA1UdEQQO\\nMAyCCmt1YmVybmV0ZXMwDQYJKoZIhvcNAQELBQADggEBAFuzNT+/vgIZ2s37cjXB\\nLA2NsR73Yvp4Cg2VcuaDqSD+ZIgp0bSrnHXTcoZIW5KaEJf92FF4kZG1riQaeJFo\\nkzOCH6Xp7qbYp1XsKW+IbbYia1Ps/cY3tG3od6j56tvyokrURI+rBC9QngmhIJPM\\nUGlboIV+xnE2662wMWNu/FsbsW33lTK29gdicAiDPleBCPdtgUDlQyJTSKZuFi8h\\nV6aWCLuFxIkW6l0mLpQIhbc5Jx6uTZ0AFoMd0dPJohttCwZ97Kjew7X1Saimbnox\\naH9EPUfLNWonQ+tBkp5/0krm0LrAhNT5aA5M7tcYKSg5ytTukMdAaJwQWHCH5M1t\\nI9s=\\n-----END CERTIFICATE-----\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"a3cf657d-cdf1-4fd5-a145-f798835e9030\", \"name\": \"kube-root-ca.crt\", \"namespace\": \"kube-system\", \"annotations\": {\"kubernetes.io/description\": \"Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters.\"}, \"managedFields\": [{\"time\": \"2021-08-16T18:25:08Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:ca.crt\": {}}, \"f:metadata\": {\"f:annotations\": {\".\": {}, \"f:kubernetes.io/description\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"408\", \"creationTimestamp\": \"2021-08-16T18:25:08Z\"}, \"apiVersion\": \"v1\"}', '2021-08-17 02:25:08', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (814, 'argocd', 'argocd-gpg-keys-cm', '', 'v1', 'configmaps', 'ConfigMap', '31177025', '', '2b4ceabd-ed6c-45f7-8338-244af765221b', '4655cd287ddba30a9730', '{\"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"2b4ceabd-ed6c-45f7-8338-244af765221b\", \"name\": \"argocd-gpg-keys-cm\", \"labels\": {\"app.kubernetes.io/name\": \"argocd-gpg-keys-cm\", \"app.kubernetes.io/part-of\": \"argocd\"}, \"namespace\": \"argocd\", \"annotations\": {\"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"ConfigMap\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app.kubernetes.io/name\\\":\\\"argocd-gpg-keys-cm\\\",\\\"app.kubernetes.io/part-of\\\":\\\"argocd\\\"},\\\"name\\\":\\\"argocd-gpg-keys-cm\\\",\\\"namespace\\\":\\\"argocd\\\"}}\\n\"}, \"managedFields\": [{\"time\": \"2021-10-15T10:23:22Z\", \"manager\": \"kubectl-client-side-apply\", \"fieldsV1\": {\"f:metadata\": {\"f:labels\": {\".\": {}, \"f:app.kubernetes.io/name\": {}, \"f:app.kubernetes.io/part-of\": {}}, \"f:annotations\": {\".\": {}, \"f:kubectl.kubernetes.io/last-applied-configuration\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"31177025\", \"creationTimestamp\": \"2021-10-15T10:23:22Z\"}, \"apiVersion\": \"v1\"}', '2021-10-15 18:23:22', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (815, 'argocd', 'kube-root-ca.crt', '', 'v1', 'configmaps', 'ConfigMap', '18084259', '', '6b18c972-6924-445d-a9e4-4d80c2f7cfbb', 'acd616264c363058453e', '{\"data\": {\"ca.crt\": \"-----BEGIN CERTIFICATE-----\\nMIIC/jCCAeagAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\\ncm5ldGVzMB4XDTIxMDgxNjE4MjQ0MVoXDTMxMDgxNDE4MjQ0MVowFTETMBEGA1UE\\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKAQ\\n/td7qUH75HBRNBsJksTZWRSr0ZsBghzsO4FTKz90biavL/XVneiN0YNa7PCqusCR\\nYS6W6vUFepyjWtlYdKdHc6ZRPuAPokxGFOurLXHqdDg/vSgmR1J2bDe25AQ1O/8M\\n/MlBVRLIfsnjMOrPdegYhmQhlqN/qkcy0EYlTWMPxPiBmTiocalPG4OAtDqXmCJj\\ny6/hJhQ7ta1pnaiLWe+b8v99udJ7RGrRAQv5KWRwMY6nwNviV8OAAiEL9nkFIDs5\\n7r5OtHhC6fv4DByj3zZzsdN9JOogrZbnP/6/UtovgYvt8Sv+0Z4q1T5tpV+0EXZi\\n4LFkYy0bXWvWOfppHXUCAwEAAaNZMFcwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB\\n/wQFMAMBAf8wHQYDVR0OBBYEFIHMJBmfKRukQct2JCPpvxdGOP1mMBUGA1UdEQQO\\nMAyCCmt1YmVybmV0ZXMwDQYJKoZIhvcNAQELBQADggEBAFuzNT+/vgIZ2s37cjXB\\nLA2NsR73Yvp4Cg2VcuaDqSD+ZIgp0bSrnHXTcoZIW5KaEJf92FF4kZG1riQaeJFo\\nkzOCH6Xp7qbYp1XsKW+IbbYia1Ps/cY3tG3od6j56tvyokrURI+rBC9QngmhIJPM\\nUGlboIV+xnE2662wMWNu/FsbsW33lTK29gdicAiDPleBCPdtgUDlQyJTSKZuFi8h\\nV6aWCLuFxIkW6l0mLpQIhbc5Jx6uTZ0AFoMd0dPJohttCwZ97Kjew7X1Saimbnox\\naH9EPUfLNWonQ+tBkp5/0krm0LrAhNT5aA5M7tcYKSg5ytTukMdAaJwQWHCH5M1t\\nI9s=\\n-----END CERTIFICATE-----\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"6b18c972-6924-445d-a9e4-4d80c2f7cfbb\", \"name\": \"kube-root-ca.crt\", \"namespace\": \"argocd\", \"annotations\": {\"kubernetes.io/description\": \"Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters.\"}, \"managedFields\": [{\"time\": \"2021-09-28T05:23:09Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:ca.crt\": {}}, \"f:metadata\": {\"f:annotations\": {\".\": {}, \"f:kubernetes.io/description\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"18084259\", \"creationTimestamp\": \"2021-09-28T05:23:09Z\"}, \"apiVersion\": \"v1\"}', '2021-09-28 13:23:09', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (816, 'cattle-impersonation-system', 'istio-ca-root-cert', '', 'v1', 'configmaps', 'ConfigMap', '12089046', '', 'a0aa3f67-9d05-4696-8a8f-2f141de12fe8', '735cf5d06969881372e9', '{\"data\": {\"root-cert.pem\": \"-----BEGIN CERTIFICATE-----\\nMIIC/DCCAeSgAwIBAgIQIm0uJrxR03UgVKC4hRH+QTANBgkqhkiG9w0BAQsFADAY\\nMRYwFAYDVQQKEw1jbHVzdGVyLmxvY2FsMB4XDTIxMDkxODA5MTUwOVoXDTMxMDkx\\nNjA5MTUwOVowGDEWMBQGA1UEChMNY2x1c3Rlci5sb2NhbDCCASIwDQYJKoZIhvcN\\nAQEBBQADggEPADCCAQoCggEBAMxhNFjEB+bW82xWVKfQUpvZVpQVskQs4bdbPuqM\\ns+4xpe42cfFvnJ4aNdLeespk7l0iNIo4p+WJ0pkkoi1/N+TztbmDOHsRW6h22YsB\\n/kWMf7LpLFBTWIqTe30DAG+DFbvn+yb7eLEdtUpbg3m7sYAZmX5BTxKiO5wl0i0D\\nDBRvqivJrhyDLikh4+xJ+dkxO3WlKJiik8SnzoGLaX2XiLeeRFTde4ynM9xZkA5i\\nwAgy8JTyiZ0rAIgj1DZ9n434IlWHykA7JG4tF2yeEeoJQfIjEK29ToVlLpFp+Cx5\\n/2Xe8CuCVRQJeH3hrDaf43o5HFJ2BIIpAsAUf8Ayd3K/PBUCAwEAAaNCMEAwDgYD\\nVR0PAQH/BAQDAgIEMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFFC+UlUIc2gM\\n1pG6lD1JZVEcrdAMMA0GCSqGSIb3DQEBCwUAA4IBAQCFkiXChryTn/VYRxhKull2\\nq1wdl5xEYqvOt+68krE8kSHh8XrA1mvhhp6rOtPbcNQ4kJulhzAs+IkFN/aygT7r\\nP+Q/JTKuSNNJVFmW1sSCAwcNyCxhNaNJBZL3MCjL7asqsmKxiVNMxYrgvvUgX2x6\\nsbNdjdQkRA9GJSuYTaAlX/vIdHK9XJxv2T/KbD0aB7bszujDP66LJZaq/DkDMePP\\nr1qTBFoEw0edtwFI8ESaQMpFlpQJcCIMdJ12z6EVcnBufEqDwLV1pU4zzB4/3Hzb\\ngAAAx46M4q/b8QareLuufAoOVyABeMjZdWVMGIFIqNSPLYp91iLhPLef3ZgEOPnr\\n-----END CERTIFICATE-----\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"a0aa3f67-9d05-4696-8a8f-2f141de12fe8\", \"name\": \"istio-ca-root-cert\", \"labels\": {\"istio.io/config\": \"true\"}, \"namespace\": \"cattle-impersonation-system\", \"managedFields\": [{\"time\": \"2021-09-20T08:30:52Z\", \"manager\": \"pilot-discovery\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:root-cert.pem\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:istio.io/config\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"12089046\", \"creationTimestamp\": \"2021-09-20T08:30:52Z\"}, \"apiVersion\": \"v1\"}', '2021-09-20 16:30:52', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (817, 'cicd', 'kube-root-ca.crt', '', 'v1', 'configmaps', 'ConfigMap', '4274932', '', '0da1b3a8-77f6-4ebc-b266-e511186cff24', 'a51785d1dabbbb74308b', '{\"data\": {\"ca.crt\": \"-----BEGIN CERTIFICATE-----\\nMIIC/jCCAeagAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\\ncm5ldGVzMB4XDTIxMDgxNjE4MjQ0MVoXDTMxMDgxNDE4MjQ0MVowFTETMBEGA1UE\\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKAQ\\n/td7qUH75HBRNBsJksTZWRSr0ZsBghzsO4FTKz90biavL/XVneiN0YNa7PCqusCR\\nYS6W6vUFepyjWtlYdKdHc6ZRPuAPokxGFOurLXHqdDg/vSgmR1J2bDe25AQ1O/8M\\n/MlBVRLIfsnjMOrPdegYhmQhlqN/qkcy0EYlTWMPxPiBmTiocalPG4OAtDqXmCJj\\ny6/hJhQ7ta1pnaiLWe+b8v99udJ7RGrRAQv5KWRwMY6nwNviV8OAAiEL9nkFIDs5\\n7r5OtHhC6fv4DByj3zZzsdN9JOogrZbnP/6/UtovgYvt8Sv+0Z4q1T5tpV+0EXZi\\n4LFkYy0bXWvWOfppHXUCAwEAAaNZMFcwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB\\n/wQFMAMBAf8wHQYDVR0OBBYEFIHMJBmfKRukQct2JCPpvxdGOP1mMBUGA1UdEQQO\\nMAyCCmt1YmVybmV0ZXMwDQYJKoZIhvcNAQELBQADggEBAFuzNT+/vgIZ2s37cjXB\\nLA2NsR73Yvp4Cg2VcuaDqSD+ZIgp0bSrnHXTcoZIW5KaEJf92FF4kZG1riQaeJFo\\nkzOCH6Xp7qbYp1XsKW+IbbYia1Ps/cY3tG3od6j56tvyokrURI+rBC9QngmhIJPM\\nUGlboIV+xnE2662wMWNu/FsbsW33lTK29gdicAiDPleBCPdtgUDlQyJTSKZuFi8h\\nV6aWCLuFxIkW6l0mLpQIhbc5Jx6uTZ0AFoMd0dPJohttCwZ97Kjew7X1Saimbnox\\naH9EPUfLNWonQ+tBkp5/0krm0LrAhNT5aA5M7tcYKSg5ytTukMdAaJwQWHCH5M1t\\nI9s=\\n-----END CERTIFICATE-----\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"0da1b3a8-77f6-4ebc-b266-e511186cff24\", \"name\": \"kube-root-ca.crt\", \"namespace\": \"cicd\", \"annotations\": {\"kubernetes.io/description\": \"Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters.\"}, \"managedFields\": [{\"time\": \"2021-09-09T07:52:24Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:ca.crt\": {}}, \"f:metadata\": {\"f:annotations\": {\".\": {}, \"f:kubernetes.io/description\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"4274932\", \"creationTimestamp\": \"2021-09-09T07:52:24Z\"}, \"apiVersion\": \"v1\"}', '2021-09-09 15:52:24', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (818, 'istio-system', 'istio-gateway-leader', '', 'v1', 'configmaps', 'ConfigMap', '117385142', '', '48a908f5-f2a5-48ac-a93e-ae68436c2405', '20b24eb917dda9dc3a46', '{\"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"48a908f5-f2a5-48ac-a93e-ae68436c2405\", \"name\": \"istio-gateway-leader\", \"namespace\": \"istio-system\", \"annotations\": {\"control-plane.alpha.kubernetes.io/leader\": \"{\\\"holderIdentity\\\":\\\"\\\",\\\"leaseDurationSeconds\\\":1,\\\"acquireTime\\\":\\\"2022-02-10T06:36:19Z\\\",\\\"renewTime\\\":\\\"2022-02-10T06:36:19Z\\\",\\\"leaderTransitions\\\":1}\"}, \"managedFields\": [{\"time\": \"2021-09-18T09:15:22Z\", \"manager\": \"pilot-discovery\", \"fieldsV1\": {\"f:metadata\": {\"f:annotations\": {\".\": {}, \"f:control-plane.alpha.kubernetes.io/leader\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"117385142\", \"creationTimestamp\": \"2021-09-18T09:15:22Z\"}, \"apiVersion\": \"v1\"}', '2021-09-18 17:15:22', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (819, 'istio-system', 'istio-sidecar-injector', '', 'v1', 'configmaps', 'ConfigMap', '137981292', '', '65673db5-65c9-4f51-99db-2badb2cef089', 'b6e4b9b06e13b6ba32da', '{\"data\": {\"config\": \"# defaultTemplates defines the default template to use for pods that do not explicitly specify a template\\ndefaultTemplates: [sidecar]\\npolicy: enabled\\nalwaysInjectSelector:\\n  []\\nneverInjectSelector:\\n  []\\ninjectedAnnotations:\\ntemplate: \\\"{{ Template_Version_And_Istio_Version_Mismatched_Check_Installation }}\\\"\\ntemplates:\\n  sidecar: |\\n    {{- define \\\"resources\\\"  }}\\n      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}\\n        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}\\n          requests:\\n            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}\\n            cpu: \\\"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}\\\"\\n            {{ end }}\\n            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}\\n            memory: \\\"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}\\\"\\n            {{ end }}\\n        {{- end }}\\n        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}\\n          limits:\\n            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}\\n            cpu: \\\"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}\\\"\\n            {{ end }}\\n            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}\\n            memory: \\\"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}\\\"\\n            {{ end }}\\n        {{- end }}\\n      {{- else }}\\n        {{- if .Values.global.proxy.resources }}\\n          {{ toYaml .Values.global.proxy.resources | indent 6 }}\\n        {{- end }}\\n      {{- end }}\\n    {{- end }}\\n    {{- $containers := list }}\\n    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name \\\"istio-proxy\\\") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}\\n    metadata:\\n      labels:\\n        security.istio.io/tlsMode: {{ index .ObjectMeta.Labels `security.istio.io/tlsMode` | default \\\"istio\\\"  | quote }}\\n        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}\\n        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default \\\"latest\\\"  | quote }}\\n      annotations: {\\n        {{- if eq (len $containers) 1 }}\\n        kubectl.kubernetes.io/default-logs-container: \\\"{{ index $containers 0 }}\\\",\\n        kubectl.kubernetes.io/default-container: \\\"{{ index $containers 0 }}\\\",\\n        {{ end }}\\n    {{- if .Values.istio_cni.enabled }}\\n        {{- if not .Values.istio_cni.chained }}\\n        k8s.v1.cni.cncf.io/networks: \'{{ appendMultusNetwork (index .ObjectMeta.Annotations `k8s.v1.cni.cncf.io/networks`) `istio-cni` }}\',\\n        {{- end }}\\n        sidecar.istio.io/interceptionMode: \\\"{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}\\\",\\n        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}traffic.sidecar.istio.io/includeOutboundIPRanges: \\\"{{.}}\\\",{{ end }}\\n        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}traffic.sidecar.istio.io/excludeOutboundIPRanges: \\\"{{.}}\\\",{{ end }}\\n        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}traffic.sidecar.istio.io/includeInboundPorts: \\\"{{.}}\\\",{{ end }}\\n        traffic.sidecar.istio.io/excludeInboundPorts: \\\"{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}\\\",\\n        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts \\\"\\\") \\\"\\\") }}\\n        traffic.sidecar.istio.io/includeOutboundPorts: \\\"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}\\\",\\n        {{- end }}\\n        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts \\\"\\\") }}\\n        traffic.sidecar.istio.io/excludeOutboundPorts: \\\"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}\\\",\\n        {{- end }}\\n        {{ with index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}traffic.sidecar.istio.io/kubevirtInterfaces: \\\"{{.}}\\\",{{ end }}\\n    {{- end }}\\n      }\\n    spec:\\n      {{- $holdProxy := or .ProxyConfig.HoldApplicationUntilProxyStarts.GetValue .Values.global.proxy.holdApplicationUntilProxyStarts }}\\n      initContainers:\\n      {{ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `NONE` }}\\n      {{ if .Values.istio_cni.enabled -}}\\n      - name: istio-validation\\n      {{ else -}}\\n      - name: istio-init\\n      {{ end -}}\\n      {{- if contains \\\"/\\\" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}\\n        image: \\\"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}\\\"\\n      {{- else }}\\n        image: \\\"{{ .ProxyImage }}\\\"\\n      {{- end }}\\n        args:\\n        - istio-iptables\\n        - \\\"-p\\\"\\n        - {{ .MeshConfig.ProxyListenPort | default \\\"15001\\\" | quote }}\\n        - \\\"-z\\\"\\n        - \\\"15006\\\"\\n        - \\\"-u\\\"\\n        - \\\"1337\\\"\\n        - \\\"-m\\\"\\n        - \\\"{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}\\\"\\n        - \\\"-i\\\"\\n        - \\\"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}\\\"\\n        - \\\"-x\\\"\\n        - \\\"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}\\\"\\n        - \\\"-b\\\"\\n        - \\\"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}\\\"\\n        - \\\"-d\\\"\\n      {{- if excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}\\n        - \\\"15090,15021,{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}\\\"\\n      {{- else }}\\n        - \\\"15090,15021\\\"\\n      {{- end }}\\n        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts \\\"\\\") \\\"\\\") -}}\\n        - \\\"-q\\\"\\n        - \\\"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}\\\"\\n        {{ end -}}\\n        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.excludeOutboundPorts \\\"\\\") \\\"\\\") -}}\\n        - \\\"-o\\\"\\n        - \\\"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}\\\"\\n        {{ end -}}\\n        {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`) -}}\\n        - \\\"-k\\\"\\n        - \\\"{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}\\\"\\n        {{ end -}}\\n        {{ if .Values.istio_cni.enabled -}}\\n        - \\\"--run-validation\\\"\\n        - \\\"--skip-rule-apply\\\"\\n        {{ end -}}\\n        {{with .Values.global.imagePullPolicy }}imagePullPolicy: \\\"{{.}}\\\"{{end}}\\n      {{- if .ProxyConfig.ProxyMetadata }}\\n        env:\\n        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}\\n        - name: {{ $key }}\\n          value: \\\"{{ $value }}\\\"\\n        {{- end }}\\n      {{- end }}\\n        resources:\\n      {{ template \\\"resources\\\" . }}\\n        securityContext:\\n          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}\\n          privileged: {{ .Values.global.proxy.privileged }}\\n          capabilities:\\n        {{- if not .Values.istio_cni.enabled }}\\n            add:\\n            - NET_ADMIN\\n            - NET_RAW\\n        {{- end }}\\n            drop:\\n            - ALL\\n        {{- if not .Values.istio_cni.enabled }}\\n          readOnlyRootFilesystem: false\\n          runAsGroup: 0\\n          runAsNonRoot: false\\n          runAsUser: 0\\n        {{- else }}\\n          readOnlyRootFilesystem: true\\n          runAsGroup: 1337\\n          runAsUser: 1337\\n          runAsNonRoot: true\\n        {{- end }}\\n        restartPolicy: Always\\n      {{ end -}}\\n      {{- if eq (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) \\\"true\\\" }}\\n      - name: enable-core-dump\\n        args:\\n        - -c\\n        - sysctl -w kernel.core_pattern=/var/lib/istio/data/core.proxy && ulimit -c unlimited\\n        command:\\n          - /bin/sh\\n      {{- if contains \\\"/\\\" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}\\n        image: \\\"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}\\\"\\n      {{- else }}\\n        image: \\\"{{ .ProxyImage }}\\\"\\n      {{- end }}\\n        {{with .Values.global.imagePullPolicy }}imagePullPolicy: \\\"{{.}}\\\"{{end}}\\n        resources:\\n      {{ template \\\"resources\\\" . }}\\n        securityContext:\\n          allowPrivilegeEscalation: true\\n          capabilities:\\n            add:\\n            - SYS_ADMIN\\n            drop:\\n            - ALL\\n          privileged: true\\n          readOnlyRootFilesystem: false\\n          runAsGroup: 0\\n          runAsNonRoot: false\\n          runAsUser: 0\\n      {{ end }}\\n      containers:\\n      - name: istio-proxy\\n      {{- if contains \\\"/\\\" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}\\n        image: \\\"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}\\\"\\n      {{- else }}\\n        image: \\\"{{ .ProxyImage }}\\\"\\n      {{- end }}\\n        ports:\\n        - containerPort: 15090\\n          protocol: TCP\\n          name: http-envoy-prom\\n        args:\\n        - proxy\\n        - sidecar\\n        - --domain\\n        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}\\n        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}\\n        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}\\n        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}\\n      {{- if .Values.global.sts.servicePort }}\\n        - --stsPort={{ .Values.global.sts.servicePort }}\\n      {{- end }}\\n      {{- if .Values.global.logAsJson }}\\n        - --log_as_json\\n      {{- end }}\\n      {{- if gt .EstimatedConcurrency 0 }}\\n        - --concurrency\\n        - \\\"{{ .EstimatedConcurrency }}\\\"\\n      {{- end -}}\\n      {{- if .Values.global.proxy.lifecycle }}\\n        lifecycle:\\n          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}\\n      {{- else if $holdProxy }}\\n        lifecycle:\\n          postStart:\\n            exec:\\n              command:\\n              - pilot-agent\\n              - wait\\n      {{- end }}\\n        env:\\n        {{- if eq (env \\\"PILOT_ENABLE_INBOUND_PASSTHROUGH\\\" \\\"true\\\") \\\"false\\\" }}\\n        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION\\n          value: \\\"true\\\"\\n        {{- end }}\\n        - name: JWT_POLICY\\n          value: {{ .Values.global.jwtPolicy }}\\n        - name: PILOT_CERT_PROVIDER\\n          value: {{ .Values.global.pilotCertProvider }}\\n        - name: CA_ADDR\\n        {{- if .Values.global.caAddress }}\\n          value: {{ .Values.global.caAddress }}\\n        {{- else }}\\n          value: istiod{{- if not (eq .Values.revision \\\"\\\") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012\\n        {{- end }}\\n        - name: POD_NAME\\n          valueFrom:\\n            fieldRef:\\n              fieldPath: metadata.name\\n        - name: POD_NAMESPACE\\n          valueFrom:\\n            fieldRef:\\n              fieldPath: metadata.namespace\\n        - name: INSTANCE_IP\\n          valueFrom:\\n            fieldRef:\\n              fieldPath: status.podIP\\n        - name: SERVICE_ACCOUNT\\n          valueFrom:\\n            fieldRef:\\n              fieldPath: spec.serviceAccountName\\n        - name: HOST_IP\\n          valueFrom:\\n            fieldRef:\\n              fieldPath: status.hostIP\\n        - name: PROXY_CONFIG\\n          value: |\\n                 {{ protoToJSON .ProxyConfig }}\\n        - name: ISTIO_META_POD_PORTS\\n          value: |-\\n            [\\n            {{- $first := true }}\\n            {{- range $index1, $c := .Spec.Containers }}\\n              {{- range $index2, $p := $c.Ports }}\\n                {{- if (structToJSON $p) }}\\n                {{if not $first}},{{end}}{{ structToJSON $p }}\\n                {{- $first = false }}\\n                {{- end }}\\n              {{- end}}\\n            {{- end}}\\n            ]\\n        - name: ISTIO_META_APP_CONTAINERS\\n          value: \\\"{{ $containers | join \\\",\\\" }}\\\"\\n        - name: ISTIO_META_CLUSTER_ID\\n          value: \\\"{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}\\\"\\n        - name: ISTIO_META_INTERCEPTION_MODE\\n          value: \\\"{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}\\\"\\n        {{- if .Values.global.network }}\\n        - name: ISTIO_META_NETWORK\\n          value: \\\"{{ .Values.global.network }}\\\"\\n        {{- end }}\\n        {{- if .DeploymentMeta.Name }}\\n        - name: ISTIO_META_WORKLOAD_NAME\\n          value: \\\"{{ .DeploymentMeta.Name }}\\\"\\n        {{ end }}\\n        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}\\n        - name: ISTIO_META_OWNER\\n          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}\\n        {{- end}}\\n        {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}\\n        - name: ISTIO_BOOTSTRAP_OVERRIDE\\n          value: \\\"/etc/istio/custom-bootstrap/custom_bootstrap.json\\\"\\n        {{- end }}\\n        {{- if .Values.global.meshID }}\\n        - name: ISTIO_META_MESH_ID\\n          value: \\\"{{ .Values.global.meshID }}\\\"\\n        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}\\n        - name: ISTIO_META_MESH_ID\\n          value: \\\"{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}\\\"\\n        {{- end }}\\n        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}\\n        - name: TRUST_DOMAIN\\n          value: \\\"{{ . }}\\\"\\n        {{- end }}\\n        {{- if and (eq .Values.global.proxy.tracer \\\"datadog\\\") (isset .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}\\n        {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}\\n        - name: {{ $key }}\\n          value: \\\"{{ $value }}\\\"\\n        {{- end }}\\n        {{- end }}\\n        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}\\n        - name: {{ $key }}\\n          value: \\\"{{ $value }}\\\"\\n        {{- end }}\\n        {{with .Values.global.imagePullPolicy }}imagePullPolicy: \\\"{{.}}\\\"{{end}}\\n        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}\\n        readinessProbe:\\n          httpGet:\\n            path: /healthz/ready\\n            port: 15021\\n          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}\\n          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}\\n          timeoutSeconds: 3\\n          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}\\n        {{ end -}}\\n        securityContext:\\n          {{- if eq (index .ProxyConfig.ProxyMetadata \\\"IPTABLES_TRACE_LOGGING\\\") \\\"true\\\" }}\\n          allowPrivilegeEscalation: true\\n          capabilities:\\n            add:\\n            - NET_ADMIN\\n            drop:\\n            - ALL\\n          privileged: true\\n          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) \\\"true\\\" }}\\n          runAsGroup: 1337\\n          fsGroup: 1337\\n          runAsNonRoot: false\\n          runAsUser: 0\\n          {{- else }}\\n          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}\\n          capabilities:\\n            {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}\\n            add:\\n            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY` -}}\\n            - NET_ADMIN\\n            {{- end }}\\n            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true` -}}\\n            - NET_BIND_SERVICE\\n            {{- end }}\\n            {{- end }}\\n            drop:\\n            - ALL\\n          privileged: {{ .Values.global.proxy.privileged }}\\n          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) \\\"true\\\" }}\\n          runAsGroup: 1337\\n          fsGroup: 1337\\n          {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}\\n          runAsNonRoot: false\\n          runAsUser: 0\\n          {{- else -}}\\n          runAsNonRoot: true\\n          runAsUser: 1337\\n          {{- end }}\\n          {{- end }}\\n        resources:\\n      {{ template \\\"resources\\\" . }}\\n        volumeMounts:\\n        {{- if eq .Values.global.caName \\\"GkeWorkloadCertificate\\\" }}\\n        - name: gke-workload-certificate\\n          mountPath: /var/run/secrets/workload-spiffe-credentials\\n          readOnly: true\\n        {{- end }}\\n        {{- if eq .Values.global.pilotCertProvider \\\"istiod\\\" }}\\n        - mountPath: /var/run/secrets/istio\\n          name: istiod-ca-cert\\n        {{- end }}\\n        - mountPath: /var/lib/istio/data\\n          name: istio-data\\n        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}\\n        - mountPath: /etc/istio/custom-bootstrap\\n          name: custom-bootstrap-volume\\n        {{- end }}\\n        # SDS channel between istioagent and Envoy\\n        - mountPath: /etc/istio/proxy\\n          name: istio-envoy\\n        {{- if eq .Values.global.jwtPolicy \\\"third-party-jwt\\\" }}\\n        - mountPath: /var/run/secrets/tokens\\n          name: istio-token\\n        {{- end }}\\n        {{- if .Values.global.mountMtlsCerts }}\\n        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.\\n        - mountPath: /etc/certs/\\n          name: istio-certs\\n          readOnly: true\\n        {{- end }}\\n        - name: istio-podinfo\\n          mountPath: /etc/istio/pod\\n         {{- if and (eq .Values.global.proxy.tracer \\\"lightstep\\\") .ProxyConfig.GetTracing.GetTlsSettings }}\\n        - mountPath: {{ directory .ProxyConfig.GetTracing.GetTlsSettings.GetCaCertificates }}\\n          name: lightstep-certs\\n          readOnly: true\\n        {{- end }}\\n          {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}\\n          {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}\\n        - name: \\\"{{  $index }}\\\"\\n          {{ toYaml $value | indent 6 }}\\n          {{ end }}\\n          {{- end }}\\n      volumes:\\n      {{- if eq .Values.global.caName \\\"GkeWorkloadCertificate\\\" }}\\n      - name: gke-workload-certificate\\n        csi:\\n          driver: workloadcertificates.security.cloud.google.com\\n      {{- end }}\\n      {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}\\n      - name: custom-bootstrap-volume\\n        configMap:\\n          name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` \\\"\\\" }}\\n      {{- end }}\\n      # SDS channel between istioagent and Envoy\\n      - emptyDir:\\n          medium: Memory\\n        name: istio-envoy\\n      - name: istio-data\\n        emptyDir: {}\\n      - name: istio-podinfo\\n        downwardAPI:\\n          items:\\n            - path: \\\"labels\\\"\\n              fieldRef:\\n                fieldPath: metadata.labels\\n            - path: \\\"annotations\\\"\\n              fieldRef:\\n                fieldPath: metadata.annotations\\n      {{- if eq .Values.global.jwtPolicy \\\"third-party-jwt\\\" }}\\n      - name: istio-token\\n        projected:\\n          sources:\\n          - serviceAccountToken:\\n              path: istio-token\\n              expirationSeconds: 43200\\n              audience: {{ .Values.global.sds.token.aud }}\\n      {{- end }}\\n      {{- if eq .Values.global.pilotCertProvider \\\"istiod\\\" }}\\n      - name: istiod-ca-cert\\n        configMap:\\n          name: istio-ca-root-cert\\n      {{- end }}\\n      {{- if .Values.global.mountMtlsCerts }}\\n      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.\\n      - name: istio-certs\\n        secret:\\n          optional: true\\n          {{ if eq .Spec.ServiceAccountName \\\"\\\" }}\\n          secretName: istio.default\\n          {{ else -}}\\n          secretName: {{  printf \\\"istio.%s\\\" .Spec.ServiceAccountName }}\\n          {{  end -}}\\n      {{- end }}\\n        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}\\n        {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}\\n      - name: \\\"{{ $index }}\\\"\\n        {{ toYaml $value | indent 4 }}\\n        {{ end }}\\n        {{ end }}\\n      {{- if and (eq .Values.global.proxy.tracer \\\"lightstep\\\") .ProxyConfig.GetTracing.GetTlsSettings }}\\n      - name: lightstep-certs\\n        secret:\\n          optional: true\\n          secretName: lightstep.cacert\\n      {{- end }}\\n      {{- if .Values.global.imagePullSecrets }}\\n      imagePullSecrets:\\n        {{- range .Values.global.imagePullSecrets }}\\n        - name: {{ . }}\\n        {{- end }}\\n      {{- end }}\\n      {{- if eq (env \\\"ENABLE_LEGACY_FSGROUP_INJECTION\\\" \\\"true\\\") \\\"true\\\" }}\\n      securityContext:\\n        fsGroup: 1337\\n      {{- end }}\\n  gateway: |\\n    {{- $containers := list }}\\n    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name \\\"istio-proxy\\\") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}\\n    metadata:\\n      labels:\\n        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}\\n        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default \\\"latest\\\"  | quote }}\\n        istio.io/rev: {{ .Revision | default \\\"default\\\" | quote }}\\n      annotations: {\\n        {{- if eq (len $containers) 1 }}\\n        kubectl.kubernetes.io/default-logs-container: \\\"{{ index $containers 0 }}\\\",\\n        kubectl.kubernetes.io/default-container: \\\"{{ index $containers 0 }}\\\",\\n        {{ end }}\\n      }\\n    spec:\\n      containers:\\n      - name: istio-proxy\\n      {{- if contains \\\"/\\\" .Values.global.proxy.image }}\\n        image: \\\"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}\\\"\\n      {{- else }}\\n        image: \\\"{{ .ProxyImage }}\\\"\\n      {{- end }}\\n        ports:\\n        - containerPort: 15090\\n          protocol: TCP\\n          name: http-envoy-prom\\n        args:\\n        - proxy\\n        - router\\n        - --domain\\n        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}\\n        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}\\n        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}\\n        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}\\n      {{- if .Values.global.sts.servicePort }}\\n        - --stsPort={{ .Values.global.sts.servicePort }}\\n      {{- end }}\\n      {{- if .Values.global.logAsJson }}\\n        - --log_as_json\\n      {{- end }}\\n      {{- if .Values.global.proxy.lifecycle }}\\n        lifecycle:\\n          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}\\n      {{- end }}\\n        env:\\n        - name: JWT_POLICY\\n          value: {{ .Values.global.jwtPolicy }}\\n        - name: PILOT_CERT_PROVIDER\\n          value: {{ .Values.global.pilotCertProvider }}\\n        - name: CA_ADDR\\n        {{- if .Values.global.caAddress }}\\n          value: {{ .Values.global.caAddress }}\\n        {{- else }}\\n          value: istiod{{- if not (eq .Values.revision \\\"\\\") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012\\n        {{- end }}\\n        - name: POD_NAME\\n          valueFrom:\\n            fieldRef:\\n              fieldPath: metadata.name\\n        - name: POD_NAMESPACE\\n          valueFrom:\\n            fieldRef:\\n              fieldPath: metadata.namespace\\n        - name: INSTANCE_IP\\n          valueFrom:\\n            fieldRef:\\n              fieldPath: status.podIP\\n        - name: SERVICE_ACCOUNT\\n          valueFrom:\\n            fieldRef:\\n              fieldPath: spec.serviceAccountName\\n        - name: HOST_IP\\n          valueFrom:\\n            fieldRef:\\n              fieldPath: status.hostIP\\n        - name: PROXY_CONFIG\\n          value: |\\n                 {{ protoToJSON .ProxyConfig }}\\n        - name: ISTIO_META_POD_PORTS\\n          value: |-\\n            [\\n            {{- $first := true }}\\n            {{- range $index1, $c := .Spec.Containers }}\\n              {{- range $index2, $p := $c.Ports }}\\n                {{- if (structToJSON $p) }}\\n                {{if not $first}},{{end}}{{ structToJSON $p }}\\n                {{- $first = false }}\\n                {{- end }}\\n              {{- end}}\\n            {{- end}}\\n            ]\\n        - name: ISTIO_META_APP_CONTAINERS\\n          value: \\\"{{ $containers | join \\\",\\\" }}\\\"\\n        - name: ISTIO_META_CLUSTER_ID\\n          value: \\\"{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}\\\"\\n        - name: ISTIO_META_INTERCEPTION_MODE\\n          value: \\\"{{ .ProxyConfig.InterceptionMode.String }}\\\"\\n        {{- if .Values.global.network }}\\n        - name: ISTIO_META_NETWORK\\n          value: \\\"{{ .Values.global.network }}\\\"\\n        {{- end }}\\n        {{- if .DeploymentMeta.Name }}\\n        - name: ISTIO_META_WORKLOAD_NAME\\n          value: \\\"{{ .DeploymentMeta.Name }}\\\"\\n        {{ end }}\\n        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}\\n        - name: ISTIO_META_OWNER\\n          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}\\n        {{- end}}\\n        {{- if .Values.global.meshID }}\\n        - name: ISTIO_META_MESH_ID\\n          value: \\\"{{ .Values.global.meshID }}\\\"\\n        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}\\n        - name: ISTIO_META_MESH_ID\\n          value: \\\"{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}\\\"\\n        {{- end }}\\n        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}\\n        - name: TRUST_DOMAIN\\n          value: \\\"{{ . }}\\\"\\n        {{- end }}\\n        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}\\n        - name: {{ $key }}\\n          value: \\\"{{ $value }}\\\"\\n        {{- end }}\\n        {{with .Values.global.imagePullPolicy }}imagePullPolicy: \\\"{{.}}\\\"{{end}}\\n        readinessProbe:\\n          httpGet:\\n            path: /healthz/ready\\n            port: 15021\\n          initialDelaySeconds: {{.Values.global.proxy.readinessInitialDelaySeconds }}\\n          periodSeconds: {{ .Values.global.proxy.readinessPeriodSeconds }}\\n          timeoutSeconds: 3\\n          failureThreshold: {{ .Values.global.proxy.readinessFailureThreshold }}\\n        volumeMounts:\\n        {{- if eq .Values.global.caName \\\"GkeWorkloadCertificate\\\" }}\\n        - name: gke-workload-certificate\\n          mountPath: /var/run/secrets/workload-spiffe-credentials\\n          readOnly: true\\n        {{- end }}\\n        {{- if eq .Values.global.pilotCertProvider \\\"istiod\\\" }}\\n        - mountPath: /var/run/secrets/istio\\n          name: istiod-ca-cert\\n        {{- end }}\\n        - mountPath: /var/lib/istio/data\\n          name: istio-data\\n        # SDS channel between istioagent and Envoy\\n        - mountPath: /etc/istio/proxy\\n          name: istio-envoy\\n        {{- if eq .Values.global.jwtPolicy \\\"third-party-jwt\\\" }}\\n        - mountPath: /var/run/secrets/tokens\\n          name: istio-token\\n        {{- end }}\\n        {{- if .Values.global.mountMtlsCerts }}\\n        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.\\n        - mountPath: /etc/certs/\\n          name: istio-certs\\n          readOnly: true\\n        {{- end }}\\n        - name: istio-podinfo\\n          mountPath: /etc/istio/pod\\n      volumes:\\n      {{- if eq .Values.global.caName \\\"GkeWorkloadCertificate\\\" }}\\n      - name: gke-workload-certificate\\n        csi:\\n          driver: workloadcertificates.security.cloud.google.com\\n      {{- end }}\\n      # SDS channel between istioagent and Envoy\\n      - emptyDir:\\n          medium: Memory\\n        name: istio-envoy\\n      - name: istio-data\\n        emptyDir: {}\\n      - name: istio-podinfo\\n        downwardAPI:\\n          items:\\n            - path: \\\"labels\\\"\\n              fieldRef:\\n                fieldPath: metadata.labels\\n            - path: \\\"annotations\\\"\\n              fieldRef:\\n                fieldPath: metadata.annotations\\n      {{- if eq .Values.global.jwtPolicy \\\"third-party-jwt\\\" }}\\n      - name: istio-token\\n        projected:\\n          sources:\\n          - serviceAccountToken:\\n              path: istio-token\\n              expirationSeconds: 43200\\n              audience: {{ .Values.global.sds.token.aud }}\\n      {{- end }}\\n      {{- if eq .Values.global.pilotCertProvider \\\"istiod\\\" }}\\n      - name: istiod-ca-cert\\n        configMap:\\n          name: istio-ca-root-cert\\n      {{- end }}\\n      {{- if .Values.global.mountMtlsCerts }}\\n      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.\\n      - name: istio-certs\\n        secret:\\n          optional: true\\n          {{ if eq .Spec.ServiceAccountName \\\"\\\" }}\\n          secretName: istio.default\\n          {{ else -}}\\n          secretName: {{  printf \\\"istio.%s\\\" .Spec.ServiceAccountName }}\\n          {{  end -}}\\n      {{- end }}\\n      {{- if .Values.global.imagePullSecrets }}\\n      imagePullSecrets:\\n        {{- range .Values.global.imagePullSecrets }}\\n        - name: {{ . }}\\n        {{- end }}\\n      {{- end }}\\n      {{- if eq (env \\\"ENABLE_LEGACY_FSGROUP_INJECTION\\\" \\\"true\\\") \\\"true\\\" }}\\n      securityContext:\\n        fsGroup: 1337\\n      {{- end }}\\n  grpc-simple: |\\n    metadata:\\n      sidecar.istio.io/rewriteAppHTTPProbers: \\\"false\\\"\\n    spec:\\n      initContainers:\\n        - name: grpc-bootstrap-init\\n          image: busybox:1.28\\n          volumeMounts:\\n            - mountPath: /var/lib/grpc/data/\\n              name: grpc-io-proxyless-bootstrap\\n          env:\\n            - name: INSTANCE_IP\\n              valueFrom:\\n                fieldRef:\\n                  fieldPath: status.podIP\\n            - name: POD_NAME\\n              valueFrom:\\n                fieldRef:\\n                  fieldPath: metadata.name\\n            - name: POD_NAMESPACE\\n              valueFrom:\\n                fieldRef:\\n                  fieldPath: metadata.namespace\\n            - name: ISTIO_NAMESPACE\\n              value: |\\n                 {{ .Values.global.istioNamespace }}\\n          command:\\n            - sh\\n            - \\\"-c\\\"\\n            - |-\\n              NODE_ID=\\\"sidecar~${INSTANCE_IP}~${POD_NAME}.${POD_NAMESPACE}~cluster.local\\\"\\n              SERVER_URI=\\\"dns:///istiod.${ISTIO_NAMESPACE}.svc:15010\\\"\\n              echo \'\\n              {\\n                \\\"xds_servers\\\": [\\n                  {\\n                    \\\"server_uri\\\": \\\"\'${SERVER_URI}\'\\\",\\n                    \\\"channel_creds\\\": [{\\\"type\\\": \\\"insecure\\\"}],\\n                    \\\"server_features\\\" : [\\\"xds_v3\\\"]\\n                  }\\n                ],\\n                \\\"node\\\": {\\n                  \\\"id\\\": \\\"\'${NODE_ID}\'\\\",\\n                  \\\"metadata\\\": {\\n                    \\\"GENERATOR\\\": \\\"grpc\\\"\\n                  }\\n                }\\n              }\' > /var/lib/grpc/data/bootstrap.json\\n      containers:\\n      {{- range $index, $container := .Spec.Containers }}\\n      - name: {{ $container.Name }}\\n        env:\\n          - name: GRPC_XDS_BOOTSTRAP\\n            value: /var/lib/grpc/data/bootstrap.json\\n          - name: GRPC_GO_LOG_VERBOSITY_LEVEL\\n            value: \\\"99\\\"\\n          - name: GRPC_GO_LOG_SEVERITY_LEVEL\\n            value: info\\n        volumeMounts:\\n          - mountPath: /var/lib/grpc/data/\\n            name: grpc-io-proxyless-bootstrap\\n      {{- end }}\\n      volumes:\\n        - name: grpc-io-proxyless-bootstrap\\n          emptyDir: {}\\n  grpc-agent: |\\n    {{- $containers := list }}\\n    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name \\\"istio-proxy\\\") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}\\n    metadata:\\n      labels:\\n        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}\\n        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default \\\"latest\\\"  | quote }}\\n      annotations: {\\n        {{- if eq (len $containers) 1 }}\\n        kubectl.kubernetes.io/default-logs-container: \\\"{{ index $containers 0 }}\\\",\\n        kubectl.kubernetes.io/default-container: \\\"{{ index $containers 0 }}\\\",\\n        {{ end }}\\n        sidecar.istio.io/rewriteAppHTTPProbers: \\\"false\\\",\\n      }\\n    spec:\\n      containers:\\n      {{- range $index, $container := .Spec.Containers  }}\\n      {{ if not (eq $container.Name \\\"istio-proxy\\\") }}\\n      - name: {{ $container.Name }}\\n        env:\\n        - name: \\\"GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT\\\"\\n          value: \\\"true\\\"\\n        - name: \\\"GRPC_XDS_BOOTSTRAP\\\"\\n          value: \\\"/etc/istio/proxy/grpc-bootstrap.json\\\"\\n        volumeMounts:\\n        - mountPath: /var/lib/istio/data\\n          name: istio-data\\n        # UDS channel between istioagent and gRPC client for XDS/SDS\\n        - mountPath: /etc/istio/proxy\\n          name: istio-xds\\n      {{- end }}\\n      {{- end }}\\n      - name: istio-proxy\\n      {{- if contains \\\"/\\\" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}\\n        image: \\\"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}\\\"\\n      {{- else }}\\n        image: \\\"{{ .ProxyImage }}\\\"\\n      {{- end }}\\n        args:\\n        - proxy\\n        - sidecar\\n        - --domain\\n        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}\\n        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}\\n      {{- if .Values.global.sts.servicePort }}\\n        - --stsPort={{ .Values.global.sts.servicePort }}\\n      {{- end }}\\n      {{- if .Values.global.logAsJson }}\\n        - --log_as_json\\n      {{- end }}\\n        env:\\n        - name: ISTIO_META_GENERATOR\\n          value: grpc\\n        - name: OUTPUT_CERTS\\n          value: /var/lib/istio/data\\n        {{- if eq (env \\\"PILOT_ENABLE_INBOUND_PASSTHROUGH\\\" \\\"true\\\") \\\"false\\\" }}\\n        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION\\n          value: \\\"true\\\"\\n        {{- end }}\\n        - name: JWT_POLICY\\n          value: {{ .Values.global.jwtPolicy }}\\n        - name: PILOT_CERT_PROVIDER\\n          value: {{ .Values.global.pilotCertProvider }}\\n        - name: CA_ADDR\\n        {{- if .Values.global.caAddress }}\\n          value: {{ .Values.global.caAddress }}\\n        {{- else }}\\n          value: istiod{{- if not (eq .Values.revision \\\"\\\") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012\\n        {{- end }}\\n        - name: POD_NAME\\n          valueFrom:\\n            fieldRef:\\n              fieldPath: metadata.name\\n        - name: POD_NAMESPACE\\n          valueFrom:\\n            fieldRef:\\n              fieldPath: metadata.namespace\\n        - name: INSTANCE_IP\\n          valueFrom:\\n            fieldRef:\\n              fieldPath: status.podIP\\n        - name: SERVICE_ACCOUNT\\n          valueFrom:\\n            fieldRef:\\n              fieldPath: spec.serviceAccountName\\n        - name: HOST_IP\\n          valueFrom:\\n            fieldRef:\\n              fieldPath: status.hostIP\\n        - name: PROXY_CONFIG\\n          value: |\\n                 {{ protoToJSON .ProxyConfig }}\\n        - name: ISTIO_META_POD_PORTS\\n          value: |-\\n            [\\n            {{- $first := true }}\\n            {{- range $index1, $c := .Spec.Containers }}\\n              {{- range $index2, $p := $c.Ports }}\\n                {{- if (structToJSON $p) }}\\n                {{if not $first}},{{end}}{{ structToJSON $p }}\\n                {{- $first = false }}\\n                {{- end }}\\n              {{- end}}\\n            {{- end}}\\n            ]\\n        - name: ISTIO_META_APP_CONTAINERS\\n          value: \\\"{{ $containers | join \\\",\\\" }}\\\"\\n        - name: ISTIO_META_CLUSTER_ID\\n          value: \\\"{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}\\\"\\n        - name: ISTIO_META_INTERCEPTION_MODE\\n          value: \\\"{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}\\\"\\n        {{- if .Values.global.network }}\\n        - name: ISTIO_META_NETWORK\\n          value: \\\"{{ .Values.global.network }}\\\"\\n        {{- end }}\\n        {{- if .DeploymentMeta.Name }}\\n        - name: ISTIO_META_WORKLOAD_NAME\\n          value: \\\"{{ .DeploymentMeta.Name }}\\\"\\n        {{ end }}\\n        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}\\n        - name: ISTIO_META_OWNER\\n          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}\\n        {{- end}}\\n        {{- if .Values.global.meshID }}\\n        - name: ISTIO_META_MESH_ID\\n          value: \\\"{{ .Values.global.meshID }}\\\"\\n        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}\\n        - name: ISTIO_META_MESH_ID\\n          value: \\\"{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}\\\"\\n        {{- end }}\\n        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}\\n        - name: TRUST_DOMAIN\\n          value: \\\"{{ . }}\\\"\\n        {{- end }}\\n        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}\\n        - name: {{ $key }}\\n          value: \\\"{{ $value }}\\\"\\n        {{- end }}\\n        # grpc uses xds:/// to resolve – no need to resolve VIP\\n        - name: ISTIO_META_DNS_CAPTURE\\n          value: \\\"false\\\"\\n        - name: DISABLE_ENVOY\\n          value: \\\"true\\\"\\n        {{with .Values.global.imagePullPolicy }}imagePullPolicy: \\\"{{.}}\\\"{{end}}\\n        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}\\n        readinessProbe:\\n          httpGet:\\n            path: /healthz/ready\\n            port: {{ .Values.global.proxy.statusPort }}\\n          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}\\n          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}\\n          timeoutSeconds: 3\\n          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}\\n        {{ end -}}\\n        resources:\\n      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}\\n        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}\\n          requests:\\n            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}\\n            cpu: \\\"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}\\\"\\n            {{ end }}\\n            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}\\n            memory: \\\"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}\\\"\\n            {{ end }}\\n        {{- end }}\\n        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}\\n          limits:\\n            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}\\n            cpu: \\\"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}\\\"\\n            {{ end }}\\n            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}\\n            memory: \\\"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}\\\"\\n            {{ end }}\\n        {{- end }}\\n      {{- else }}\\n        {{- if .Values.global.proxy.resources }}\\n          {{ toYaml .Values.global.proxy.resources | indent 6 }}\\n        {{- end }}\\n      {{- end }}\\n        volumeMounts:\\n        {{- if eq .Values.global.pilotCertProvider \\\"istiod\\\" }}\\n        - mountPath: /var/run/secrets/istio\\n          name: istiod-ca-cert\\n        {{- end }}\\n        - mountPath: /var/lib/istio/data\\n          name: istio-data\\n        # UDS channel between istioagent and gRPC client for XDS/SDS\\n        - mountPath: /etc/istio/proxy\\n          name: istio-xds\\n        {{- if eq .Values.global.jwtPolicy \\\"third-party-jwt\\\" }}\\n        - mountPath: /var/run/secrets/tokens\\n          name: istio-token\\n        {{- end }}\\n        - name: istio-podinfo\\n          mountPath: /etc/istio/pod\\n        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}\\n        {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}\\n        - name: \\\"{{  $index }}\\\"\\n        {{ toYaml $value | indent 6 }}\\n        {{ end }}\\n        {{- end }}\\n      volumes:\\n      # UDS channel between istioagent and gRPC client for XDS/SDS\\n      - emptyDir:\\n          medium: Memory\\n        name: istio-xds\\n      - name: istio-data\\n        emptyDir: {}\\n      - name: istio-podinfo\\n        downwardAPI:\\n          items:\\n            - path: \\\"labels\\\"\\n              fieldRef:\\n                fieldPath: metadata.labels\\n            - path: \\\"annotations\\\"\\n              fieldRef:\\n                fieldPath: metadata.annotations\\n    {{- if eq .Values.global.jwtPolicy \\\"third-party-jwt\\\" }}\\n      - name: istio-token\\n        projected:\\n          sources:\\n          - serviceAccountToken:\\n              path: istio-token\\n              expirationSeconds: 43200\\n              audience: {{ .Values.global.sds.token.aud }}\\n    {{- end }}\\n      {{- if eq .Values.global.pilotCertProvider \\\"istiod\\\" }}\\n      - name: istiod-ca-cert\\n        configMap:\\n          name: istio-ca-root-cert\\n      {{- end }}\\n      {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}\\n      {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}\\n      - name: \\\"{{ $index }}\\\"\\n      {{ toYaml $value | indent 4 }}\\n      {{ end }}\\n      {{ end }}\", \"values\": \"{\\n  \\\"global\\\": {\\n    \\\"caAddress\\\": \\\"\\\",\\n    \\\"caName\\\": \\\"\\\",\\n    \\\"configCluster\\\": false,\\n    \\\"configValidation\\\": true,\\n    \\\"defaultNodeSelector\\\": {},\\n    \\\"defaultPodDisruptionBudget\\\": {\\n      \\\"enabled\\\": true\\n    },\\n    \\\"defaultResources\\\": {\\n      \\\"requests\\\": {\\n        \\\"cpu\\\": \\\"10m\\\"\\n      }\\n    },\\n    \\\"enabled\\\": true,\\n    \\\"externalIstiod\\\": false,\\n    \\\"hub\\\": \\\"docker.io/istio\\\",\\n    \\\"imagePullPolicy\\\": \\\"\\\",\\n    \\\"imagePullSecrets\\\": [],\\n    \\\"istioNamespace\\\": \\\"istio-system\\\",\\n    \\\"istiod\\\": {\\n      \\\"enableAnalysis\\\": false\\n    },\\n    \\\"jwtPolicy\\\": \\\"third-party-jwt\\\",\\n    \\\"logAsJson\\\": false,\\n    \\\"logging\\\": {\\n      \\\"level\\\": \\\"default:info\\\"\\n    },\\n    \\\"meshID\\\": \\\"\\\",\\n    \\\"meshNetworks\\\": {},\\n    \\\"mountMtlsCerts\\\": false,\\n    \\\"multiCluster\\\": {\\n      \\\"clusterName\\\": \\\"\\\",\\n      \\\"enabled\\\": false\\n    },\\n    \\\"namespace\\\": \\\"istio-system\\\",\\n    \\\"network\\\": \\\"\\\",\\n    \\\"omitSidecarInjectorConfigMap\\\": false,\\n    \\\"oneNamespace\\\": false,\\n    \\\"operatorManageWebhooks\\\": false,\\n    \\\"pilotCertProvider\\\": \\\"istiod\\\",\\n    \\\"priorityClassName\\\": \\\"\\\",\\n    \\\"proxy\\\": {\\n      \\\"autoInject\\\": \\\"enabled\\\",\\n      \\\"clusterDomain\\\": \\\"cluster.local\\\",\\n      \\\"componentLogLevel\\\": \\\"misc:error\\\",\\n      \\\"enableCoreDump\\\": false,\\n      \\\"excludeIPRanges\\\": \\\"\\\",\\n      \\\"excludeInboundPorts\\\": \\\"\\\",\\n      \\\"excludeOutboundPorts\\\": \\\"\\\",\\n      \\\"holdApplicationUntilProxyStarts\\\": false,\\n      \\\"image\\\": \\\"proxyv2\\\",\\n      \\\"includeIPRanges\\\": \\\"*\\\",\\n      \\\"includeInboundPorts\\\": \\\"*\\\",\\n      \\\"includeOutboundPorts\\\": \\\"\\\",\\n      \\\"logLevel\\\": \\\"warning\\\",\\n      \\\"privileged\\\": false,\\n      \\\"readinessFailureThreshold\\\": 30,\\n      \\\"readinessInitialDelaySeconds\\\": 1,\\n      \\\"readinessPeriodSeconds\\\": 2,\\n      \\\"resources\\\": {\\n        \\\"limits\\\": {\\n          \\\"cpu\\\": \\\"2000m\\\",\\n          \\\"memory\\\": \\\"1024Mi\\\"\\n        },\\n        \\\"requests\\\": {\\n          \\\"cpu\\\": \\\"100m\\\",\\n          \\\"memory\\\": \\\"128Mi\\\"\\n        }\\n      },\\n      \\\"statusPort\\\": 15020,\\n      \\\"tracer\\\": \\\"zipkin\\\"\\n    },\\n    \\\"proxy_init\\\": {\\n      \\\"image\\\": \\\"proxyv2\\\",\\n      \\\"resources\\\": {\\n        \\\"limits\\\": {\\n          \\\"cpu\\\": \\\"2000m\\\",\\n          \\\"memory\\\": \\\"1024Mi\\\"\\n        },\\n        \\\"requests\\\": {\\n          \\\"cpu\\\": \\\"10m\\\",\\n          \\\"memory\\\": \\\"10Mi\\\"\\n        }\\n      }\\n    },\\n    \\\"remotePilotAddress\\\": \\\"\\\",\\n    \\\"sds\\\": {\\n      \\\"token\\\": {\\n        \\\"aud\\\": \\\"istio-ca\\\"\\n      }\\n    },\\n    \\\"sts\\\": {\\n      \\\"servicePort\\\": 0\\n    },\\n    \\\"tag\\\": \\\"1.13.2\\\",\\n    \\\"tracer\\\": {\\n      \\\"datadog\\\": {\\n        \\\"address\\\": \\\"$(HOST_IP):8126\\\"\\n      },\\n      \\\"lightstep\\\": {\\n        \\\"accessToken\\\": \\\"\\\",\\n        \\\"address\\\": \\\"\\\"\\n      },\\n      \\\"stackdriver\\\": {\\n        \\\"debug\\\": false,\\n        \\\"maxNumberOfAnnotations\\\": 200,\\n        \\\"maxNumberOfAttributes\\\": 200,\\n        \\\"maxNumberOfMessageEvents\\\": 200\\n      },\\n      \\\"zipkin\\\": {\\n        \\\"address\\\": \\\"\\\"\\n      }\\n    },\\n    \\\"useMCP\\\": false\\n  },\\n  \\\"istio_cni\\\": {\\n    \\\"enabled\\\": false\\n  },\\n  \\\"revision\\\": \\\"\\\",\\n  \\\"sidecarInjectorWebhook\\\": {\\n    \\\"alwaysInjectSelector\\\": [],\\n    \\\"defaultTemplates\\\": [],\\n    \\\"enableNamespacesByDefault\\\": false,\\n    \\\"injectedAnnotations\\\": {},\\n    \\\"neverInjectSelector\\\": [],\\n    \\\"objectSelector\\\": {\\n      \\\"autoInject\\\": true,\\n      \\\"enabled\\\": true\\n    },\\n    \\\"rewriteAppHTTPProbe\\\": true,\\n    \\\"templates\\\": {}\\n  }\\n}\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"65673db5-65c9-4f51-99db-2badb2cef089\", \"name\": \"istio-sidecar-injector\", \"labels\": {\"release\": \"istio\", \"istio.io/rev\": \"default\", \"operator.istio.io/managed\": \"Reconcile\", \"operator.istio.io/version\": \"1.13.2\", \"operator.istio.io/component\": \"Pilot\", \"install.operator.istio.io/owning-resource\": \"ingress\", \"install.operator.istio.io/owning-resource-namespace\": \"istio-system\"}, \"namespace\": \"istio-system\", \"annotations\": {\"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"data\\\":{\\\"config\\\":\\\"# defaultTemplates defines the default template to use for pods that do not explicitly specify a template\\\\ndefaultTemplates: [sidecar]\\\\npolicy: enabled\\\\nalwaysInjectSelector:\\\\n  []\\\\nneverInjectSelector:\\\\n  []\\\\ninjectedAnnotations:\\\\ntemplate: \\\\\\\"{{ Template_Version_And_Istio_Version_Mismatched_Check_Installation }}\\\\\\\"\\\\ntemplates:\\\\n  sidecar: |\\\\n    {{- define \\\\\\\"resources\\\\\\\"  }}\\\\n      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}\\\\n        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}\\\\n          requests:\\\\n            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}\\\\n            cpu: \\\\\\\"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}\\\\\\\"\\\\n            {{ end }}\\\\n            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}\\\\n            memory: \\\\\\\"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}\\\\\\\"\\\\n            {{ end }}\\\\n        {{- end }}\\\\n        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}\\\\n          limits:\\\\n            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}\\\\n            cpu: \\\\\\\"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}\\\\\\\"\\\\n            {{ end }}\\\\n            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}\\\\n            memory: \\\\\\\"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}\\\\\\\"\\\\n            {{ end }}\\\\n        {{- end }}\\\\n      {{- else }}\\\\n        {{- if .Values.global.proxy.resources }}\\\\n          {{ toYaml .Values.global.proxy.resources | indent 6 }}\\\\n        {{- end }}\\\\n      {{- end }}\\\\n    {{- end }}\\\\n    {{- $containers := list }}\\\\n    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name \\\\\\\"istio-proxy\\\\\\\") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}\\\\n    metadata:\\\\n      labels:\\\\n        security.istio.io/tlsMode: {{ index .ObjectMeta.Labels `security.istio.io/tlsMode` | default \\\\\\\"istio\\\\\\\"  | quote }}\\\\n        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}\\\\n        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default \\\\\\\"latest\\\\\\\"  | quote }}\\\\n      annotations: {\\\\n        {{- if eq (len $containers) 1 }}\\\\n        kubectl.kubernetes.io/default-logs-container: \\\\\\\"{{ index $containers 0 }}\\\\\\\",\\\\n        kubectl.kubernetes.io/default-container: \\\\\\\"{{ index $containers 0 }}\\\\\\\",\\\\n        {{ end }}\\\\n    {{- if .Values.istio_cni.enabled }}\\\\n        {{- if not .Values.istio_cni.chained }}\\\\n        k8s.v1.cni.cncf.io/networks: \'{{ appendMultusNetwork (index .ObjectMeta.Annotations `k8s.v1.cni.cncf.io/networks`) `istio-cni` }}\',\\\\n        {{- end }}\\\\n        sidecar.istio.io/interceptionMode: \\\\\\\"{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}\\\\\\\",\\\\n        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}traffic.sidecar.istio.io/includeOutboundIPRanges: \\\\\\\"{{.}}\\\\\\\",{{ end }}\\\\n        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}traffic.sidecar.istio.io/excludeOutboundIPRanges: \\\\\\\"{{.}}\\\\\\\",{{ end }}\\\\n        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}traffic.sidecar.istio.io/includeInboundPorts: \\\\\\\"{{.}}\\\\\\\",{{ end }}\\\\n        traffic.sidecar.istio.io/excludeInboundPorts: \\\\\\\"{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}\\\\\\\",\\\\n        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts \\\\\\\"\\\\\\\") \\\\\\\"\\\\\\\") }}\\\\n        traffic.sidecar.istio.io/includeOutboundPorts: \\\\\\\"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}\\\\\\\",\\\\n        {{- end }}\\\\n        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts \\\\\\\"\\\\\\\") }}\\\\n        traffic.sidecar.istio.io/excludeOutboundPorts: \\\\\\\"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}\\\\\\\",\\\\n        {{- end }}\\\\n        {{ with index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}traffic.sidecar.istio.io/kubevirtInterfaces: \\\\\\\"{{.}}\\\\\\\",{{ end }}\\\\n    {{- end }}\\\\n      }\\\\n    spec:\\\\n      {{- $holdProxy := or .ProxyConfig.HoldApplicationUntilProxyStarts.GetValue .Values.global.proxy.holdApplicationUntilProxyStarts }}\\\\n      initContainers:\\\\n      {{ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `NONE` }}\\\\n      {{ if .Values.istio_cni.enabled -}}\\\\n      - name: istio-validation\\\\n      {{ else -}}\\\\n      - name: istio-init\\\\n      {{ end -}}\\\\n      {{- if contains \\\\\\\"/\\\\\\\" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}\\\\n        image: \\\\\\\"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}\\\\\\\"\\\\n      {{- else }}\\\\n        image: \\\\\\\"{{ .ProxyImage }}\\\\\\\"\\\\n      {{- end }}\\\\n        args:\\\\n        - istio-iptables\\\\n        - \\\\\\\"-p\\\\\\\"\\\\n        - {{ .MeshConfig.ProxyListenPort | default \\\\\\\"15001\\\\\\\" | quote }}\\\\n        - \\\\\\\"-z\\\\\\\"\\\\n        - \\\\\\\"15006\\\\\\\"\\\\n        - \\\\\\\"-u\\\\\\\"\\\\n        - \\\\\\\"1337\\\\\\\"\\\\n        - \\\\\\\"-m\\\\\\\"\\\\n        - \\\\\\\"{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}\\\\\\\"\\\\n        - \\\\\\\"-i\\\\\\\"\\\\n        - \\\\\\\"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}\\\\\\\"\\\\n        - \\\\\\\"-x\\\\\\\"\\\\n        - \\\\\\\"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}\\\\\\\"\\\\n        - \\\\\\\"-b\\\\\\\"\\\\n        - \\\\\\\"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}\\\\\\\"\\\\n        - \\\\\\\"-d\\\\\\\"\\\\n      {{- if excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}\\\\n        - \\\\\\\"15090,15021,{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}\\\\\\\"\\\\n      {{- else }}\\\\n        - \\\\\\\"15090,15021\\\\\\\"\\\\n      {{- end }}\\\\n        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts \\\\\\\"\\\\\\\") \\\\\\\"\\\\\\\") -}}\\\\n        - \\\\\\\"-q\\\\\\\"\\\\n        - \\\\\\\"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}\\\\\\\"\\\\n        {{ end -}}\\\\n        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.excludeOutboundPorts \\\\\\\"\\\\\\\") \\\\\\\"\\\\\\\") -}}\\\\n        - \\\\\\\"-o\\\\\\\"\\\\n        - \\\\\\\"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}\\\\\\\"\\\\n        {{ end -}}\\\\n        {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`) -}}\\\\n        - \\\\\\\"-k\\\\\\\"\\\\n        - \\\\\\\"{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}\\\\\\\"\\\\n        {{ end -}}\\\\n        {{ if .Values.istio_cni.enabled -}}\\\\n        - \\\\\\\"--run-validation\\\\\\\"\\\\n        - \\\\\\\"--skip-rule-apply\\\\\\\"\\\\n        {{ end -}}\\\\n        {{with .Values.global.imagePullPolicy }}imagePullPolicy: \\\\\\\"{{.}}\\\\\\\"{{end}}\\\\n      {{- if .ProxyConfig.ProxyMetadata }}\\\\n        env:\\\\n        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}\\\\n        - name: {{ $key }}\\\\n          value: \\\\\\\"{{ $value }}\\\\\\\"\\\\n        {{- end }}\\\\n      {{- end }}\\\\n        resources:\\\\n      {{ template \\\\\\\"resources\\\\\\\" . }}\\\\n        securityContext:\\\\n          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}\\\\n          privileged: {{ .Values.global.proxy.privileged }}\\\\n          capabilities:\\\\n        {{- if not .Values.istio_cni.enabled }}\\\\n            add:\\\\n            - NET_ADMIN\\\\n            - NET_RAW\\\\n        {{- end }}\\\\n            drop:\\\\n            - ALL\\\\n        {{- if not .Values.istio_cni.enabled }}\\\\n          readOnlyRootFilesystem: false\\\\n          runAsGroup: 0\\\\n          runAsNonRoot: false\\\\n          runAsUser: 0\\\\n        {{- else }}\\\\n          readOnlyRootFilesystem: true\\\\n          runAsGroup: 1337\\\\n          runAsUser: 1337\\\\n          runAsNonRoot: true\\\\n        {{- end }}\\\\n        restartPolicy: Always\\\\n      {{ end -}}\\\\n      {{- if eq (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) \\\\\\\"true\\\\\\\" }}\\\\n      - name: enable-core-dump\\\\n        args:\\\\n        - -c\\\\n        - sysctl -w kernel.core_pattern=/var/lib/istio/data/core.proxy \\\\u0026\\\\u0026 ulimit -c unlimited\\\\n        command:\\\\n          - /bin/sh\\\\n      {{- if contains \\\\\\\"/\\\\\\\" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}\\\\n        image: \\\\\\\"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}\\\\\\\"\\\\n      {{- else }}\\\\n        image: \\\\\\\"{{ .ProxyImage }}\\\\\\\"\\\\n      {{- end }}\\\\n        {{with .Values.global.imagePullPolicy }}imagePullPolicy: \\\\\\\"{{.}}\\\\\\\"{{end}}\\\\n        resources:\\\\n      {{ template \\\\\\\"resources\\\\\\\" . }}\\\\n        securityContext:\\\\n          allowPrivilegeEscalation: true\\\\n          capabilities:\\\\n            add:\\\\n            - SYS_ADMIN\\\\n            drop:\\\\n            - ALL\\\\n          privileged: true\\\\n          readOnlyRootFilesystem: false\\\\n          runAsGroup: 0\\\\n          runAsNonRoot: false\\\\n          runAsUser: 0\\\\n      {{ end }}\\\\n      containers:\\\\n      - name: istio-proxy\\\\n      {{- if contains \\\\\\\"/\\\\\\\" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}\\\\n        image: \\\\\\\"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}\\\\\\\"\\\\n      {{- else }}\\\\n        image: \\\\\\\"{{ .ProxyImage }}\\\\\\\"\\\\n      {{- end }}\\\\n        ports:\\\\n        - containerPort: 15090\\\\n          protocol: TCP\\\\n          name: http-envoy-prom\\\\n        args:\\\\n        - proxy\\\\n        - sidecar\\\\n        - --domain\\\\n        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}\\\\n        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}\\\\n        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}\\\\n        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}\\\\n      {{- if .Values.global.sts.servicePort }}\\\\n        - --stsPort={{ .Values.global.sts.servicePort }}\\\\n      {{- end }}\\\\n      {{- if .Values.global.logAsJson }}\\\\n        - --log_as_json\\\\n      {{- end }}\\\\n      {{- if gt .EstimatedConcurrency 0 }}\\\\n        - --concurrency\\\\n        - \\\\\\\"{{ .EstimatedConcurrency }}\\\\\\\"\\\\n      {{- end -}}\\\\n      {{- if .Values.global.proxy.lifecycle }}\\\\n        lifecycle:\\\\n          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}\\\\n      {{- else if $holdProxy }}\\\\n        lifecycle:\\\\n          postStart:\\\\n            exec:\\\\n              command:\\\\n              - pilot-agent\\\\n              - wait\\\\n      {{- end }}\\\\n        env:\\\\n        {{- if eq (env \\\\\\\"PILOT_ENABLE_INBOUND_PASSTHROUGH\\\\\\\" \\\\\\\"true\\\\\\\") \\\\\\\"false\\\\\\\" }}\\\\n        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION\\\\n          value: \\\\\\\"true\\\\\\\"\\\\n        {{- end }}\\\\n        - name: JWT_POLICY\\\\n          value: {{ .Values.global.jwtPolicy }}\\\\n        - name: PILOT_CERT_PROVIDER\\\\n          value: {{ .Values.global.pilotCertProvider }}\\\\n        - name: CA_ADDR\\\\n        {{- if .Values.global.caAddress }}\\\\n          value: {{ .Values.global.caAddress }}\\\\n        {{- else }}\\\\n          value: istiod{{- if not (eq .Values.revision \\\\\\\"\\\\\\\") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012\\\\n        {{- end }}\\\\n        - name: POD_NAME\\\\n          valueFrom:\\\\n            fieldRef:\\\\n              fieldPath: metadata.name\\\\n        - name: POD_NAMESPACE\\\\n          valueFrom:\\\\n            fieldRef:\\\\n              fieldPath: metadata.namespace\\\\n        - name: INSTANCE_IP\\\\n          valueFrom:\\\\n            fieldRef:\\\\n              fieldPath: status.podIP\\\\n        - name: SERVICE_ACCOUNT\\\\n          valueFrom:\\\\n            fieldRef:\\\\n              fieldPath: spec.serviceAccountName\\\\n        - name: HOST_IP\\\\n          valueFrom:\\\\n            fieldRef:\\\\n              fieldPath: status.hostIP\\\\n        - name: PROXY_CONFIG\\\\n          value: |\\\\n                 {{ protoToJSON .ProxyConfig }}\\\\n        - name: ISTIO_META_POD_PORTS\\\\n          value: |-\\\\n            [\\\\n            {{- $first := true }}\\\\n            {{- range $index1, $c := .Spec.Containers }}\\\\n              {{- range $index2, $p := $c.Ports }}\\\\n                {{- if (structToJSON $p) }}\\\\n                {{if not $first}},{{end}}{{ structToJSON $p }}\\\\n                {{- $first = false }}\\\\n                {{- end }}\\\\n              {{- end}}\\\\n            {{- end}}\\\\n            ]\\\\n        - name: ISTIO_META_APP_CONTAINERS\\\\n          value: \\\\\\\"{{ $containers | join \\\\\\\",\\\\\\\" }}\\\\\\\"\\\\n        - name: ISTIO_META_CLUSTER_ID\\\\n          value: \\\\\\\"{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}\\\\\\\"\\\\n        - name: ISTIO_META_INTERCEPTION_MODE\\\\n          value: \\\\\\\"{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}\\\\\\\"\\\\n        {{- if .Values.global.network }}\\\\n        - name: ISTIO_META_NETWORK\\\\n          value: \\\\\\\"{{ .Values.global.network }}\\\\\\\"\\\\n        {{- end }}\\\\n        {{- if .DeploymentMeta.Name }}\\\\n        - name: ISTIO_META_WORKLOAD_NAME\\\\n          value: \\\\\\\"{{ .DeploymentMeta.Name }}\\\\\\\"\\\\n        {{ end }}\\\\n        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}\\\\n        - name: ISTIO_META_OWNER\\\\n          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}\\\\n        {{- end}}\\\\n        {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}\\\\n        - name: ISTIO_BOOTSTRAP_OVERRIDE\\\\n          value: \\\\\\\"/etc/istio/custom-bootstrap/custom_bootstrap.json\\\\\\\"\\\\n        {{- end }}\\\\n        {{- if .Values.global.meshID }}\\\\n        - name: ISTIO_META_MESH_ID\\\\n          value: \\\\\\\"{{ .Values.global.meshID }}\\\\\\\"\\\\n        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}\\\\n        - name: ISTIO_META_MESH_ID\\\\n          value: \\\\\\\"{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}\\\\\\\"\\\\n        {{- end }}\\\\n        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}\\\\n        - name: TRUST_DOMAIN\\\\n          value: \\\\\\\"{{ . }}\\\\\\\"\\\\n        {{- end }}\\\\n        {{- if and (eq .Values.global.proxy.tracer \\\\\\\"datadog\\\\\\\") (isset .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}\\\\n        {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}\\\\n        - name: {{ $key }}\\\\n          value: \\\\\\\"{{ $value }}\\\\\\\"\\\\n        {{- end }}\\\\n        {{- end }}\\\\n        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}\\\\n        - name: {{ $key }}\\\\n          value: \\\\\\\"{{ $value }}\\\\\\\"\\\\n        {{- end }}\\\\n        {{with .Values.global.imagePullPolicy }}imagePullPolicy: \\\\\\\"{{.}}\\\\\\\"{{end}}\\\\n        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}\\\\n        readinessProbe:\\\\n          httpGet:\\\\n            path: /healthz/ready\\\\n            port: 15021\\\\n          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}\\\\n          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}\\\\n          timeoutSeconds: 3\\\\n          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}\\\\n        {{ end -}}\\\\n        securityContext:\\\\n          {{- if eq (index .ProxyConfig.ProxyMetadata \\\\\\\"IPTABLES_TRACE_LOGGING\\\\\\\") \\\\\\\"true\\\\\\\" }}\\\\n          allowPrivilegeEscalation: true\\\\n          capabilities:\\\\n            add:\\\\n            - NET_ADMIN\\\\n            drop:\\\\n            - ALL\\\\n          privileged: true\\\\n          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) \\\\\\\"true\\\\\\\" }}\\\\n          runAsGroup: 1337\\\\n          fsGroup: 1337\\\\n          runAsNonRoot: false\\\\n          runAsUser: 0\\\\n          {{- else }}\\\\n          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}\\\\n          capabilities:\\\\n            {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}\\\\n            add:\\\\n            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY` -}}\\\\n            - NET_ADMIN\\\\n            {{- end }}\\\\n            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true` -}}\\\\n            - NET_BIND_SERVICE\\\\n            {{- end }}\\\\n            {{- end }}\\\\n            drop:\\\\n            - ALL\\\\n          privileged: {{ .Values.global.proxy.privileged }}\\\\n          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) \\\\\\\"true\\\\\\\" }}\\\\n          runAsGroup: 1337\\\\n          fsGroup: 1337\\\\n          {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}\\\\n          runAsNonRoot: false\\\\n          runAsUser: 0\\\\n          {{- else -}}\\\\n          runAsNonRoot: true\\\\n          runAsUser: 1337\\\\n          {{- end }}\\\\n          {{- end }}\\\\n        resources:\\\\n      {{ template \\\\\\\"resources\\\\\\\" . }}\\\\n        volumeMounts:\\\\n        {{- if eq .Values.global.caName \\\\\\\"GkeWorkloadCertificate\\\\\\\" }}\\\\n        - name: gke-workload-certificate\\\\n          mountPath: /var/run/secrets/workload-spiffe-credentials\\\\n          readOnly: true\\\\n        {{- end }}\\\\n        {{- if eq .Values.global.pilotCertProvider \\\\\\\"istiod\\\\\\\" }}\\\\n        - mountPath: /var/run/secrets/istio\\\\n          name: istiod-ca-cert\\\\n        {{- end }}\\\\n        - mountPath: /var/lib/istio/data\\\\n          name: istio-data\\\\n        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}\\\\n        - mountPath: /etc/istio/custom-bootstrap\\\\n          name: custom-bootstrap-volume\\\\n        {{- end }}\\\\n        # SDS channel between istioagent and Envoy\\\\n        - mountPath: /etc/istio/proxy\\\\n          name: istio-envoy\\\\n        {{- if eq .Values.global.jwtPolicy \\\\\\\"third-party-jwt\\\\\\\" }}\\\\n        - mountPath: /var/run/secrets/tokens\\\\n          name: istio-token\\\\n        {{- end }}\\\\n        {{- if .Values.global.mountMtlsCerts }}\\\\n        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.\\\\n        - mountPath: /etc/certs/\\\\n          name: istio-certs\\\\n          readOnly: true\\\\n        {{- end }}\\\\n        - name: istio-podinfo\\\\n          mountPath: /etc/istio/pod\\\\n         {{- if and (eq .Values.global.proxy.tracer \\\\\\\"lightstep\\\\\\\") .ProxyConfig.GetTracing.GetTlsSettings }}\\\\n        - mountPath: {{ directory .ProxyConfig.GetTracing.GetTlsSettings.GetCaCertificates }}\\\\n          name: lightstep-certs\\\\n          readOnly: true\\\\n        {{- end }}\\\\n          {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}\\\\n          {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}\\\\n        - name: \\\\\\\"{{  $index }}\\\\\\\"\\\\n          {{ toYaml $value | indent 6 }}\\\\n          {{ end }}\\\\n          {{- end }}\\\\n      volumes:\\\\n      {{- if eq .Values.global.caName \\\\\\\"GkeWorkloadCertificate\\\\\\\" }}\\\\n      - name: gke-workload-certificate\\\\n        csi:\\\\n          driver: workloadcertificates.security.cloud.google.com\\\\n      {{- end }}\\\\n      {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}\\\\n      - name: custom-bootstrap-volume\\\\n        configMap:\\\\n          name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` \\\\\\\"\\\\\\\" }}\\\\n      {{- end }}\\\\n      # SDS channel between istioagent and Envoy\\\\n      - emptyDir:\\\\n          medium: Memory\\\\n        name: istio-envoy\\\\n      - name: istio-data\\\\n        emptyDir: {}\\\\n      - name: istio-podinfo\\\\n        downwardAPI:\\\\n          items:\\\\n            - path: \\\\\\\"labels\\\\\\\"\\\\n              fieldRef:\\\\n                fieldPath: metadata.labels\\\\n            - path: \\\\\\\"annotations\\\\\\\"\\\\n              fieldRef:\\\\n                fieldPath: metadata.annotations\\\\n      {{- if eq .Values.global.jwtPolicy \\\\\\\"third-party-jwt\\\\\\\" }}\\\\n      - name: istio-token\\\\n        projected:\\\\n          sources:\\\\n          - serviceAccountToken:\\\\n              path: istio-token\\\\n              expirationSeconds: 43200\\\\n              audience: {{ .Values.global.sds.token.aud }}\\\\n      {{- end }}\\\\n      {{- if eq .Values.global.pilotCertProvider \\\\\\\"istiod\\\\\\\" }}\\\\n      - name: istiod-ca-cert\\\\n        configMap:\\\\n          name: istio-ca-root-cert\\\\n      {{- end }}\\\\n      {{- if .Values.global.mountMtlsCerts }}\\\\n      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.\\\\n      - name: istio-certs\\\\n        secret:\\\\n          optional: true\\\\n          {{ if eq .Spec.ServiceAccountName \\\\\\\"\\\\\\\" }}\\\\n          secretName: istio.default\\\\n          {{ else -}}\\\\n          secretName: {{  printf \\\\\\\"istio.%s\\\\\\\" .Spec.ServiceAccountName }}\\\\n          {{  end -}}\\\\n      {{- end }}\\\\n        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}\\\\n        {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}\\\\n      - name: \\\\\\\"{{ $index }}\\\\\\\"\\\\n        {{ toYaml $value | indent 4 }}\\\\n        {{ end }}\\\\n        {{ end }}\\\\n      {{- if and (eq .Values.global.proxy.tracer \\\\\\\"lightstep\\\\\\\") .ProxyConfig.GetTracing.GetTlsSettings }}\\\\n      - name: lightstep-certs\\\\n        secret:\\\\n          optional: true\\\\n          secretName: lightstep.cacert\\\\n      {{- end }}\\\\n      {{- if .Values.global.imagePullSecrets }}\\\\n      imagePullSecrets:\\\\n        {{- range .Values.global.imagePullSecrets }}\\\\n        - name: {{ . }}\\\\n        {{- end }}\\\\n      {{- end }}\\\\n      {{- if eq (env \\\\\\\"ENABLE_LEGACY_FSGROUP_INJECTION\\\\\\\" \\\\\\\"true\\\\\\\") \\\\\\\"true\\\\\\\" }}\\\\n      securityContext:\\\\n        fsGroup: 1337\\\\n      {{- end }}\\\\n  gateway: |\\\\n    {{- $containers := list }}\\\\n    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name \\\\\\\"istio-proxy\\\\\\\") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}\\\\n    metadata:\\\\n      labels:\\\\n        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}\\\\n        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default \\\\\\\"latest\\\\\\\"  | quote }}\\\\n        istio.io/rev: {{ .Revision | default \\\\\\\"default\\\\\\\" | quote }}\\\\n      annotations: {\\\\n        {{- if eq (len $containers) 1 }}\\\\n        kubectl.kubernetes.io/default-logs-container: \\\\\\\"{{ index $containers 0 }}\\\\\\\",\\\\n        kubectl.kubernetes.io/default-container: \\\\\\\"{{ index $containers 0 }}\\\\\\\",\\\\n        {{ end }}\\\\n      }\\\\n    spec:\\\\n      containers:\\\\n      - name: istio-proxy\\\\n      {{- if contains \\\\\\\"/\\\\\\\" .Values.global.proxy.image }}\\\\n        image: \\\\\\\"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}\\\\\\\"\\\\n      {{- else }}\\\\n        image: \\\\\\\"{{ .ProxyImage }}\\\\\\\"\\\\n      {{- end }}\\\\n        ports:\\\\n        - containerPort: 15090\\\\n          protocol: TCP\\\\n          name: http-envoy-prom\\\\n        args:\\\\n        - proxy\\\\n        - router\\\\n        - --domain\\\\n        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}\\\\n        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}\\\\n        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}\\\\n        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}\\\\n      {{- if .Values.global.sts.servicePort }}\\\\n        - --stsPort={{ .Values.global.sts.servicePort }}\\\\n      {{- end }}\\\\n      {{- if .Values.global.logAsJson }}\\\\n        - --log_as_json\\\\n      {{- end }}\\\\n      {{- if .Values.global.proxy.lifecycle }}\\\\n        lifecycle:\\\\n          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}\\\\n      {{- end }}\\\\n        env:\\\\n        - name: JWT_POLICY\\\\n          value: {{ .Values.global.jwtPolicy }}\\\\n        - name: PILOT_CERT_PROVIDER\\\\n          value: {{ .Values.global.pilotCertProvider }}\\\\n        - name: CA_ADDR\\\\n        {{- if .Values.global.caAddress }}\\\\n          value: {{ .Values.global.caAddress }}\\\\n        {{- else }}\\\\n          value: istiod{{- if not (eq .Values.revision \\\\\\\"\\\\\\\") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012\\\\n        {{- end }}\\\\n        - name: POD_NAME\\\\n          valueFrom:\\\\n            fieldRef:\\\\n              fieldPath: metadata.name\\\\n        - name: POD_NAMESPACE\\\\n          valueFrom:\\\\n            fieldRef:\\\\n              fieldPath: metadata.namespace\\\\n        - name: INSTANCE_IP\\\\n          valueFrom:\\\\n            fieldRef:\\\\n              fieldPath: status.podIP\\\\n        - name: SERVICE_ACCOUNT\\\\n          valueFrom:\\\\n            fieldRef:\\\\n              fieldPath: spec.serviceAccountName\\\\n        - name: HOST_IP\\\\n          valueFrom:\\\\n            fieldRef:\\\\n              fieldPath: status.hostIP\\\\n        - name: PROXY_CONFIG\\\\n          value: |\\\\n                 {{ protoToJSON .ProxyConfig }}\\\\n        - name: ISTIO_META_POD_PORTS\\\\n          value: |-\\\\n            [\\\\n            {{- $first := true }}\\\\n            {{- range $index1, $c := .Spec.Containers }}\\\\n              {{- range $index2, $p := $c.Ports }}\\\\n                {{- if (structToJSON $p) }}\\\\n                {{if not $first}},{{end}}{{ structToJSON $p }}\\\\n                {{- $first = false }}\\\\n                {{- end }}\\\\n              {{- end}}\\\\n            {{- end}}\\\\n            ]\\\\n        - name: ISTIO_META_APP_CONTAINERS\\\\n          value: \\\\\\\"{{ $containers | join \\\\\\\",\\\\\\\" }}\\\\\\\"\\\\n        - name: ISTIO_META_CLUSTER_ID\\\\n          value: \\\\\\\"{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}\\\\\\\"\\\\n        - name: ISTIO_META_INTERCEPTION_MODE\\\\n          value: \\\\\\\"{{ .ProxyConfig.InterceptionMode.String }}\\\\\\\"\\\\n        {{- if .Values.global.network }}\\\\n        - name: ISTIO_META_NETWORK\\\\n          value: \\\\\\\"{{ .Values.global.network }}\\\\\\\"\\\\n        {{- end }}\\\\n        {{- if .DeploymentMeta.Name }}\\\\n        - name: ISTIO_META_WORKLOAD_NAME\\\\n          value: \\\\\\\"{{ .DeploymentMeta.Name }}\\\\\\\"\\\\n        {{ end }}\\\\n        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}\\\\n        - name: ISTIO_META_OWNER\\\\n          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}\\\\n        {{- end}}\\\\n        {{- if .Values.global.meshID }}\\\\n        - name: ISTIO_META_MESH_ID\\\\n          value: \\\\\\\"{{ .Values.global.meshID }}\\\\\\\"\\\\n        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}\\\\n        - name: ISTIO_META_MESH_ID\\\\n          value: \\\\\\\"{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}\\\\\\\"\\\\n        {{- end }}\\\\n        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}\\\\n        - name: TRUST_DOMAIN\\\\n          value: \\\\\\\"{{ . }}\\\\\\\"\\\\n        {{- end }}\\\\n        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}\\\\n        - name: {{ $key }}\\\\n          value: \\\\\\\"{{ $value }}\\\\\\\"\\\\n        {{- end }}\\\\n        {{with .Values.global.imagePullPolicy }}imagePullPolicy: \\\\\\\"{{.}}\\\\\\\"{{end}}\\\\n        readinessProbe:\\\\n          httpGet:\\\\n            path: /healthz/ready\\\\n            port: 15021\\\\n          initialDelaySeconds: {{.Values.global.proxy.readinessInitialDelaySeconds }}\\\\n          periodSeconds: {{ .Values.global.proxy.readinessPeriodSeconds }}\\\\n          timeoutSeconds: 3\\\\n          failureThreshold: {{ .Values.global.proxy.readinessFailureThreshold }}\\\\n        volumeMounts:\\\\n        {{- if eq .Values.global.caName \\\\\\\"GkeWorkloadCertificate\\\\\\\" }}\\\\n        - name: gke-workload-certificate\\\\n          mountPath: /var/run/secrets/workload-spiffe-credentials\\\\n          readOnly: true\\\\n        {{- end }}\\\\n        {{- if eq .Values.global.pilotCertProvider \\\\\\\"istiod\\\\\\\" }}\\\\n        - mountPath: /var/run/secrets/istio\\\\n          name: istiod-ca-cert\\\\n        {{- end }}\\\\n        - mountPath: /var/lib/istio/data\\\\n          name: istio-data\\\\n        # SDS channel between istioagent and Envoy\\\\n        - mountPath: /etc/istio/proxy\\\\n          name: istio-envoy\\\\n        {{- if eq .Values.global.jwtPolicy \\\\\\\"third-party-jwt\\\\\\\" }}\\\\n        - mountPath: /var/run/secrets/tokens\\\\n          name: istio-token\\\\n        {{- end }}\\\\n        {{- if .Values.global.mountMtlsCerts }}\\\\n        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.\\\\n        - mountPath: /etc/certs/\\\\n          name: istio-certs\\\\n          readOnly: true\\\\n        {{- end }}\\\\n        - name: istio-podinfo\\\\n          mountPath: /etc/istio/pod\\\\n      volumes:\\\\n      {{- if eq .Values.global.caName \\\\\\\"GkeWorkloadCertificate\\\\\\\" }}\\\\n      - name: gke-workload-certificate\\\\n        csi:\\\\n          driver: workloadcertificates.security.cloud.google.com\\\\n      {{- end }}\\\\n      # SDS channel between istioagent and Envoy\\\\n      - emptyDir:\\\\n          medium: Memory\\\\n        name: istio-envoy\\\\n      - name: istio-data\\\\n        emptyDir: {}\\\\n      - name: istio-podinfo\\\\n        downwardAPI:\\\\n          items:\\\\n            - path: \\\\\\\"labels\\\\\\\"\\\\n              fieldRef:\\\\n                fieldPath: metadata.labels\\\\n            - path: \\\\\\\"annotations\\\\\\\"\\\\n              fieldRef:\\\\n                fieldPath: metadata.annotations\\\\n      {{- if eq .Values.global.jwtPolicy \\\\\\\"third-party-jwt\\\\\\\" }}\\\\n      - name: istio-token\\\\n        projected:\\\\n          sources:\\\\n          - serviceAccountToken:\\\\n              path: istio-token\\\\n              expirationSeconds: 43200\\\\n              audience: {{ .Values.global.sds.token.aud }}\\\\n      {{- end }}\\\\n      {{- if eq .Values.global.pilotCertProvider \\\\\\\"istiod\\\\\\\" }}\\\\n      - name: istiod-ca-cert\\\\n        configMap:\\\\n          name: istio-ca-root-cert\\\\n      {{- end }}\\\\n      {{- if .Values.global.mountMtlsCerts }}\\\\n      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.\\\\n      - name: istio-certs\\\\n        secret:\\\\n          optional: true\\\\n          {{ if eq .Spec.ServiceAccountName \\\\\\\"\\\\\\\" }}\\\\n          secretName: istio.default\\\\n          {{ else -}}\\\\n          secretName: {{  printf \\\\\\\"istio.%s\\\\\\\" .Spec.ServiceAccountName }}\\\\n          {{  end -}}\\\\n      {{- end }}\\\\n      {{- if .Values.global.imagePullSecrets }}\\\\n      imagePullSecrets:\\\\n        {{- range .Values.global.imagePullSecrets }}\\\\n        - name: {{ . }}\\\\n        {{- end }}\\\\n      {{- end }}\\\\n      {{- if eq (env \\\\\\\"ENABLE_LEGACY_FSGROUP_INJECTION\\\\\\\" \\\\\\\"true\\\\\\\") \\\\\\\"true\\\\\\\" }}\\\\n      securityContext:\\\\n        fsGroup: 1337\\\\n      {{- end }}\\\\n  grpc-simple: |\\\\n    metadata:\\\\n      sidecar.istio.io/rewriteAppHTTPProbers: \\\\\\\"false\\\\\\\"\\\\n    spec:\\\\n      initContainers:\\\\n        - name: grpc-bootstrap-init\\\\n          image: busybox:1.28\\\\n          volumeMounts:\\\\n            - mountPath: /var/lib/grpc/data/\\\\n              name: grpc-io-proxyless-bootstrap\\\\n          env:\\\\n            - name: INSTANCE_IP\\\\n              valueFrom:\\\\n                fieldRef:\\\\n                  fieldPath: status.podIP\\\\n            - name: POD_NAME\\\\n              valueFrom:\\\\n                fieldRef:\\\\n                  fieldPath: metadata.name\\\\n            - name: POD_NAMESPACE\\\\n              valueFrom:\\\\n                fieldRef:\\\\n                  fieldPath: metadata.namespace\\\\n            - name: ISTIO_NAMESPACE\\\\n              value: |\\\\n                 {{ .Values.global.istioNamespace }}\\\\n          command:\\\\n            - sh\\\\n            - \\\\\\\"-c\\\\\\\"\\\\n            - |-\\\\n              NODE_ID=\\\\\\\"sidecar~${INSTANCE_IP}~${POD_NAME}.${POD_NAMESPACE}~cluster.local\\\\\\\"\\\\n              SERVER_URI=\\\\\\\"dns:///istiod.${ISTIO_NAMESPACE}.svc:15010\\\\\\\"\\\\n              echo \'\\\\n              {\\\\n                \\\\\\\"xds_servers\\\\\\\": [\\\\n                  {\\\\n                    \\\\\\\"server_uri\\\\\\\": \\\\\\\"\'${SERVER_URI}\'\\\\\\\",\\\\n                    \\\\\\\"channel_creds\\\\\\\": [{\\\\\\\"type\\\\\\\": \\\\\\\"insecure\\\\\\\"}],\\\\n                    \\\\\\\"server_features\\\\\\\" : [\\\\\\\"xds_v3\\\\\\\"]\\\\n                  }\\\\n                ],\\\\n                \\\\\\\"node\\\\\\\": {\\\\n                  \\\\\\\"id\\\\\\\": \\\\\\\"\'${NODE_ID}\'\\\\\\\",\\\\n                  \\\\\\\"metadata\\\\\\\": {\\\\n                    \\\\\\\"GENERATOR\\\\\\\": \\\\\\\"grpc\\\\\\\"\\\\n                  }\\\\n                }\\\\n              }\' \\\\u003e /var/lib/grpc/data/bootstrap.json\\\\n      containers:\\\\n      {{- range $index, $container := .Spec.Containers }}\\\\n      - name: {{ $container.Name }}\\\\n        env:\\\\n          - name: GRPC_XDS_BOOTSTRAP\\\\n            value: /var/lib/grpc/data/bootstrap.json\\\\n          - name: GRPC_GO_LOG_VERBOSITY_LEVEL\\\\n            value: \\\\\\\"99\\\\\\\"\\\\n          - name: GRPC_GO_LOG_SEVERITY_LEVEL\\\\n            value: info\\\\n        volumeMounts:\\\\n          - mountPath: /var/lib/grpc/data/\\\\n            name: grpc-io-proxyless-bootstrap\\\\n      {{- end }}\\\\n      volumes:\\\\n        - name: grpc-io-proxyless-bootstrap\\\\n          emptyDir: {}\\\\n  grpc-agent: |\\\\n    {{- $containers := list }}\\\\n    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name \\\\\\\"istio-proxy\\\\\\\") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}\\\\n    metadata:\\\\n      labels:\\\\n        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}\\\\n        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default \\\\\\\"latest\\\\\\\"  | quote }}\\\\n      annotations: {\\\\n        {{- if eq (len $containers) 1 }}\\\\n        kubectl.kubernetes.io/default-logs-container: \\\\\\\"{{ index $containers 0 }}\\\\\\\",\\\\n        kubectl.kubernetes.io/default-container: \\\\\\\"{{ index $containers 0 }}\\\\\\\",\\\\n        {{ end }}\\\\n        sidecar.istio.io/rewriteAppHTTPProbers: \\\\\\\"false\\\\\\\",\\\\n      }\\\\n    spec:\\\\n      containers:\\\\n      {{- range $index, $container := .Spec.Containers  }}\\\\n      {{ if not (eq $container.Name \\\\\\\"istio-proxy\\\\\\\") }}\\\\n      - name: {{ $container.Name }}\\\\n        env:\\\\n        - name: \\\\\\\"GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT\\\\\\\"\\\\n          value: \\\\\\\"true\\\\\\\"\\\\n        - name: \\\\\\\"GRPC_XDS_BOOTSTRAP\\\\\\\"\\\\n          value: \\\\\\\"/etc/istio/proxy/grpc-bootstrap.json\\\\\\\"\\\\n        volumeMounts:\\\\n        - mountPath: /var/lib/istio/data\\\\n          name: istio-data\\\\n        # UDS channel between istioagent and gRPC client for XDS/SDS\\\\n        - mountPath: /etc/istio/proxy\\\\n          name: istio-xds\\\\n      {{- end }}\\\\n      {{- end }}\\\\n      - name: istio-proxy\\\\n      {{- if contains \\\\\\\"/\\\\\\\" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}\\\\n        image: \\\\\\\"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}\\\\\\\"\\\\n      {{- else }}\\\\n        image: \\\\\\\"{{ .ProxyImage }}\\\\\\\"\\\\n      {{- end }}\\\\n        args:\\\\n        - proxy\\\\n        - sidecar\\\\n        - --domain\\\\n        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}\\\\n        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}\\\\n      {{- if .Values.global.sts.servicePort }}\\\\n        - --stsPort={{ .Values.global.sts.servicePort }}\\\\n      {{- end }}\\\\n      {{- if .Values.global.logAsJson }}\\\\n        - --log_as_json\\\\n      {{- end }}\\\\n        env:\\\\n        - name: ISTIO_META_GENERATOR\\\\n          value: grpc\\\\n        - name: OUTPUT_CERTS\\\\n          value: /var/lib/istio/data\\\\n        {{- if eq (env \\\\\\\"PILOT_ENABLE_INBOUND_PASSTHROUGH\\\\\\\" \\\\\\\"true\\\\\\\") \\\\\\\"false\\\\\\\" }}\\\\n        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION\\\\n          value: \\\\\\\"true\\\\\\\"\\\\n        {{- end }}\\\\n        - name: JWT_POLICY\\\\n          value: {{ .Values.global.jwtPolicy }}\\\\n        - name: PILOT_CERT_PROVIDER\\\\n          value: {{ .Values.global.pilotCertProvider }}\\\\n        - name: CA_ADDR\\\\n        {{- if .Values.global.caAddress }}\\\\n          value: {{ .Values.global.caAddress }}\\\\n        {{- else }}\\\\n          value: istiod{{- if not (eq .Values.revision \\\\\\\"\\\\\\\") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012\\\\n        {{- end }}\\\\n        - name: POD_NAME\\\\n          valueFrom:\\\\n            fieldRef:\\\\n              fieldPath: metadata.name\\\\n        - name: POD_NAMESPACE\\\\n          valueFrom:\\\\n            fieldRef:\\\\n              fieldPath: metadata.namespace\\\\n        - name: INSTANCE_IP\\\\n          valueFrom:\\\\n            fieldRef:\\\\n              fieldPath: status.podIP\\\\n        - name: SERVICE_ACCOUNT\\\\n          valueFrom:\\\\n            fieldRef:\\\\n              fieldPath: spec.serviceAccountName\\\\n        - name: HOST_IP\\\\n          valueFrom:\\\\n            fieldRef:\\\\n              fieldPath: status.hostIP\\\\n        - name: PROXY_CONFIG\\\\n          value: |\\\\n                 {{ protoToJSON .ProxyConfig }}\\\\n        - name: ISTIO_META_POD_PORTS\\\\n          value: |-\\\\n            [\\\\n            {{- $first := true }}\\\\n            {{- range $index1, $c := .Spec.Containers }}\\\\n              {{- range $index2, $p := $c.Ports }}\\\\n                {{- if (structToJSON $p) }}\\\\n                {{if not $first}},{{end}}{{ structToJSON $p }}\\\\n                {{- $first = false }}\\\\n                {{- end }}\\\\n              {{- end}}\\\\n            {{- end}}\\\\n            ]\\\\n        - name: ISTIO_META_APP_CONTAINERS\\\\n          value: \\\\\\\"{{ $containers | join \\\\\\\",\\\\\\\" }}\\\\\\\"\\\\n        - name: ISTIO_META_CLUSTER_ID\\\\n          value: \\\\\\\"{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}\\\\\\\"\\\\n        - name: ISTIO_META_INTERCEPTION_MODE\\\\n          value: \\\\\\\"{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}\\\\\\\"\\\\n        {{- if .Values.global.network }}\\\\n        - name: ISTIO_META_NETWORK\\\\n          value: \\\\\\\"{{ .Values.global.network }}\\\\\\\"\\\\n        {{- end }}\\\\n        {{- if .DeploymentMeta.Name }}\\\\n        - name: ISTIO_META_WORKLOAD_NAME\\\\n          value: \\\\\\\"{{ .DeploymentMeta.Name }}\\\\\\\"\\\\n        {{ end }}\\\\n        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}\\\\n        - name: ISTIO_META_OWNER\\\\n          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}\\\\n        {{- end}}\\\\n        {{- if .Values.global.meshID }}\\\\n        - name: ISTIO_META_MESH_ID\\\\n          value: \\\\\\\"{{ .Values.global.meshID }}\\\\\\\"\\\\n        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}\\\\n        - name: ISTIO_META_MESH_ID\\\\n          value: \\\\\\\"{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}\\\\\\\"\\\\n        {{- end }}\\\\n        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}\\\\n        - name: TRUST_DOMAIN\\\\n          value: \\\\\\\"{{ . }}\\\\\\\"\\\\n        {{- end }}\\\\n        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}\\\\n        - name: {{ $key }}\\\\n          value: \\\\\\\"{{ $value }}\\\\\\\"\\\\n        {{- end }}\\\\n        # grpc uses xds:/// to resolve – no need to resolve VIP\\\\n        - name: ISTIO_META_DNS_CAPTURE\\\\n          value: \\\\\\\"false\\\\\\\"\\\\n        - name: DISABLE_ENVOY\\\\n          value: \\\\\\\"true\\\\\\\"\\\\n        {{with .Values.global.imagePullPolicy }}imagePullPolicy: \\\\\\\"{{.}}\\\\\\\"{{end}}\\\\n        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}\\\\n        readinessProbe:\\\\n          httpGet:\\\\n            path: /healthz/ready\\\\n            port: {{ .Values.global.proxy.statusPort }}\\\\n          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}\\\\n          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}\\\\n          timeoutSeconds: 3\\\\n          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}\\\\n        {{ end -}}\\\\n        resources:\\\\n      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}\\\\n        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}\\\\n          requests:\\\\n            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}\\\\n            cpu: \\\\\\\"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}\\\\\\\"\\\\n            {{ end }}\\\\n            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}\\\\n            memory: \\\\\\\"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}\\\\\\\"\\\\n            {{ end }}\\\\n        {{- end }}\\\\n        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}\\\\n          limits:\\\\n            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}\\\\n            cpu: \\\\\\\"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}\\\\\\\"\\\\n            {{ end }}\\\\n            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}\\\\n            memory: \\\\\\\"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}\\\\\\\"\\\\n            {{ end }}\\\\n        {{- end }}\\\\n      {{- else }}\\\\n        {{- if .Values.global.proxy.resources }}\\\\n          {{ toYaml .Values.global.proxy.resources | indent 6 }}\\\\n        {{- end }}\\\\n      {{- end }}\\\\n        volumeMounts:\\\\n        {{- if eq .Values.global.pilotCertProvider \\\\\\\"istiod\\\\\\\" }}\\\\n        - mountPath: /var/run/secrets/istio\\\\n          name: istiod-ca-cert\\\\n        {{- end }}\\\\n        - mountPath: /var/lib/istio/data\\\\n          name: istio-data\\\\n        # UDS channel between istioagent and gRPC client for XDS/SDS\\\\n        - mountPath: /etc/istio/proxy\\\\n          name: istio-xds\\\\n        {{- if eq .Values.global.jwtPolicy \\\\\\\"third-party-jwt\\\\\\\" }}\\\\n        - mountPath: /var/run/secrets/tokens\\\\n          name: istio-token\\\\n        {{- end }}\\\\n        - name: istio-podinfo\\\\n          mountPath: /etc/istio/pod\\\\n        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}\\\\n        {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}\\\\n        - name: \\\\\\\"{{  $index }}\\\\\\\"\\\\n        {{ toYaml $value | indent 6 }}\\\\n        {{ end }}\\\\n        {{- end }}\\\\n      volumes:\\\\n      # UDS channel between istioagent and gRPC client for XDS/SDS\\\\n      - emptyDir:\\\\n          medium: Memory\\\\n        name: istio-xds\\\\n      - name: istio-data\\\\n        emptyDir: {}\\\\n      - name: istio-podinfo\\\\n        downwardAPI:\\\\n          items:\\\\n            - path: \\\\\\\"labels\\\\\\\"\\\\n              fieldRef:\\\\n                fieldPath: metadata.labels\\\\n            - path: \\\\\\\"annotations\\\\\\\"\\\\n              fieldRef:\\\\n                fieldPath: metadata.annotations\\\\n    {{- if eq .Values.global.jwtPolicy \\\\\\\"third-party-jwt\\\\\\\" }}\\\\n      - name: istio-token\\\\n        projected:\\\\n          sources:\\\\n          - serviceAccountToken:\\\\n              path: istio-token\\\\n              expirationSeconds: 43200\\\\n              audience: {{ .Values.global.sds.token.aud }}\\\\n    {{- end }}\\\\n      {{- if eq .Values.global.pilotCertProvider \\\\\\\"istiod\\\\\\\" }}\\\\n      - name: istiod-ca-cert\\\\n        configMap:\\\\n          name: istio-ca-root-cert\\\\n      {{- end }}\\\\n      {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}\\\\n      {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}\\\\n      - name: \\\\\\\"{{ $index }}\\\\\\\"\\\\n      {{ toYaml $value | indent 4 }}\\\\n      {{ end }}\\\\n      {{ end }}\\\",\\\"values\\\":\\\"{\\\\n  \\\\\\\"global\\\\\\\": {\\\\n    \\\\\\\"caAddress\\\\\\\": \\\\\\\"\\\\\\\",\\\\n    \\\\\\\"caName\\\\\\\": \\\\\\\"\\\\\\\",\\\\n    \\\\\\\"configCluster\\\\\\\": false,\\\\n    \\\\\\\"configValidation\\\\\\\": true,\\\\n    \\\\\\\"defaultNodeSelector\\\\\\\": {},\\\\n    \\\\\\\"defaultPodDisruptionBudget\\\\\\\": {\\\\n      \\\\\\\"enabled\\\\\\\": true\\\\n    },\\\\n    \\\\\\\"defaultResources\\\\\\\": {\\\\n      \\\\\\\"requests\\\\\\\": {\\\\n        \\\\\\\"cpu\\\\\\\": \\\\\\\"10m\\\\\\\"\\\\n      }\\\\n    },\\\\n    \\\\\\\"enabled\\\\\\\": true,\\\\n    \\\\\\\"externalIstiod\\\\\\\": false,\\\\n    \\\\\\\"hub\\\\\\\": \\\\\\\"docker.io/istio\\\\\\\",\\\\n    \\\\\\\"imagePullPolicy\\\\\\\": \\\\\\\"\\\\\\\",\\\\n    \\\\\\\"imagePullSecrets\\\\\\\": [],\\\\n    \\\\\\\"istioNamespace\\\\\\\": \\\\\\\"istio-system\\\\\\\",\\\\n    \\\\\\\"istiod\\\\\\\": {\\\\n      \\\\\\\"enableAnalysis\\\\\\\": false\\\\n    },\\\\n    \\\\\\\"jwtPolicy\\\\\\\": \\\\\\\"third-party-jwt\\\\\\\",\\\\n    \\\\\\\"logAsJson\\\\\\\": false,\\\\n    \\\\\\\"logging\\\\\\\": {\\\\n      \\\\\\\"level\\\\\\\": \\\\\\\"default:info\\\\\\\"\\\\n    },\\\\n    \\\\\\\"meshID\\\\\\\": \\\\\\\"\\\\\\\",\\\\n    \\\\\\\"meshNetworks\\\\\\\": {},\\\\n    \\\\\\\"mountMtlsCerts\\\\\\\": false,\\\\n    \\\\\\\"multiCluster\\\\\\\": {\\\\n      \\\\\\\"clusterName\\\\\\\": \\\\\\\"\\\\\\\",\\\\n      \\\\\\\"enabled\\\\\\\": false\\\\n    },\\\\n    \\\\\\\"namespace\\\\\\\": \\\\\\\"istio-system\\\\\\\",\\\\n    \\\\\\\"network\\\\\\\": \\\\\\\"\\\\\\\",\\\\n    \\\\\\\"omitSidecarInjectorConfigMap\\\\\\\": false,\\\\n    \\\\\\\"oneNamespace\\\\\\\": false,\\\\n    \\\\\\\"operatorManageWebhooks\\\\\\\": false,\\\\n    \\\\\\\"pilotCertProvider\\\\\\\": \\\\\\\"istiod\\\\\\\",\\\\n    \\\\\\\"priorityClassName\\\\\\\": \\\\\\\"\\\\\\\",\\\\n    \\\\\\\"proxy\\\\\\\": {\\\\n      \\\\\\\"autoInject\\\\\\\": \\\\\\\"enabled\\\\\\\",\\\\n      \\\\\\\"clusterDomain\\\\\\\": \\\\\\\"cluster.local\\\\\\\",\\\\n      \\\\\\\"componentLogLevel\\\\\\\": \\\\\\\"misc:error\\\\\\\",\\\\n      \\\\\\\"enableCoreDump\\\\\\\": false,\\\\n      \\\\\\\"excludeIPRanges\\\\\\\": \\\\\\\"\\\\\\\",\\\\n      \\\\\\\"excludeInboundPorts\\\\\\\": \\\\\\\"\\\\\\\",\\\\n      \\\\\\\"excludeOutboundPorts\\\\\\\": \\\\\\\"\\\\\\\",\\\\n      \\\\\\\"holdApplicationUntilProxyStarts\\\\\\\": false,\\\\n      \\\\\\\"image\\\\\\\": \\\\\\\"proxyv2\\\\\\\",\\\\n      \\\\\\\"includeIPRanges\\\\\\\": \\\\\\\"*\\\\\\\",\\\\n      \\\\\\\"includeInboundPorts\\\\\\\": \\\\\\\"*\\\\\\\",\\\\n      \\\\\\\"includeOutboundPorts\\\\\\\": \\\\\\\"\\\\\\\",\\\\n      \\\\\\\"logLevel\\\\\\\": \\\\\\\"warning\\\\\\\",\\\\n      \\\\\\\"privileged\\\\\\\": false,\\\\n      \\\\\\\"readinessFailureThreshold\\\\\\\": 30,\\\\n      \\\\\\\"readinessInitialDelaySeconds\\\\\\\": 1,\\\\n      \\\\\\\"readinessPeriodSeconds\\\\\\\": 2,\\\\n      \\\\\\\"resources\\\\\\\": {\\\\n        \\\\\\\"limits\\\\\\\": {\\\\n          \\\\\\\"cpu\\\\\\\": \\\\\\\"2000m\\\\\\\",\\\\n          \\\\\\\"memory\\\\\\\": \\\\\\\"1024Mi\\\\\\\"\\\\n        },\\\\n        \\\\\\\"requests\\\\\\\": {\\\\n          \\\\\\\"cpu\\\\\\\": \\\\\\\"100m\\\\\\\",\\\\n          \\\\\\\"memory\\\\\\\": \\\\\\\"128Mi\\\\\\\"\\\\n        }\\\\n      },\\\\n      \\\\\\\"statusPort\\\\\\\": 15020,\\\\n      \\\\\\\"tracer\\\\\\\": \\\\\\\"zipkin\\\\\\\"\\\\n    },\\\\n    \\\\\\\"proxy_init\\\\\\\": {\\\\n      \\\\\\\"image\\\\\\\": \\\\\\\"proxyv2\\\\\\\",\\\\n      \\\\\\\"resources\\\\\\\": {\\\\n        \\\\\\\"limits\\\\\\\": {\\\\n          \\\\\\\"cpu\\\\\\\": \\\\\\\"2000m\\\\\\\",\\\\n          \\\\\\\"memory\\\\\\\": \\\\\\\"1024Mi\\\\\\\"\\\\n        },\\\\n        \\\\\\\"requests\\\\\\\": {\\\\n          \\\\\\\"cpu\\\\\\\": \\\\\\\"10m\\\\\\\",\\\\n          \\\\\\\"memory\\\\\\\": \\\\\\\"10Mi\\\\\\\"\\\\n        }\\\\n      }\\\\n    },\\\\n    \\\\\\\"remotePilotAddress\\\\\\\": \\\\\\\"\\\\\\\",\\\\n    \\\\\\\"sds\\\\\\\": {\\\\n      \\\\\\\"token\\\\\\\": {\\\\n        \\\\\\\"aud\\\\\\\": \\\\\\\"istio-ca\\\\\\\"\\\\n      }\\\\n    },\\\\n    \\\\\\\"sts\\\\\\\": {\\\\n      \\\\\\\"servicePort\\\\\\\": 0\\\\n    },\\\\n    \\\\\\\"tag\\\\\\\": \\\\\\\"1.13.2\\\\\\\",\\\\n    \\\\\\\"tracer\\\\\\\": {\\\\n      \\\\\\\"datadog\\\\\\\": {\\\\n        \\\\\\\"address\\\\\\\": \\\\\\\"$(HOST_IP):8126\\\\\\\"\\\\n      },\\\\n      \\\\\\\"lightstep\\\\\\\": {\\\\n        \\\\\\\"accessToken\\\\\\\": \\\\\\\"\\\\\\\",\\\\n        \\\\\\\"address\\\\\\\": \\\\\\\"\\\\\\\"\\\\n      },\\\\n      \\\\\\\"stackdriver\\\\\\\": {\\\\n        \\\\\\\"debug\\\\\\\": false,\\\\n        \\\\\\\"maxNumberOfAnnotations\\\\\\\": 200,\\\\n        \\\\\\\"maxNumberOfAttributes\\\\\\\": 200,\\\\n        \\\\\\\"maxNumberOfMessageEvents\\\\\\\": 200\\\\n      },\\\\n      \\\\\\\"zipkin\\\\\\\": {\\\\n        \\\\\\\"address\\\\\\\": \\\\\\\"\\\\\\\"\\\\n      }\\\\n    },\\\\n    \\\\\\\"useMCP\\\\\\\": false\\\\n  },\\\\n  \\\\\\\"istio_cni\\\\\\\": {\\\\n    \\\\\\\"enabled\\\\\\\": false\\\\n  },\\\\n  \\\\\\\"revision\\\\\\\": \\\\\\\"\\\\\\\",\\\\n  \\\\\\\"sidecarInjectorWebhook\\\\\\\": {\\\\n    \\\\\\\"alwaysInjectSelector\\\\\\\": [],\\\\n    \\\\\\\"defaultTemplates\\\\\\\": [],\\\\n    \\\\\\\"enableNamespacesByDefault\\\\\\\": false,\\\\n    \\\\\\\"injectedAnnotations\\\\\\\": {},\\\\n    \\\\\\\"neverInjectSelector\\\\\\\": [],\\\\n    \\\\\\\"objectSelector\\\\\\\": {\\\\n      \\\\\\\"autoInject\\\\\\\": true,\\\\n      \\\\\\\"enabled\\\\\\\": true\\\\n    },\\\\n    \\\\\\\"rewriteAppHTTPProbe\\\\\\\": true,\\\\n    \\\\\\\"templates\\\\\\\": {}\\\\n  }\\\\n}\\\"},\\\"kind\\\":\\\"ConfigMap\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"install.operator.istio.io/owning-resource\\\":\\\"ingress\\\",\\\"install.operator.istio.io/owning-resource-namespace\\\":\\\"istio-system\\\",\\\"istio.io/rev\\\":\\\"default\\\",\\\"operator.istio.io/component\\\":\\\"Pilot\\\",\\\"operator.istio.io/managed\\\":\\\"Reconcile\\\",\\\"operator.istio.io/version\\\":\\\"1.13.2\\\",\\\"release\\\":\\\"istio\\\"},\\\"name\\\":\\\"istio-sidecar-injector\\\",\\\"namespace\\\":\\\"istio-system\\\"}}\\n\"}, \"managedFields\": [{\"time\": \"2022-05-19T05:11:42Z\", \"manager\": \"istio-operator\", \"fieldsV1\": {\"f:data\": {\"f:config\": {}, \"f:values\": {}}, \"f:metadata\": {\"f:labels\": {\"f:release\": {}, \"f:istio.io/rev\": {}, \"f:operator.istio.io/managed\": {}, \"f:operator.istio.io/version\": {}, \"f:operator.istio.io/component\": {}, \"f:install.operator.istio.io/owning-resource\": {}, \"f:install.operator.istio.io/owning-resource-namespace\": {}}, \"f:annotations\": {\"f:kubectl.kubernetes.io/last-applied-configuration\": {}}}}, \"operation\": \"Apply\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"137981292\", \"creationTimestamp\": \"2022-05-19T05:11:42Z\"}, \"apiVersion\": \"v1\"}', '2022-05-19 13:11:42', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (820, 'kube-node-lease', 'istio-ca-root-cert', '', 'v1', 'configmaps', 'ConfigMap', '31165775', '', '8cec8df4-fc8a-4672-99f6-bbda021b3052', 'a68eefc6923c3e90bc56', '{\"data\": {\"root-cert.pem\": \"-----BEGIN CERTIFICATE-----\\nMIIC/DCCAeSgAwIBAgIQIm0uJrxR03UgVKC4hRH+QTANBgkqhkiG9w0BAQsFADAY\\nMRYwFAYDVQQKEw1jbHVzdGVyLmxvY2FsMB4XDTIxMDkxODA5MTUwOVoXDTMxMDkx\\nNjA5MTUwOVowGDEWMBQGA1UEChMNY2x1c3Rlci5sb2NhbDCCASIwDQYJKoZIhvcN\\nAQEBBQADggEPADCCAQoCggEBAMxhNFjEB+bW82xWVKfQUpvZVpQVskQs4bdbPuqM\\ns+4xpe42cfFvnJ4aNdLeespk7l0iNIo4p+WJ0pkkoi1/N+TztbmDOHsRW6h22YsB\\n/kWMf7LpLFBTWIqTe30DAG+DFbvn+yb7eLEdtUpbg3m7sYAZmX5BTxKiO5wl0i0D\\nDBRvqivJrhyDLikh4+xJ+dkxO3WlKJiik8SnzoGLaX2XiLeeRFTde4ynM9xZkA5i\\nwAgy8JTyiZ0rAIgj1DZ9n434IlWHykA7JG4tF2yeEeoJQfIjEK29ToVlLpFp+Cx5\\n/2Xe8CuCVRQJeH3hrDaf43o5HFJ2BIIpAsAUf8Ayd3K/PBUCAwEAAaNCMEAwDgYD\\nVR0PAQH/BAQDAgIEMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFFC+UlUIc2gM\\n1pG6lD1JZVEcrdAMMA0GCSqGSIb3DQEBCwUAA4IBAQCFkiXChryTn/VYRxhKull2\\nq1wdl5xEYqvOt+68krE8kSHh8XrA1mvhhp6rOtPbcNQ4kJulhzAs+IkFN/aygT7r\\nP+Q/JTKuSNNJVFmW1sSCAwcNyCxhNaNJBZL3MCjL7asqsmKxiVNMxYrgvvUgX2x6\\nsbNdjdQkRA9GJSuYTaAlX/vIdHK9XJxv2T/KbD0aB7bszujDP66LJZaq/DkDMePP\\nr1qTBFoEw0edtwFI8ESaQMpFlpQJcCIMdJ12z6EVcnBufEqDwLV1pU4zzB4/3Hzb\\ngAAAx46M4q/b8QareLuufAoOVyABeMjZdWVMGIFIqNSPLYp91iLhPLef3ZgEOPnr\\n-----END CERTIFICATE-----\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"8cec8df4-fc8a-4672-99f6-bbda021b3052\", \"name\": \"istio-ca-root-cert\", \"labels\": {\"istio.io/config\": \"true\"}, \"namespace\": \"kube-node-lease\", \"managedFields\": [{\"time\": \"2021-08-17T03:57:58Z\", \"manager\": \"pilot-discovery\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:root-cert.pem\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:istio.io/config\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"31165775\", \"creationTimestamp\": \"2021-08-17T03:57:58Z\"}, \"apiVersion\": \"v1\"}', '2021-08-17 11:57:58', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (821, 'kube-system', 'test-scheduling-config', '', 'v1', 'configmaps', 'ConfigMap', '119987173', '', '67b95ea8-dfc4-4bed-893f-5c2fb10bd065', 'db74493d3a76f3ffd355', '{\"data\": {\"config.yaml\": \"apiVersion: kubescheduler.config.k8s.io/v1beta2\\nkind: KubeSchedulerConfiguration\\nleaderElection:\\n  leaderElect: false\\nprofiles:\\n  - schedulerName: test-scheduling\\n    plugins:\\n      preFilter:\\n        enabled:\\n        - name: \\\"test-scheduling\\\"\\n      filter:\\n        enabled:\\n        - name: \\\"test-scheduling\\\"\\n      preScore:\\n        enabled:\\n        - name: \\\"test-scheduling\\\"\\n      score:\\n        enabled:\\n        - name: \\\"test-scheduling\\\"\\n      permit:\\n        enabled:\\n        - name: \\\"test-scheduling\\\"\\n    pluginConfig:\\n      - name: test-scheduling\\n        args:\\n          maxPods: 20\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"67b95ea8-dfc4-4bed-893f-5c2fb10bd065\", \"name\": \"test-scheduling-config\", \"namespace\": \"kube-system\", \"annotations\": {\"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"data\\\":{\\\"config.yaml\\\":\\\"apiVersion: kubescheduler.config.k8s.io/v1beta2\\\\nkind: KubeSchedulerConfiguration\\\\nleaderElection:\\\\n  leaderElect: false\\\\nprofiles:\\\\n  - schedulerName: test-scheduling\\\\n    plugins:\\\\n      preFilter:\\\\n        enabled:\\\\n        - name: \\\\\\\"test-scheduling\\\\\\\"\\\\n      filter:\\\\n        enabled:\\\\n        - name: \\\\\\\"test-scheduling\\\\\\\"\\\\n      preScore:\\\\n        enabled:\\\\n        - name: \\\\\\\"test-scheduling\\\\\\\"\\\\n      score:\\\\n        enabled:\\\\n        - name: \\\\\\\"test-scheduling\\\\\\\"\\\\n      permit:\\\\n        enabled:\\\\n        - name: \\\\\\\"test-scheduling\\\\\\\"\\\\n    pluginConfig:\\\\n      - name: test-scheduling\\\\n        args:\\\\n          maxPods: 20\\\\n\\\"},\\\"kind\\\":\\\"ConfigMap\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"test-scheduling-config\\\",\\\"namespace\\\":\\\"kube-system\\\"}}\\n\"}, \"managedFields\": [{\"time\": \"2022-02-21T16:51:33Z\", \"manager\": \"kubectl-client-side-apply\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:config.yaml\": {}}, \"f:metadata\": {\"f:annotations\": {\".\": {}, \"f:kubectl.kubernetes.io/last-applied-configuration\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"119987173\", \"creationTimestamp\": \"2022-02-21T16:51:33Z\"}, \"apiVersion\": \"v1\"}', '2022-02-22 00:51:33', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (822, 'myhost', 'kube-root-ca.crt', '', 'v1', 'configmaps', 'ConfigMap', '155894459', '', '5fc77b49-1ac6-4323-8284-29623399bb60', '6d670d0fcee4a067ec26', '{\"data\": {\"ca.crt\": \"-----BEGIN CERTIFICATE-----\\nMIIC/jCCAeagAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\\ncm5ldGVzMB4XDTIxMDgxNjE4MjQ0MVoXDTMxMDgxNDE4MjQ0MVowFTETMBEGA1UE\\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKAQ\\n/td7qUH75HBRNBsJksTZWRSr0ZsBghzsO4FTKz90biavL/XVneiN0YNa7PCqusCR\\nYS6W6vUFepyjWtlYdKdHc6ZRPuAPokxGFOurLXHqdDg/vSgmR1J2bDe25AQ1O/8M\\n/MlBVRLIfsnjMOrPdegYhmQhlqN/qkcy0EYlTWMPxPiBmTiocalPG4OAtDqXmCJj\\ny6/hJhQ7ta1pnaiLWe+b8v99udJ7RGrRAQv5KWRwMY6nwNviV8OAAiEL9nkFIDs5\\n7r5OtHhC6fv4DByj3zZzsdN9JOogrZbnP/6/UtovgYvt8Sv+0Z4q1T5tpV+0EXZi\\n4LFkYy0bXWvWOfppHXUCAwEAAaNZMFcwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB\\n/wQFMAMBAf8wHQYDVR0OBBYEFIHMJBmfKRukQct2JCPpvxdGOP1mMBUGA1UdEQQO\\nMAyCCmt1YmVybmV0ZXMwDQYJKoZIhvcNAQELBQADggEBAFuzNT+/vgIZ2s37cjXB\\nLA2NsR73Yvp4Cg2VcuaDqSD+ZIgp0bSrnHXTcoZIW5KaEJf92FF4kZG1riQaeJFo\\nkzOCH6Xp7qbYp1XsKW+IbbYia1Ps/cY3tG3od6j56tvyokrURI+rBC9QngmhIJPM\\nUGlboIV+xnE2662wMWNu/FsbsW33lTK29gdicAiDPleBCPdtgUDlQyJTSKZuFi8h\\nV6aWCLuFxIkW6l0mLpQIhbc5Jx6uTZ0AFoMd0dPJohttCwZ97Kjew7X1Saimbnox\\naH9EPUfLNWonQ+tBkp5/0krm0LrAhNT5aA5M7tcYKSg5ytTukMdAaJwQWHCH5M1t\\nI9s=\\n-----END CERTIFICATE-----\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"5fc77b49-1ac6-4323-8284-29623399bb60\", \"name\": \"kube-root-ca.crt\", \"namespace\": \"myhost\", \"annotations\": {\"kubernetes.io/description\": \"Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters.\"}, \"managedFields\": [{\"time\": \"2022-08-21T14:56:12Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:ca.crt\": {}}, \"f:metadata\": {\"f:annotations\": {\".\": {}, \"f:kubernetes.io/description\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"155894459\", \"creationTimestamp\": \"2022-08-21T14:56:12Z\"}, \"apiVersion\": \"v1\"}', '2022-08-21 22:56:12', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (823, 'myhost', 'myvc1-coredns', '', 'v1', 'configmaps', 'ConfigMap', '157302296', '', 'ef283842-3189-4ee3-8b23-504cfed8011a', 'c11186fe780cda69f602', '{\"data\": {\"coredns.yaml\": \"apiVersion: v1\\nkind: ServiceAccount\\nmetadata:\\n  name: coredns\\n  namespace: kube-system\\n---\\napiVersion: rbac.authorization.k8s.io/v1\\nkind: ClusterRole\\nmetadata:\\n  labels:\\n    kubernetes.io/bootstrapping: rbac-defaults\\n  name: system:coredns\\nrules:\\n  - apiGroups:\\n      - \\\"\\\"\\n    resources:\\n      - endpoints\\n      - services\\n      - pods\\n      - namespaces\\n    verbs:\\n      - list\\n      - watch\\n  - apiGroups:\\n      - discovery.k8s.io\\n    resources:\\n      - endpointslices\\n    verbs:\\n      - list\\n      - watch\\n---\\napiVersion: rbac.authorization.k8s.io/v1\\nkind: ClusterRoleBinding\\nmetadata:\\n  annotations:\\n    rbac.authorization.kubernetes.io/autoupdate: \\\"true\\\"\\n  labels:\\n    kubernetes.io/bootstrapping: rbac-defaults\\n  name: system:coredns\\nroleRef:\\n  apiGroup: rbac.authorization.k8s.io\\n  kind: ClusterRole\\n  name: system:coredns\\nsubjects:\\n  - kind: ServiceAccount\\n    name: coredns\\n    namespace: kube-system\\n---\\napiVersion: v1\\nkind: ConfigMap\\nmetadata:\\n  name: coredns\\n  namespace: kube-system\\ndata:\\n  Corefile: |\\n    .:1053 {\\n        {{.LOG_IN_DEBUG}}\\n        errors\\n        health\\n        ready\\n        kubernetes cluster.local in-addr.arpa ip6.arpa {\\n          pods insecure\\n          fallthrough in-addr.arpa ip6.arpa\\n        }\\n        hosts /etc/coredns/NodeHosts {\\n          ttl 60\\n          reload 15s\\n          fallthrough\\n        }\\n        prometheus :9153\\n        forward . /etc/resolv.conf\\n        cache 30\\n        loop\\n        reload\\n        loadbalance\\n    }\\n\\n    import /etc/coredns/custom/*.server\\n  NodeHosts: \\\"\\\"\\n---\\napiVersion: apps/v1\\nkind: Deployment\\nmetadata:\\n  name: coredns\\n  namespace: kube-system\\n  labels:\\n    k8s-app: kube-dns\\n    kubernetes.io/name: \\\"CoreDNS\\\"\\nspec:\\n  replicas: 1\\n  strategy:\\n    type: RollingUpdate\\n    rollingUpdate:\\n      maxUnavailable: 1\\n  selector:\\n    matchLabels:\\n      k8s-app: kube-dns\\n  template:\\n    metadata:\\n      labels:\\n        k8s-app: kube-dns\\n    spec:\\n      priorityClassName: \\\"system-cluster-critical\\\"\\n      serviceAccountName: coredns\\n      nodeSelector:\\n        kubernetes.io/os: linux\\n      topologySpreadConstraints:\\n        - maxSkew: 1\\n          topologyKey: kubernetes.io/hostname\\n          whenUnsatisfiable: DoNotSchedule\\n          labelSelector:\\n            matchLabels:\\n              k8s-app: kube-dns\\n      containers:\\n        - name: coredns\\n          image: {{.IMAGE}}\\n          imagePullPolicy: IfNotPresent\\n          resources:\\n            limits:\\n              cpu: 1000m\\n              memory: 170Mi\\n            requests:\\n              cpu: 3m\\n              memory: 16Mi\\n          args: [ \\\"-conf\\\", \\\"/etc/coredns/Corefile\\\" ]\\n          volumeMounts:\\n            - name: config-volume\\n              mountPath: /etc/coredns\\n              readOnly: true\\n            - name: custom-config-volume\\n              mountPath: /etc/coredns/custom\\n              readOnly: true\\n          ports:\\n            - containerPort: 1053\\n              name: dns\\n              protocol: UDP\\n            - containerPort: 1053\\n              name: dns-tcp\\n              protocol: TCP\\n            - containerPort: 9153\\n              name: metrics\\n              protocol: TCP\\n          securityContext:\\n            runAsUser: {{.RUN_AS_USER}}\\n            runAsNonRoot: {{.RUN_AS_NON_ROOT}}\\n            allowPrivilegeEscalation: false\\n            capabilities:\\n              drop:\\n                - ALL\\n            readOnlyRootFilesystem: true\\n          livenessProbe:\\n            httpGet:\\n              path: /health\\n              port: 8080\\n              scheme: HTTP\\n            initialDelaySeconds: 60\\n            periodSeconds: 10\\n            timeoutSeconds: 1\\n            successThreshold: 1\\n            failureThreshold: 3\\n          readinessProbe:\\n            httpGet:\\n              path: /ready\\n              port: 8181\\n              scheme: HTTP\\n            initialDelaySeconds: 0\\n            periodSeconds: 2\\n            timeoutSeconds: 1\\n            successThreshold: 1\\n            failureThreshold: 3\\n      dnsPolicy: Default\\n      volumes:\\n        - name: config-volume\\n          configMap:\\n            name: coredns\\n            items:\\n              - key: Corefile\\n                path: Corefile\\n              - key: NodeHosts\\n                path: NodeHosts\\n        - name: custom-config-volume\\n          configMap:\\n            name: coredns-custom\\n            optional: true\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: kube-dns\\n  namespace: kube-system\\n  annotations:\\n    prometheus.io/port: \\\"9153\\\"\\n    prometheus.io/scrape: \\\"true\\\"\\n  labels:\\n    k8s-app: kube-dns\\n    kubernetes.io/cluster-service: \\\"true\\\"\\n    kubernetes.io/name: \\\"CoreDNS\\\"\\nspec:\\n  selector:\\n    k8s-app: kube-dns\\n  type: ClusterIP\\n  ports:\\n    - name: dns\\n      port: 53\\n      targetPort: 1053\\n      protocol: UDP\\n    - name: dns-tcp\\n      port: 53\\n      targetPort: 1053\\n      protocol: TCP\\n    - name: metrics\\n      port: 9153\\n      protocol: TCP\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"ef283842-3189-4ee3-8b23-504cfed8011a\", \"name\": \"myvc1-coredns\", \"labels\": {\"app.kubernetes.io/managed-by\": \"Helm\"}, \"namespace\": \"myhost\", \"annotations\": {\"meta.helm.sh/release-name\": \"myvc1\", \"meta.helm.sh/release-namespace\": \"myhost\"}, \"managedFields\": [{\"time\": \"2022-08-29T17:51:20Z\", \"manager\": \"helm\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:coredns.yaml\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:app.kubernetes.io/managed-by\": {}}, \"f:annotations\": {\".\": {}, \"f:meta.helm.sh/release-name\": {}, \"f:meta.helm.sh/release-namespace\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"157302296\", \"creationTimestamp\": \"2022-08-29T17:51:20Z\"}, \"apiVersion\": \"v1\"}', '2022-08-30 01:51:20', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (824, 'argocd', 'argocd-tls-certs-cm', '', 'v1', 'configmaps', 'ConfigMap', '31177028', '', 'c69ff985-c9ce-41f0-b8e2-8e9bf108e681', '066723a6edcd4e58dfc3', '{\"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"c69ff985-c9ce-41f0-b8e2-8e9bf108e681\", \"name\": \"argocd-tls-certs-cm\", \"labels\": {\"app.kubernetes.io/name\": \"argocd-tls-certs-cm\", \"app.kubernetes.io/part-of\": \"argocd\"}, \"namespace\": \"argocd\", \"annotations\": {\"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"data\\\":null,\\\"kind\\\":\\\"ConfigMap\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app.kubernetes.io/name\\\":\\\"argocd-tls-certs-cm\\\",\\\"app.kubernetes.io/part-of\\\":\\\"argocd\\\"},\\\"name\\\":\\\"argocd-tls-certs-cm\\\",\\\"namespace\\\":\\\"argocd\\\"}}\\n\"}, \"managedFields\": [{\"time\": \"2021-10-15T10:23:22Z\", \"manager\": \"kubectl-client-side-apply\", \"fieldsV1\": {\"f:metadata\": {\"f:labels\": {\".\": {}, \"f:app.kubernetes.io/name\": {}, \"f:app.kubernetes.io/part-of\": {}}, \"f:annotations\": {\".\": {}, \"f:kubectl.kubernetes.io/last-applied-configuration\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"31177028\", \"creationTimestamp\": \"2021-10-15T10:23:22Z\"}, \"apiVersion\": \"v1\"}', '2021-10-15 18:23:22', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (825, 'kube-federation-system', 'kubefed-controller-manager', '', 'v1', 'configmaps', 'ConfigMap', '154838426', '', 'cbf3d8fd-0871-4d1e-a79b-28cabd8c849b', 'c7e06c189f43164c074a', '{\"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"cbf3d8fd-0871-4d1e-a79b-28cabd8c849b\", \"name\": \"kubefed-controller-manager\", \"namespace\": \"kube-federation-system\", \"annotations\": {\"control-plane.alpha.kubernetes.io/leader\": \"{\\\"holderIdentity\\\":\\\"kubefed-controller-manager-855569969f-bhkhs_d78820e5-432b-4053-aa02-2e3127b84925\\\",\\\"leaseDurationSeconds\\\":15,\\\"acquireTime\\\":\\\"2022-07-23T13:39:47Z\\\",\\\"renewTime\\\":\\\"2022-08-15T04:45:43Z\\\",\\\"leaderTransitions\\\":7}\"}, \"managedFields\": [{\"time\": \"2021-08-22T18:07:19Z\", \"manager\": \"controller-manager\", \"fieldsV1\": {\"f:metadata\": {\"f:annotations\": {\".\": {}, \"f:control-plane.alpha.kubernetes.io/leader\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"154838426\", \"creationTimestamp\": \"2021-08-22T18:07:19Z\"}, \"apiVersion\": \"v1\"}', '2021-08-23 02:07:19', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (826, 'myhost', 'kube-root-ca.crt-x-kube-system-x-myvc1', '', 'v1', 'configmaps', 'ConfigMap', '157302373', '9f4a0851-85b1-4623-bcbe-c4b4d7ac9d5e', '88c3e58f-847e-418f-8d6e-c3d830a13d9d', 'abaf6aed10a8a10dc2f7', '{\"data\": {\"ca.crt\": \"-----BEGIN CERTIFICATE-----\\nMIIBdzCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy\\ndmVyLWNhQDE2NjE3OTU0ODEwHhcNMjIwODI5MTc1MTIxWhcNMzIwODI2MTc1MTIx\\nWjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NjE3OTU0ODEwWTATBgcqhkjO\\nPQIBBggqhkjOPQMBBwNCAAQS2zasTHVX/lyRbJw9nmGURdO41UY8Orw7Qws1ps0N\\nvL3HwbwisBlPweVnLflUl3h/OSAJcAHkh4wpZ9vJGJqDo0IwQDAOBgNVHQ8BAf8E\\nBAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUNFy+vdAxdVFMsYwf+Sjg\\n0L5wjKswCgYIKoZIzj0EAwIDSAAwRQIhAN7DPyY5sYqjG7Pk3hYRzO7fVpzbPk/l\\neI3y0Xs0+a4IAiBL/qgQsQKpus+jhU4UfHrzHzYTkWwCGEq9LzX+xxlYKw==\\n-----END CERTIFICATE-----\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"88c3e58f-847e-418f-8d6e-c3d830a13d9d\", \"name\": \"kube-root-ca.crt-x-kube-system-x-myvc1\", \"labels\": {\"vcluster.loft.sh/namespace\": \"kube-system\", \"vcluster.loft.sh/managed-by\": \"myvc1\"}, \"namespace\": \"myhost\", \"annotations\": {\"kubernetes.io/description\": \"Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters.\", \"vcluster.loft.sh/object-name\": \"kube-root-ca.crt\", \"vcluster.loft.sh/object-namespace\": \"kube-system\", \"vcluster.loft.sh/managed-annotations\": \"kubernetes.io/description\"}, \"managedFields\": [{\"time\": \"2022-08-29T17:51:32Z\", \"manager\": \"vcluster\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:ca.crt\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:vcluster.loft.sh/namespace\": {}, \"f:vcluster.loft.sh/managed-by\": {}}, \"f:annotations\": {\".\": {}, \"f:kubernetes.io/description\": {}, \"f:vcluster.loft.sh/object-name\": {}, \"f:vcluster.loft.sh/object-namespace\": {}, \"f:vcluster.loft.sh/managed-annotations\": {}}, \"f:ownerReferences\": {\".\": {}, \"k:{\\\"uid\\\":\\\"9f4a0851-85b1-4623-bcbe-c4b4d7ac9d5e\\\"}\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"ownerReferences\": [{\"uid\": \"9f4a0851-85b1-4623-bcbe-c4b4d7ac9d5e\", \"kind\": \"Service\", \"name\": \"myvc1\", \"apiVersion\": \"v1\", \"controller\": false}], \"resourceVersion\": \"157302373\", \"creationTimestamp\": \"2022-08-29T17:51:32Z\"}, \"apiVersion\": \"v1\"}', '2022-08-30 01:51:32', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (827, 'default', 'mycm', '', 'v1', 'configmaps', 'ConfigMap', '161802076', '', 'fd4a502b-26a7-44ab-920a-5a4f19347e9f', 'a66c0e01acb8e03196e2', '{\"data\": {\"age\": \"19\", \"name\": \"abc\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"fd4a502b-26a7-44ab-920a-5a4f19347e9f\", \"name\": \"mycm\", \"namespace\": \"default\", \"annotations\": {\"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"data\\\":{\\\"age\\\":\\\"19\\\",\\\"name\\\":\\\"abc\\\"},\\\"kind\\\":\\\"ConfigMap\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"mycm\\\",\\\"namespace\\\":\\\"default\\\"}}\\n\"}, \"managedFields\": [{\"time\": \"2022-09-24T18:21:38Z\", \"manager\": \"Go-http-client\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:age\": {}, \"f:name\": {}}, \"f:metadata\": {\"f:annotations\": {\".\": {}, \"f:kubectl.kubernetes.io/last-applied-configuration\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"161802076\", \"creationTimestamp\": \"2022-09-24T18:21:38Z\"}, \"apiVersion\": \"v1\"}', '2022-09-25 02:21:38', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (828, 'istio-system', 'istio-gateway-deployment-leader', '', 'v1', 'configmaps', 'ConfigMap', '162259768', '', '333a2d78-2c7a-4931-ad21-b92674b5441b', 'd8eba0a371ada6221bbe', '{\"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"333a2d78-2c7a-4931-ad21-b92674b5441b\", \"name\": \"istio-gateway-deployment-leader\", \"namespace\": \"istio-system\", \"annotations\": {\"control-plane.alpha.kubernetes.io/leader\": \"{\\\"holderIdentity\\\":\\\"istiod-5b6d7d4cb5-lgv9m\\\",\\\"holderKey\\\":\\\"default\\\",\\\"leaseDurationSeconds\\\":30,\\\"acquireTime\\\":\\\"2022-05-19T05:17:11Z\\\",\\\"renewTime\\\":\\\"2022-09-27T09:54:17Z\\\",\\\"leaderTransitions\\\":2}\"}, \"managedFields\": [{\"time\": \"2022-02-10T09:52:52Z\", \"manager\": \"pilot-discovery\", \"fieldsV1\": {\"f:metadata\": {\"f:annotations\": {\".\": {}, \"f:control-plane.alpha.kubernetes.io/leader\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"162259768\", \"creationTimestamp\": \"2022-02-10T09:52:52Z\"}, \"apiVersion\": \"v1\"}', '2022-02-10 17:52:52', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (829, 'istio-system', 'istio-gateway-status-leader', '', 'v1', 'configmaps', 'ConfigMap', '162259765', '', '5f89bc0f-01f0-49c9-b368-23d9f4f84550', '7c8445706e714adc3ab5', '{\"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"5f89bc0f-01f0-49c9-b368-23d9f4f84550\", \"name\": \"istio-gateway-status-leader\", \"namespace\": \"istio-system\", \"annotations\": {\"control-plane.alpha.kubernetes.io/leader\": \"{\\\"holderIdentity\\\":\\\"istiod-5b6d7d4cb5-lgv9m\\\",\\\"holderKey\\\":\\\"default\\\",\\\"leaseDurationSeconds\\\":30,\\\"acquireTime\\\":\\\"2022-05-19T05:17:11Z\\\",\\\"renewTime\\\":\\\"2022-09-27T09:54:17Z\\\",\\\"leaderTransitions\\\":2}\"}, \"managedFields\": [{\"time\": \"2022-02-10T09:52:52Z\", \"manager\": \"pilot-discovery\", \"fieldsV1\": {\"f:metadata\": {\"f:annotations\": {\".\": {}, \"f:control-plane.alpha.kubernetes.io/leader\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"162259765\", \"creationTimestamp\": \"2022-02-10T09:52:52Z\"}, \"apiVersion\": \"v1\"}', '2022-02-10 17:52:52', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (830, 'myweb', 'istio-ca-root-cert', '', 'v1', 'configmaps', 'ConfigMap', '118301713', '', '95298dcb-f952-434b-b3e6-2e5979adf1fa', '5a64feaf5c3b02d4fb03', '{\"data\": {\"root-cert.pem\": \"-----BEGIN CERTIFICATE-----\\nMIIC/DCCAeSgAwIBAgIQIm0uJrxR03UgVKC4hRH+QTANBgkqhkiG9w0BAQsFADAY\\nMRYwFAYDVQQKEw1jbHVzdGVyLmxvY2FsMB4XDTIxMDkxODA5MTUwOVoXDTMxMDkx\\nNjA5MTUwOVowGDEWMBQGA1UEChMNY2x1c3Rlci5sb2NhbDCCASIwDQYJKoZIhvcN\\nAQEBBQADggEPADCCAQoCggEBAMxhNFjEB+bW82xWVKfQUpvZVpQVskQs4bdbPuqM\\ns+4xpe42cfFvnJ4aNdLeespk7l0iNIo4p+WJ0pkkoi1/N+TztbmDOHsRW6h22YsB\\n/kWMf7LpLFBTWIqTe30DAG+DFbvn+yb7eLEdtUpbg3m7sYAZmX5BTxKiO5wl0i0D\\nDBRvqivJrhyDLikh4+xJ+dkxO3WlKJiik8SnzoGLaX2XiLeeRFTde4ynM9xZkA5i\\nwAgy8JTyiZ0rAIgj1DZ9n434IlWHykA7JG4tF2yeEeoJQfIjEK29ToVlLpFp+Cx5\\n/2Xe8CuCVRQJeH3hrDaf43o5HFJ2BIIpAsAUf8Ayd3K/PBUCAwEAAaNCMEAwDgYD\\nVR0PAQH/BAQDAgIEMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFFC+UlUIc2gM\\n1pG6lD1JZVEcrdAMMA0GCSqGSIb3DQEBCwUAA4IBAQCFkiXChryTn/VYRxhKull2\\nq1wdl5xEYqvOt+68krE8kSHh8XrA1mvhhp6rOtPbcNQ4kJulhzAs+IkFN/aygT7r\\nP+Q/JTKuSNNJVFmW1sSCAwcNyCxhNaNJBZL3MCjL7asqsmKxiVNMxYrgvvUgX2x6\\nsbNdjdQkRA9GJSuYTaAlX/vIdHK9XJxv2T/KbD0aB7bszujDP66LJZaq/DkDMePP\\nr1qTBFoEw0edtwFI8ESaQMpFlpQJcCIMdJ12z6EVcnBufEqDwLV1pU4zzB4/3Hzb\\ngAAAx46M4q/b8QareLuufAoOVyABeMjZdWVMGIFIqNSPLYp91iLhPLef3ZgEOPnr\\n-----END CERTIFICATE-----\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"95298dcb-f952-434b-b3e6-2e5979adf1fa\", \"name\": \"istio-ca-root-cert\", \"labels\": {\"istio.io/config\": \"true\"}, \"namespace\": \"myweb\", \"managedFields\": [{\"time\": \"2022-02-13T15:20:49Z\", \"manager\": \"pilot-discovery\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:root-cert.pem\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:istio.io/config\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"118301713\", \"creationTimestamp\": \"2022-02-13T15:20:49Z\"}, \"apiVersion\": \"v1\"}', '2022-02-13 23:20:49', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (831, 'web2', 'istio-ca-root-cert', '', 'v1', 'configmaps', 'ConfigMap', '124910983', '', '84ef28f8-1ec2-4c82-afc4-8d3109734368', '65026b84ed0b7ccdbc19', '{\"data\": {\"root-cert.pem\": \"-----BEGIN CERTIFICATE-----\\nMIIC/DCCAeSgAwIBAgIQIm0uJrxR03UgVKC4hRH+QTANBgkqhkiG9w0BAQsFADAY\\nMRYwFAYDVQQKEw1jbHVzdGVyLmxvY2FsMB4XDTIxMDkxODA5MTUwOVoXDTMxMDkx\\nNjA5MTUwOVowGDEWMBQGA1UEChMNY2x1c3Rlci5sb2NhbDCCASIwDQYJKoZIhvcN\\nAQEBBQADggEPADCCAQoCggEBAMxhNFjEB+bW82xWVKfQUpvZVpQVskQs4bdbPuqM\\ns+4xpe42cfFvnJ4aNdLeespk7l0iNIo4p+WJ0pkkoi1/N+TztbmDOHsRW6h22YsB\\n/kWMf7LpLFBTWIqTe30DAG+DFbvn+yb7eLEdtUpbg3m7sYAZmX5BTxKiO5wl0i0D\\nDBRvqivJrhyDLikh4+xJ+dkxO3WlKJiik8SnzoGLaX2XiLeeRFTde4ynM9xZkA5i\\nwAgy8JTyiZ0rAIgj1DZ9n434IlWHykA7JG4tF2yeEeoJQfIjEK29ToVlLpFp+Cx5\\n/2Xe8CuCVRQJeH3hrDaf43o5HFJ2BIIpAsAUf8Ayd3K/PBUCAwEAAaNCMEAwDgYD\\nVR0PAQH/BAQDAgIEMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFFC+UlUIc2gM\\n1pG6lD1JZVEcrdAMMA0GCSqGSIb3DQEBCwUAA4IBAQCFkiXChryTn/VYRxhKull2\\nq1wdl5xEYqvOt+68krE8kSHh8XrA1mvhhp6rOtPbcNQ4kJulhzAs+IkFN/aygT7r\\nP+Q/JTKuSNNJVFmW1sSCAwcNyCxhNaNJBZL3MCjL7asqsmKxiVNMxYrgvvUgX2x6\\nsbNdjdQkRA9GJSuYTaAlX/vIdHK9XJxv2T/KbD0aB7bszujDP66LJZaq/DkDMePP\\nr1qTBFoEw0edtwFI8ESaQMpFlpQJcCIMdJ12z6EVcnBufEqDwLV1pU4zzB4/3Hzb\\ngAAAx46M4q/b8QareLuufAoOVyABeMjZdWVMGIFIqNSPLYp91iLhPLef3ZgEOPnr\\n-----END CERTIFICATE-----\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"84ef28f8-1ec2-4c82-afc4-8d3109734368\", \"name\": \"istio-ca-root-cert\", \"labels\": {\"istio.io/config\": \"true\"}, \"namespace\": \"web2\", \"managedFields\": [{\"time\": \"2022-03-17T09:04:14Z\", \"manager\": \"pilot-discovery\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:root-cert.pem\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:istio.io/config\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"124910983\", \"creationTimestamp\": \"2022-03-17T09:04:14Z\"}, \"apiVersion\": \"v1\"}', '2022-03-17 17:04:14', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (832, 'myhost', 'coredns-x-kube-system-x-myvc1', '', 'v1', 'configmaps', 'ConfigMap', '157302386', '9f4a0851-85b1-4623-bcbe-c4b4d7ac9d5e', '378b9e2f-6d28-404b-b821-c75cf5c4a48d', 'c33901208074f4b705f5', '{\"data\": {\"Corefile\": \".:1053 {\\n    \\n    errors\\n    health\\n    ready\\n    kubernetes cluster.local in-addr.arpa ip6.arpa {\\n      pods insecure\\n      fallthrough in-addr.arpa ip6.arpa\\n    }\\n    hosts /etc/coredns/NodeHosts {\\n      ttl 60\\n      reload 15s\\n      fallthrough\\n    }\\n    prometheus :9153\\n    forward . /etc/resolv.conf\\n    cache 30\\n    loop\\n    reload\\n    loadbalance\\n}\\n\\nimport /etc/coredns/custom/*.server\\n\", \"NodeHosts\": \"10.100.80.113 dsjs2\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"378b9e2f-6d28-404b-b821-c75cf5c4a48d\", \"name\": \"coredns-x-kube-system-x-myvc1\", \"labels\": {\"vcluster.loft.sh/namespace\": \"kube-system\", \"vcluster.loft.sh/managed-by\": \"myvc1\"}, \"namespace\": \"myhost\", \"annotations\": {\"vcluster.loft.sh/object-name\": \"coredns\", \"vcluster.loft.sh/object-namespace\": \"kube-system\", \"vcluster.loft.sh/managed-annotations\": \"kubectl.kubernetes.io/last-applied-configuration\", \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"data\\\":{\\\"Corefile\\\":\\\".:1053 {\\\\n    \\\\n    errors\\\\n    health\\\\n    ready\\\\n    kubernetes cluster.local in-addr.arpa ip6.arpa {\\\\n      pods insecure\\\\n      fallthrough in-addr.arpa ip6.arpa\\\\n    }\\\\n    hosts /etc/coredns/NodeHosts {\\\\n      ttl 60\\\\n      reload 15s\\\\n      fallthrough\\\\n    }\\\\n    prometheus :9153\\\\n    forward . /etc/resolv.conf\\\\n    cache 30\\\\n    loop\\\\n    reload\\\\n    loadbalance\\\\n}\\\\n\\\\nimport /etc/coredns/custom/*.server\\\\n\\\",\\\"NodeHosts\\\":\\\"\\\"},\\\"kind\\\":\\\"ConfigMap\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"coredns\\\",\\\"namespace\\\":\\\"kube-system\\\"}}\\n\"}, \"managedFields\": [{\"time\": \"2022-08-29T17:51:32Z\", \"manager\": \"vcluster\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:Corefile\": {}, \"f:NodeHosts\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:vcluster.loft.sh/namespace\": {}, \"f:vcluster.loft.sh/managed-by\": {}}, \"f:annotations\": {\".\": {}, \"f:vcluster.loft.sh/object-name\": {}, \"f:vcluster.loft.sh/object-namespace\": {}, \"f:vcluster.loft.sh/managed-annotations\": {}, \"f:kubectl.kubernetes.io/last-applied-configuration\": {}}, \"f:ownerReferences\": {\".\": {}, \"k:{\\\"uid\\\":\\\"9f4a0851-85b1-4623-bcbe-c4b4d7ac9d5e\\\"}\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"ownerReferences\": [{\"uid\": \"9f4a0851-85b1-4623-bcbe-c4b4d7ac9d5e\", \"kind\": \"Service\", \"name\": \"myvc1\", \"apiVersion\": \"v1\", \"controller\": false}], \"resourceVersion\": \"157302386\", \"creationTimestamp\": \"2022-08-29T17:51:32Z\"}, \"apiVersion\": \"v1\"}', '2022-08-30 01:51:32', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (833, 'k8sblog', 'kube-root-ca.crt', '', 'v1', 'configmaps', 'ConfigMap', '145106246', '', '96fa15da-6c36-46e0-8b04-be0d08b81a2f', 'ae2c671e7a3dddf23aa3', '{\"data\": {\"ca.crt\": \"-----BEGIN CERTIFICATE-----\\nMIIC/jCCAeagAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\\ncm5ldGVzMB4XDTIxMDgxNjE4MjQ0MVoXDTMxMDgxNDE4MjQ0MVowFTETMBEGA1UE\\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKAQ\\n/td7qUH75HBRNBsJksTZWRSr0ZsBghzsO4FTKz90biavL/XVneiN0YNa7PCqusCR\\nYS6W6vUFepyjWtlYdKdHc6ZRPuAPokxGFOurLXHqdDg/vSgmR1J2bDe25AQ1O/8M\\n/MlBVRLIfsnjMOrPdegYhmQhlqN/qkcy0EYlTWMPxPiBmTiocalPG4OAtDqXmCJj\\ny6/hJhQ7ta1pnaiLWe+b8v99udJ7RGrRAQv5KWRwMY6nwNviV8OAAiEL9nkFIDs5\\n7r5OtHhC6fv4DByj3zZzsdN9JOogrZbnP/6/UtovgYvt8Sv+0Z4q1T5tpV+0EXZi\\n4LFkYy0bXWvWOfppHXUCAwEAAaNZMFcwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB\\n/wQFMAMBAf8wHQYDVR0OBBYEFIHMJBmfKRukQct2JCPpvxdGOP1mMBUGA1UdEQQO\\nMAyCCmt1YmVybmV0ZXMwDQYJKoZIhvcNAQELBQADggEBAFuzNT+/vgIZ2s37cjXB\\nLA2NsR73Yvp4Cg2VcuaDqSD+ZIgp0bSrnHXTcoZIW5KaEJf92FF4kZG1riQaeJFo\\nkzOCH6Xp7qbYp1XsKW+IbbYia1Ps/cY3tG3od6j56tvyokrURI+rBC9QngmhIJPM\\nUGlboIV+xnE2662wMWNu/FsbsW33lTK29gdicAiDPleBCPdtgUDlQyJTSKZuFi8h\\nV6aWCLuFxIkW6l0mLpQIhbc5Jx6uTZ0AFoMd0dPJohttCwZ97Kjew7X1Saimbnox\\naH9EPUfLNWonQ+tBkp5/0krm0LrAhNT5aA5M7tcYKSg5ytTukMdAaJwQWHCH5M1t\\nI9s=\\n-----END CERTIFICATE-----\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"96fa15da-6c36-46e0-8b04-be0d08b81a2f\", \"name\": \"kube-root-ca.crt\", \"namespace\": \"k8sblog\", \"annotations\": {\"kubernetes.io/description\": \"Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters.\"}, \"managedFields\": [{\"time\": \"2022-06-25T04:49:17Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:ca.crt\": {}}, \"f:metadata\": {\"f:annotations\": {\".\": {}, \"f:kubernetes.io/description\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"145106246\", \"creationTimestamp\": \"2022-06-25T04:49:17Z\"}, \"apiVersion\": \"v1\"}', '2022-06-25 12:49:17', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (834, 'kube-system', 'extension-apiserver-authentication', '', 'v1', 'configmaps', 'ConfigMap', '26', '', '9131bca1-e4c6-4c27-ba8f-9965d1886567', '2613baf848f51e1d6c91', '{\"data\": {\"client-ca-file\": \"-----BEGIN CERTIFICATE-----\\nMIIC/jCCAeagAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\\ncm5ldGVzMB4XDTIxMDgxNjE4MjQ0MVoXDTMxMDgxNDE4MjQ0MVowFTETMBEGA1UE\\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKAQ\\n/td7qUH75HBRNBsJksTZWRSr0ZsBghzsO4FTKz90biavL/XVneiN0YNa7PCqusCR\\nYS6W6vUFepyjWtlYdKdHc6ZRPuAPokxGFOurLXHqdDg/vSgmR1J2bDe25AQ1O/8M\\n/MlBVRLIfsnjMOrPdegYhmQhlqN/qkcy0EYlTWMPxPiBmTiocalPG4OAtDqXmCJj\\ny6/hJhQ7ta1pnaiLWe+b8v99udJ7RGrRAQv5KWRwMY6nwNviV8OAAiEL9nkFIDs5\\n7r5OtHhC6fv4DByj3zZzsdN9JOogrZbnP/6/UtovgYvt8Sv+0Z4q1T5tpV+0EXZi\\n4LFkYy0bXWvWOfppHXUCAwEAAaNZMFcwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB\\n/wQFMAMBAf8wHQYDVR0OBBYEFIHMJBmfKRukQct2JCPpvxdGOP1mMBUGA1UdEQQO\\nMAyCCmt1YmVybmV0ZXMwDQYJKoZIhvcNAQELBQADggEBAFuzNT+/vgIZ2s37cjXB\\nLA2NsR73Yvp4Cg2VcuaDqSD+ZIgp0bSrnHXTcoZIW5KaEJf92FF4kZG1riQaeJFo\\nkzOCH6Xp7qbYp1XsKW+IbbYia1Ps/cY3tG3od6j56tvyokrURI+rBC9QngmhIJPM\\nUGlboIV+xnE2662wMWNu/FsbsW33lTK29gdicAiDPleBCPdtgUDlQyJTSKZuFi8h\\nV6aWCLuFxIkW6l0mLpQIhbc5Jx6uTZ0AFoMd0dPJohttCwZ97Kjew7X1Saimbnox\\naH9EPUfLNWonQ+tBkp5/0krm0LrAhNT5aA5M7tcYKSg5ytTukMdAaJwQWHCH5M1t\\nI9s=\\n-----END CERTIFICATE-----\\n\", \"requestheader-allowed-names\": \"[\\\"front-proxy-client\\\"]\", \"requestheader-group-headers\": \"[\\\"X-Remote-Group\\\"]\", \"requestheader-client-ca-file\": \"-----BEGIN CERTIFICATE-----\\nMIIDCjCCAfKgAwIBAgIBADANBgkqhkiG9w0BAQsFADAZMRcwFQYDVQQDEw5mcm9u\\ndC1wcm94eS1jYTAeFw0yMTA4MTYxODI0NDJaFw0zMTA4MTQxODI0NDJaMBkxFzAV\\nBgNVBAMTDmZyb250LXByb3h5LWNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB\\nCgKCAQEAtLm1D8Ol3IhYquJ42dIzgsN1wJtvAqQ53UhpZjO6t1m2i89WSc0C9V+5\\nXinI6P7auJHT7nSUxelKuoLWB0DU4tyMimF5JP3/DSv64zT77Qw1AdRvQ2KwFE6b\\nqbt81BnrYHSwmldt/2MSKDIXwmFEcy1yM8pjC1zPLOjAif3+qJTo8knOhZn+f+uZ\\nDaAcE9ooGfYEF8boqR24OFY0YkkiahgYBJW6iR4kgxKXJ0xZfmSlgWfdMgWa5W0t\\nfe2yTs/lsKg5jvCkoVD1oN2in6pMatGDf71qbm6uCT64STa8S1BY4PwLgu5cHATW\\nAvpVlWo2OL/a/0AtY3WZsiyMtfsVWwIDAQABo10wWzAOBgNVHQ8BAf8EBAMCAqQw\\nDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUpOomyI3a/HewDj+W6lbLb5Kc5mQw\\nGQYDVR0RBBIwEIIOZnJvbnQtcHJveHktY2EwDQYJKoZIhvcNAQELBQADggEBAC3W\\naWn0tP2fbfYHSVMfAXAUT2DBJ1QKPy/zCI1c1JtdIlMJewdbsfWkl74RiHmO+lG/\\ns6Pam7/wCs4Fzr+MPO7rJnSr6ueA6oKzcIkb5J0GtllOhDHPLIR9PCXzAQNL2Vr3\\ny70TDeQMLKwdzdkhMVV/WDgBatXswLR4Fmf8URM/ZR2RnPYbMiXSjn+JjUnbAmuc\\n1+1uGnSNxxgJ461dseMn1HMApT1Zc6cwCkqoJ3ngsDd2cD6Zhx1tgeMSiZawP2Br\\n9gC5BloreJGXOSLkU0ByJ72IMIacfp8xVSawTv45XrlOVaHcMmN1XtHyqjiD/gu/\\nc81p8i7Hb79XcAwISkg=\\n-----END CERTIFICATE-----\\n\", \"requestheader-username-headers\": \"[\\\"X-Remote-User\\\"]\", \"requestheader-extra-headers-prefix\": \"[\\\"X-Remote-Extra-\\\"]\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"9131bca1-e4c6-4c27-ba8f-9965d1886567\", \"name\": \"extension-apiserver-authentication\", \"namespace\": \"kube-system\", \"managedFields\": [{\"time\": \"2021-08-16T18:24:52Z\", \"manager\": \"kube-apiserver\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:client-ca-file\": {}, \"f:requestheader-allowed-names\": {}, \"f:requestheader-group-headers\": {}, \"f:requestheader-client-ca-file\": {}, \"f:requestheader-username-headers\": {}, \"f:requestheader-extra-headers-prefix\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"26\", \"creationTimestamp\": \"2021-08-16T18:24:52Z\"}, \"apiVersion\": \"v1\"}', '2021-08-17 02:24:52', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (835, 'cattle-impersonation-system', 'kube-root-ca.crt', '', 'v1', 'configmaps', 'ConfigMap', '12089044', '', '10ef291f-3a8b-491c-9c82-50bb91336f92', '0262fd2b3269fc3346cd', '{\"data\": {\"ca.crt\": \"-----BEGIN CERTIFICATE-----\\nMIIC/jCCAeagAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\\ncm5ldGVzMB4XDTIxMDgxNjE4MjQ0MVoXDTMxMDgxNDE4MjQ0MVowFTETMBEGA1UE\\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKAQ\\n/td7qUH75HBRNBsJksTZWRSr0ZsBghzsO4FTKz90biavL/XVneiN0YNa7PCqusCR\\nYS6W6vUFepyjWtlYdKdHc6ZRPuAPokxGFOurLXHqdDg/vSgmR1J2bDe25AQ1O/8M\\n/MlBVRLIfsnjMOrPdegYhmQhlqN/qkcy0EYlTWMPxPiBmTiocalPG4OAtDqXmCJj\\ny6/hJhQ7ta1pnaiLWe+b8v99udJ7RGrRAQv5KWRwMY6nwNviV8OAAiEL9nkFIDs5\\n7r5OtHhC6fv4DByj3zZzsdN9JOogrZbnP/6/UtovgYvt8Sv+0Z4q1T5tpV+0EXZi\\n4LFkYy0bXWvWOfppHXUCAwEAAaNZMFcwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB\\n/wQFMAMBAf8wHQYDVR0OBBYEFIHMJBmfKRukQct2JCPpvxdGOP1mMBUGA1UdEQQO\\nMAyCCmt1YmVybmV0ZXMwDQYJKoZIhvcNAQELBQADggEBAFuzNT+/vgIZ2s37cjXB\\nLA2NsR73Yvp4Cg2VcuaDqSD+ZIgp0bSrnHXTcoZIW5KaEJf92FF4kZG1riQaeJFo\\nkzOCH6Xp7qbYp1XsKW+IbbYia1Ps/cY3tG3od6j56tvyokrURI+rBC9QngmhIJPM\\nUGlboIV+xnE2662wMWNu/FsbsW33lTK29gdicAiDPleBCPdtgUDlQyJTSKZuFi8h\\nV6aWCLuFxIkW6l0mLpQIhbc5Jx6uTZ0AFoMd0dPJohttCwZ97Kjew7X1Saimbnox\\naH9EPUfLNWonQ+tBkp5/0krm0LrAhNT5aA5M7tcYKSg5ytTukMdAaJwQWHCH5M1t\\nI9s=\\n-----END CERTIFICATE-----\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"10ef291f-3a8b-491c-9c82-50bb91336f92\", \"name\": \"kube-root-ca.crt\", \"namespace\": \"cattle-impersonation-system\", \"annotations\": {\"kubernetes.io/description\": \"Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters.\"}, \"managedFields\": [{\"time\": \"2021-09-20T08:30:52Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:ca.crt\": {}}, \"f:metadata\": {\"f:annotations\": {\".\": {}, \"f:kubernetes.io/description\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"12089044\", \"creationTimestamp\": \"2021-09-20T08:30:52Z\"}, \"apiVersion\": \"v1\"}', '2021-09-20 16:30:52', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (836, 'cicd', 'istio-ca-root-cert', '', 'v1', 'configmaps', 'ConfigMap', '10588514', '', 'a3d6c529-c0e3-40f1-b5d1-cd3954d09371', 'cb6b83f38ca6502a857d', '{\"data\": {\"root-cert.pem\": \"-----BEGIN CERTIFICATE-----\\nMIIC/DCCAeSgAwIBAgIQIm0uJrxR03UgVKC4hRH+QTANBgkqhkiG9w0BAQsFADAY\\nMRYwFAYDVQQKEw1jbHVzdGVyLmxvY2FsMB4XDTIxMDkxODA5MTUwOVoXDTMxMDkx\\nNjA5MTUwOVowGDEWMBQGA1UEChMNY2x1c3Rlci5sb2NhbDCCASIwDQYJKoZIhvcN\\nAQEBBQADggEPADCCAQoCggEBAMxhNFjEB+bW82xWVKfQUpvZVpQVskQs4bdbPuqM\\ns+4xpe42cfFvnJ4aNdLeespk7l0iNIo4p+WJ0pkkoi1/N+TztbmDOHsRW6h22YsB\\n/kWMf7LpLFBTWIqTe30DAG+DFbvn+yb7eLEdtUpbg3m7sYAZmX5BTxKiO5wl0i0D\\nDBRvqivJrhyDLikh4+xJ+dkxO3WlKJiik8SnzoGLaX2XiLeeRFTde4ynM9xZkA5i\\nwAgy8JTyiZ0rAIgj1DZ9n434IlWHykA7JG4tF2yeEeoJQfIjEK29ToVlLpFp+Cx5\\n/2Xe8CuCVRQJeH3hrDaf43o5HFJ2BIIpAsAUf8Ayd3K/PBUCAwEAAaNCMEAwDgYD\\nVR0PAQH/BAQDAgIEMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFFC+UlUIc2gM\\n1pG6lD1JZVEcrdAMMA0GCSqGSIb3DQEBCwUAA4IBAQCFkiXChryTn/VYRxhKull2\\nq1wdl5xEYqvOt+68krE8kSHh8XrA1mvhhp6rOtPbcNQ4kJulhzAs+IkFN/aygT7r\\nP+Q/JTKuSNNJVFmW1sSCAwcNyCxhNaNJBZL3MCjL7asqsmKxiVNMxYrgvvUgX2x6\\nsbNdjdQkRA9GJSuYTaAlX/vIdHK9XJxv2T/KbD0aB7bszujDP66LJZaq/DkDMePP\\nr1qTBFoEw0edtwFI8ESaQMpFlpQJcCIMdJ12z6EVcnBufEqDwLV1pU4zzB4/3Hzb\\ngAAAx46M4q/b8QareLuufAoOVyABeMjZdWVMGIFIqNSPLYp91iLhPLef3ZgEOPnr\\n-----END CERTIFICATE-----\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"a3d6c529-c0e3-40f1-b5d1-cd3954d09371\", \"name\": \"istio-ca-root-cert\", \"labels\": {\"istio.io/config\": \"true\"}, \"namespace\": \"cicd\", \"managedFields\": [{\"time\": \"2021-09-09T07:52:24Z\", \"manager\": \"pilot-discovery\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:root-cert.pem\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:istio.io/config\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"10588514\", \"creationTimestamp\": \"2021-09-09T07:52:24Z\"}, \"apiVersion\": \"v1\"}', '2021-09-09 15:52:24', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (837, 'istio-system', 'istio-leader', '', 'v1', 'configmaps', 'ConfigMap', '162259767', '', '6e611816-e146-465f-ad77-08bd0583e382', '672cdc4c18d7d5604371', '{\"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"6e611816-e146-465f-ad77-08bd0583e382\", \"name\": \"istio-leader\", \"namespace\": \"istio-system\", \"annotations\": {\"control-plane.alpha.kubernetes.io/leader\": \"{\\\"holderIdentity\\\":\\\"istiod-5b6d7d4cb5-lgv9m\\\",\\\"holderKey\\\":\\\"default\\\",\\\"leaseDurationSeconds\\\":30,\\\"acquireTime\\\":\\\"2022-05-19T05:17:11Z\\\",\\\"renewTime\\\":\\\"2022-09-27T09:54:17Z\\\",\\\"leaderTransitions\\\":4}\"}, \"managedFields\": [{\"time\": \"2021-09-18T09:15:22Z\", \"manager\": \"pilot-discovery\", \"fieldsV1\": {\"f:metadata\": {\"f:annotations\": {\".\": {}, \"f:control-plane.alpha.kubernetes.io/leader\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"162259767\", \"creationTimestamp\": \"2021-09-18T09:15:22Z\"}, \"apiVersion\": \"v1\"}', '2021-09-18 17:15:22', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (838, 'argocd', 'argocd-cm', '', 'v1', 'configmaps', 'ConfigMap', '31177023', '', 'cb909458-4aa8-46ce-8f66-1adadc3275b1', '431bf6741a19dfde8363', '{\"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"cb909458-4aa8-46ce-8f66-1adadc3275b1\", \"name\": \"argocd-cm\", \"labels\": {\"app.kubernetes.io/name\": \"argocd-cm\", \"app.kubernetes.io/part-of\": \"argocd\"}, \"namespace\": \"argocd\", \"annotations\": {\"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"ConfigMap\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app.kubernetes.io/name\\\":\\\"argocd-cm\\\",\\\"app.kubernetes.io/part-of\\\":\\\"argocd\\\"},\\\"name\\\":\\\"argocd-cm\\\",\\\"namespace\\\":\\\"argocd\\\"}}\\n\"}, \"managedFields\": [{\"time\": \"2021-10-15T10:23:22Z\", \"manager\": \"kubectl-client-side-apply\", \"fieldsV1\": {\"f:metadata\": {\"f:labels\": {\".\": {}, \"f:app.kubernetes.io/name\": {}, \"f:app.kubernetes.io/part-of\": {}}, \"f:annotations\": {\".\": {}, \"f:kubectl.kubernetes.io/last-applied-configuration\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"31177023\", \"creationTimestamp\": \"2021-10-15T10:23:22Z\"}, \"apiVersion\": \"v1\"}', '2021-10-15 18:23:22', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (839, 'argocd', 'argocd-cmd-params-cm', '', 'v1', 'configmaps', 'ConfigMap', '31177024', '', '8f7adf2a-e1df-4169-ad74-dd0128a61140', 'fa022ad3fd4758636645', '{\"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"8f7adf2a-e1df-4169-ad74-dd0128a61140\", \"name\": \"argocd-cmd-params-cm\", \"labels\": {\"app.kubernetes.io/name\": \"argocd-cmd-params-cm\", \"app.kubernetes.io/part-of\": \"argocd\"}, \"namespace\": \"argocd\", \"annotations\": {\"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"ConfigMap\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app.kubernetes.io/name\\\":\\\"argocd-cmd-params-cm\\\",\\\"app.kubernetes.io/part-of\\\":\\\"argocd\\\"},\\\"name\\\":\\\"argocd-cmd-params-cm\\\",\\\"namespace\\\":\\\"argocd\\\"}}\\n\"}, \"managedFields\": [{\"time\": \"2021-10-15T10:23:22Z\", \"manager\": \"kubectl-client-side-apply\", \"fieldsV1\": {\"f:metadata\": {\"f:labels\": {\".\": {}, \"f:app.kubernetes.io/name\": {}, \"f:app.kubernetes.io/part-of\": {}}, \"f:annotations\": {\".\": {}, \"f:kubectl.kubernetes.io/last-applied-configuration\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"31177024\", \"creationTimestamp\": \"2021-10-15T10:23:22Z\"}, \"apiVersion\": \"v1\"}', '2021-10-15 18:23:22', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (840, 'istio-system', 'istio-ca-root-cert', '', 'v1', 'configmaps', 'ConfigMap', '10588515', '', '585da3d3-2722-4fe4-ad4c-89b8d6edec0c', 'b17b23fd40437bd8ea56', '{\"data\": {\"root-cert.pem\": \"-----BEGIN CERTIFICATE-----\\nMIIC/DCCAeSgAwIBAgIQIm0uJrxR03UgVKC4hRH+QTANBgkqhkiG9w0BAQsFADAY\\nMRYwFAYDVQQKEw1jbHVzdGVyLmxvY2FsMB4XDTIxMDkxODA5MTUwOVoXDTMxMDkx\\nNjA5MTUwOVowGDEWMBQGA1UEChMNY2x1c3Rlci5sb2NhbDCCASIwDQYJKoZIhvcN\\nAQEBBQADggEPADCCAQoCggEBAMxhNFjEB+bW82xWVKfQUpvZVpQVskQs4bdbPuqM\\ns+4xpe42cfFvnJ4aNdLeespk7l0iNIo4p+WJ0pkkoi1/N+TztbmDOHsRW6h22YsB\\n/kWMf7LpLFBTWIqTe30DAG+DFbvn+yb7eLEdtUpbg3m7sYAZmX5BTxKiO5wl0i0D\\nDBRvqivJrhyDLikh4+xJ+dkxO3WlKJiik8SnzoGLaX2XiLeeRFTde4ynM9xZkA5i\\nwAgy8JTyiZ0rAIgj1DZ9n434IlWHykA7JG4tF2yeEeoJQfIjEK29ToVlLpFp+Cx5\\n/2Xe8CuCVRQJeH3hrDaf43o5HFJ2BIIpAsAUf8Ayd3K/PBUCAwEAAaNCMEAwDgYD\\nVR0PAQH/BAQDAgIEMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFFC+UlUIc2gM\\n1pG6lD1JZVEcrdAMMA0GCSqGSIb3DQEBCwUAA4IBAQCFkiXChryTn/VYRxhKull2\\nq1wdl5xEYqvOt+68krE8kSHh8XrA1mvhhp6rOtPbcNQ4kJulhzAs+IkFN/aygT7r\\nP+Q/JTKuSNNJVFmW1sSCAwcNyCxhNaNJBZL3MCjL7asqsmKxiVNMxYrgvvUgX2x6\\nsbNdjdQkRA9GJSuYTaAlX/vIdHK9XJxv2T/KbD0aB7bszujDP66LJZaq/DkDMePP\\nr1qTBFoEw0edtwFI8ESaQMpFlpQJcCIMdJ12z6EVcnBufEqDwLV1pU4zzB4/3Hzb\\ngAAAx46M4q/b8QareLuufAoOVyABeMjZdWVMGIFIqNSPLYp91iLhPLef3ZgEOPnr\\n-----END CERTIFICATE-----\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"585da3d3-2722-4fe4-ad4c-89b8d6edec0c\", \"name\": \"istio-ca-root-cert\", \"labels\": {\"istio.io/config\": \"true\"}, \"namespace\": \"istio-system\", \"managedFields\": [{\"time\": \"2021-09-18T09:15:23Z\", \"manager\": \"pilot-discovery\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:root-cert.pem\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:istio.io/config\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"10588515\", \"creationTimestamp\": \"2021-09-18T09:15:23Z\"}, \"apiVersion\": \"v1\"}', '2021-09-18 17:15:23', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (841, 'kube-federation-system', 'kube-root-ca.crt', '', 'v1', 'configmaps', 'ConfigMap', '926151', '', '75951de9-91c5-4937-85ee-282a5fea298d', '2e364a1c67076061737a', '{\"data\": {\"ca.crt\": \"-----BEGIN CERTIFICATE-----\\nMIIC/jCCAeagAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\\ncm5ldGVzMB4XDTIxMDgxNjE4MjQ0MVoXDTMxMDgxNDE4MjQ0MVowFTETMBEGA1UE\\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKAQ\\n/td7qUH75HBRNBsJksTZWRSr0ZsBghzsO4FTKz90biavL/XVneiN0YNa7PCqusCR\\nYS6W6vUFepyjWtlYdKdHc6ZRPuAPokxGFOurLXHqdDg/vSgmR1J2bDe25AQ1O/8M\\n/MlBVRLIfsnjMOrPdegYhmQhlqN/qkcy0EYlTWMPxPiBmTiocalPG4OAtDqXmCJj\\ny6/hJhQ7ta1pnaiLWe+b8v99udJ7RGrRAQv5KWRwMY6nwNviV8OAAiEL9nkFIDs5\\n7r5OtHhC6fv4DByj3zZzsdN9JOogrZbnP/6/UtovgYvt8Sv+0Z4q1T5tpV+0EXZi\\n4LFkYy0bXWvWOfppHXUCAwEAAaNZMFcwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB\\n/wQFMAMBAf8wHQYDVR0OBBYEFIHMJBmfKRukQct2JCPpvxdGOP1mMBUGA1UdEQQO\\nMAyCCmt1YmVybmV0ZXMwDQYJKoZIhvcNAQELBQADggEBAFuzNT+/vgIZ2s37cjXB\\nLA2NsR73Yvp4Cg2VcuaDqSD+ZIgp0bSrnHXTcoZIW5KaEJf92FF4kZG1riQaeJFo\\nkzOCH6Xp7qbYp1XsKW+IbbYia1Ps/cY3tG3od6j56tvyokrURI+rBC9QngmhIJPM\\nUGlboIV+xnE2662wMWNu/FsbsW33lTK29gdicAiDPleBCPdtgUDlQyJTSKZuFi8h\\nV6aWCLuFxIkW6l0mLpQIhbc5Jx6uTZ0AFoMd0dPJohttCwZ97Kjew7X1Saimbnox\\naH9EPUfLNWonQ+tBkp5/0krm0LrAhNT5aA5M7tcYKSg5ytTukMdAaJwQWHCH5M1t\\nI9s=\\n-----END CERTIFICATE-----\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"75951de9-91c5-4937-85ee-282a5fea298d\", \"name\": \"kube-root-ca.crt\", \"namespace\": \"kube-federation-system\", \"annotations\": {\"kubernetes.io/description\": \"Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters.\"}, \"managedFields\": [{\"time\": \"2021-08-22T18:06:39Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:ca.crt\": {}}, \"f:metadata\": {\"f:annotations\": {\".\": {}, \"f:kubernetes.io/description\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"926151\", \"creationTimestamp\": \"2021-08-22T18:06:39Z\"}, \"apiVersion\": \"v1\"}', '2021-08-23 02:06:39', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (842, 'default', 'config-observability-triggers', '', 'v1', 'configmaps', 'ConfigMap', '4613704', '', 'a99a43f0-71f3-4412-a9c5-fa2e0b0d3208', '0060a775bf77b4a9054b', '{\"data\": {\"_example\": \"See tekton-pipelines namespace for valid values\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"a99a43f0-71f3-4412-a9c5-fa2e0b0d3208\", \"name\": \"config-observability-triggers\", \"namespace\": \"default\", \"managedFields\": [{\"time\": \"2021-09-10T09:22:07Z\", \"manager\": \"controller\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:_example\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"4613704\", \"creationTimestamp\": \"2021-09-10T09:22:07Z\"}, \"apiVersion\": \"v1\"}', '2021-09-10 17:22:07', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (843, 'ingress-nginx', 'myingress-ingress-nginx-controller', '', 'v1', 'configmaps', 'ConfigMap', '129150', '', '6f1ae169-1c00-4f08-afda-66fa14a8fcdf', '43a3c09952e06363d7d5', '{\"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"6f1ae169-1c00-4f08-afda-66fa14a8fcdf\", \"name\": \"myingress-ingress-nginx-controller\", \"labels\": {\"helm.sh/chart\": \"ingress-nginx-4.0.0-beta.3\", \"app.kubernetes.io/name\": \"ingress-nginx\", \"app.kubernetes.io/version\": \"1.0.0-beta.3\", \"app.kubernetes.io/instance\": \"RELEASE-NAME\", \"app.kubernetes.io/component\": \"controller\", \"app.kubernetes.io/managed-by\": \"Helm\"}, \"namespace\": \"ingress-nginx\", \"annotations\": {\"meta.helm.sh/release-name\": \"myingress\", \"meta.helm.sh/release-namespace\": \"ingress-nginx\"}, \"managedFields\": [{\"time\": \"2021-08-17T17:19:07Z\", \"manager\": \"helm\", \"fieldsV1\": {\"f:metadata\": {\"f:labels\": {\".\": {}, \"f:helm.sh/chart\": {}, \"f:app.kubernetes.io/name\": {}, \"f:app.kubernetes.io/version\": {}, \"f:app.kubernetes.io/instance\": {}, \"f:app.kubernetes.io/component\": {}, \"f:app.kubernetes.io/managed-by\": {}}, \"f:annotations\": {\".\": {}, \"f:meta.helm.sh/release-name\": {}, \"f:meta.helm.sh/release-namespace\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"129150\", \"creationTimestamp\": \"2021-08-17T17:19:07Z\"}, \"apiVersion\": \"v1\"}', '2021-08-18 01:19:07', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (844, 'default', 'prodapi-6748487d64-mqppz', '', 'v1', 'pods', 'Pod', '133641404', 'a28be59e-3c64-4d8c-b356-07a75ba72356', '7824bd0d-f78a-4e41-a06b-2265927fe888', 'fb2c893f0e63223527c4', '{\"kind\": \"Pod\", \"spec\": {\"volumes\": [{\"name\": \"kube-api-access-2bbcc\", \"projected\": {\"sources\": [{\"serviceAccountToken\": {\"path\": \"token\", \"expirationSeconds\": 3607}}, {\"configMap\": {\"name\": \"kube-root-ca.crt\", \"items\": [{\"key\": \"ca.crt\", \"path\": \"ca.crt\"}]}}, {\"downwardAPI\": {\"items\": [{\"path\": \"namespace\", \"fieldRef\": {\"fieldPath\": \"metadata.namespace\", \"apiVersion\": \"v1\"}}]}}], \"defaultMode\": 420}}], \"nodeName\": \"dsjs2\", \"priority\": 0, \"dnsPolicy\": \"ClusterFirst\", \"containers\": [{\"name\": \"prod\", \"image\": \"docker.io/shenyisyn/prod:v1\", \"ports\": [{\"protocol\": \"TCP\", \"containerPort\": 8080}], \"resources\": {}, \"volumeMounts\": [{\"name\": \"kube-api-access-2bbcc\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\"}], \"imagePullPolicy\": \"IfNotPresent\", \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"tolerations\": [{\"key\": \"node.kubernetes.io/not-ready\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}, {\"key\": \"node.kubernetes.io/unreachable\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}], \"restartPolicy\": \"Always\", \"schedulerName\": \"default-scheduler\", \"serviceAccount\": \"default\", \"securityContext\": {}, \"preemptionPolicy\": \"PreemptLowerPriority\", \"enableServiceLinks\": true, \"serviceAccountName\": \"default\", \"terminationGracePeriodSeconds\": 30}, \"status\": {\"phase\": \"Running\", \"podIP\": \"10.244.1.188\", \"hostIP\": \"172.17.70.145\", \"podIPs\": [{\"ip\": \"10.244.1.188\"}], \"qosClass\": \"BestEffort\", \"startTime\": \"2022-04-28T08:06:06Z\", \"conditions\": [{\"type\": \"Initialized\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-04-28T08:06:06Z\"}, {\"type\": \"Ready\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-04-28T08:06:08Z\"}, {\"type\": \"ContainersReady\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-04-28T08:06:08Z\"}, {\"type\": \"PodScheduled\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-04-28T08:01:23Z\"}], \"containerStatuses\": [{\"name\": \"prod\", \"image\": \"prod:v1\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2022-04-28T08:06:07Z\"}}, \"imageID\": \"docker-pullable://shenyisyn/prod@sha256:87af02219f026a6ab53124775bc8e640c874c3c68874b6a8c9aecb44248407fd\", \"started\": true, \"lastState\": {}, \"containerID\": \"docker://85cd537ba8db4d0798d3f44e36c91c7e1492f75391e25c3590f8bd9c2296e05c\", \"restartCount\": 0}]}, \"metadata\": {\"uid\": \"7824bd0d-f78a-4e41-a06b-2265927fe888\", \"name\": \"prodapi-6748487d64-mqppz\", \"labels\": {\"app\": \"prod\", \"version\": \"v1\", \"pod-template-hash\": \"6748487d64\"}, \"namespace\": \"default\", \"generateName\": \"prodapi-6748487d64-\", \"managedFields\": [{\"time\": \"2022-04-28T08:01:23Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:spec\": {\"f:dnsPolicy\": {}, \"f:containers\": {\"k:{\\\"name\\\":\\\"prod\\\"}\": {\".\": {}, \"f:name\": {}, \"f:image\": {}, \"f:ports\": {\".\": {}, \"k:{\\\"containerPort\\\":8080,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}}, \"f:resources\": {}, \"f:imagePullPolicy\": {}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:restartPolicy\": {}, \"f:schedulerName\": {}, \"f:securityContext\": {}, \"f:enableServiceLinks\": {}, \"f:terminationGracePeriodSeconds\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:app\": {}, \"f:version\": {}, \"f:pod-template-hash\": {}}, \"f:generateName\": {}, \"f:ownerReferences\": {\".\": {}, \"k:{\\\"uid\\\":\\\"a28be59e-3c64-4d8c-b356-07a75ba72356\\\"}\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2022-04-28T08:01:25Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:status\": {\"f:phase\": {}, \"f:podIP\": {}, \"f:hostIP\": {}, \"f:podIPs\": {\".\": {}, \"k:{\\\"ip\\\":\\\"10.244.1.188\\\"}\": {\".\": {}, \"f:ip\": {}}}, \"f:startTime\": {}, \"f:conditions\": {\"k:{\\\"type\\\":\\\"Ready\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"Initialized\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"ContainersReady\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}, \"f:containerStatuses\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}], \"ownerReferences\": [{\"uid\": \"a28be59e-3c64-4d8c-b356-07a75ba72356\", \"kind\": \"ReplicaSet\", \"name\": \"prodapi-6748487d64\", \"apiVersion\": \"apps/v1\", \"controller\": true, \"blockOwnerDeletion\": true}], \"resourceVersion\": \"133641404\", \"creationTimestamp\": \"2022-04-28T08:01:23Z\"}, \"apiVersion\": \"v1\"}', '2022-04-28 16:01:23', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (845, 'kube-public', 'kube-root-ca.crt', '', 'v1', 'configmaps', 'ConfigMap', '409', '', '4024baad-05d0-4212-ae6c-2486a2d74b32', '6212c02eea958075aab6', '{\"data\": {\"ca.crt\": \"-----BEGIN CERTIFICATE-----\\nMIIC/jCCAeagAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\\ncm5ldGVzMB4XDTIxMDgxNjE4MjQ0MVoXDTMxMDgxNDE4MjQ0MVowFTETMBEGA1UE\\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKAQ\\n/td7qUH75HBRNBsJksTZWRSr0ZsBghzsO4FTKz90biavL/XVneiN0YNa7PCqusCR\\nYS6W6vUFepyjWtlYdKdHc6ZRPuAPokxGFOurLXHqdDg/vSgmR1J2bDe25AQ1O/8M\\n/MlBVRLIfsnjMOrPdegYhmQhlqN/qkcy0EYlTWMPxPiBmTiocalPG4OAtDqXmCJj\\ny6/hJhQ7ta1pnaiLWe+b8v99udJ7RGrRAQv5KWRwMY6nwNviV8OAAiEL9nkFIDs5\\n7r5OtHhC6fv4DByj3zZzsdN9JOogrZbnP/6/UtovgYvt8Sv+0Z4q1T5tpV+0EXZi\\n4LFkYy0bXWvWOfppHXUCAwEAAaNZMFcwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB\\n/wQFMAMBAf8wHQYDVR0OBBYEFIHMJBmfKRukQct2JCPpvxdGOP1mMBUGA1UdEQQO\\nMAyCCmt1YmVybmV0ZXMwDQYJKoZIhvcNAQELBQADggEBAFuzNT+/vgIZ2s37cjXB\\nLA2NsR73Yvp4Cg2VcuaDqSD+ZIgp0bSrnHXTcoZIW5KaEJf92FF4kZG1riQaeJFo\\nkzOCH6Xp7qbYp1XsKW+IbbYia1Ps/cY3tG3od6j56tvyokrURI+rBC9QngmhIJPM\\nUGlboIV+xnE2662wMWNu/FsbsW33lTK29gdicAiDPleBCPdtgUDlQyJTSKZuFi8h\\nV6aWCLuFxIkW6l0mLpQIhbc5Jx6uTZ0AFoMd0dPJohttCwZ97Kjew7X1Saimbnox\\naH9EPUfLNWonQ+tBkp5/0krm0LrAhNT5aA5M7tcYKSg5ytTukMdAaJwQWHCH5M1t\\nI9s=\\n-----END CERTIFICATE-----\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"4024baad-05d0-4212-ae6c-2486a2d74b32\", \"name\": \"kube-root-ca.crt\", \"namespace\": \"kube-public\", \"annotations\": {\"kubernetes.io/description\": \"Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters.\"}, \"managedFields\": [{\"time\": \"2021-08-16T18:25:08Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:ca.crt\": {}}, \"f:metadata\": {\"f:annotations\": {\".\": {}, \"f:kubernetes.io/description\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"409\", \"creationTimestamp\": \"2021-08-16T18:25:08Z\"}, \"apiVersion\": \"v1\"}', '2021-08-17 02:25:08', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (846, 'kube-system', 'kube-flannel-cfg', '', 'v1', 'configmaps', 'ConfigMap', '819', '', '4ef5c17d-f11b-48c0-8ef6-141c37a30fd1', 'cc4f96d559bdc6f1e249', '{\"data\": {\"cni-conf.json\": \"{\\n  \\\"name\\\": \\\"cbr0\\\",\\n  \\\"cniVersion\\\": \\\"0.3.1\\\",\\n  \\\"plugins\\\": [\\n    {\\n      \\\"type\\\": \\\"flannel\\\",\\n      \\\"delegate\\\": {\\n        \\\"hairpinMode\\\": true,\\n        \\\"isDefaultGateway\\\": true\\n      }\\n    },\\n    {\\n      \\\"type\\\": \\\"portmap\\\",\\n      \\\"capabilities\\\": {\\n        \\\"portMappings\\\": true\\n      }\\n    }\\n  ]\\n}\\n\", \"net-conf.json\": \"{\\n  \\\"Network\\\": \\\"10.244.0.0/16\\\",\\n  \\\"Backend\\\": {\\n    \\\"Type\\\": \\\"vxlan\\\"\\n  }\\n}\\n\"}, \"kind\": \"ConfigMap\", \"metadata\": {\"uid\": \"4ef5c17d-f11b-48c0-8ef6-141c37a30fd1\", \"name\": \"kube-flannel-cfg\", \"labels\": {\"app\": \"flannel\", \"tier\": \"node\"}, \"namespace\": \"kube-system\", \"annotations\": {\"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"data\\\":{\\\"cni-conf.json\\\":\\\"{\\\\n  \\\\\\\"name\\\\\\\": \\\\\\\"cbr0\\\\\\\",\\\\n  \\\\\\\"cniVersion\\\\\\\": \\\\\\\"0.3.1\\\\\\\",\\\\n  \\\\\\\"plugins\\\\\\\": [\\\\n    {\\\\n      \\\\\\\"type\\\\\\\": \\\\\\\"flannel\\\\\\\",\\\\n      \\\\\\\"delegate\\\\\\\": {\\\\n        \\\\\\\"hairpinMode\\\\\\\": true,\\\\n        \\\\\\\"isDefaultGateway\\\\\\\": true\\\\n      }\\\\n    },\\\\n    {\\\\n      \\\\\\\"type\\\\\\\": \\\\\\\"portmap\\\\\\\",\\\\n      \\\\\\\"capabilities\\\\\\\": {\\\\n        \\\\\\\"portMappings\\\\\\\": true\\\\n      }\\\\n    }\\\\n  ]\\\\n}\\\\n\\\",\\\"net-conf.json\\\":\\\"{\\\\n  \\\\\\\"Network\\\\\\\": \\\\\\\"10.244.0.0/16\\\\\\\",\\\\n  \\\\\\\"Backend\\\\\\\": {\\\\n    \\\\\\\"Type\\\\\\\": \\\\\\\"vxlan\\\\\\\"\\\\n  }\\\\n}\\\\n\\\"},\\\"kind\\\":\\\"ConfigMap\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"flannel\\\",\\\"tier\\\":\\\"node\\\"},\\\"name\\\":\\\"kube-flannel-cfg\\\",\\\"namespace\\\":\\\"kube-system\\\"}}\\n\"}, \"managedFields\": [{\"time\": \"2021-08-16T18:29:13Z\", \"manager\": \"kubectl\", \"fieldsV1\": {\"f:data\": {\".\": {}, \"f:cni-conf.json\": {}, \"f:net-conf.json\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:app\": {}, \"f:tier\": {}}, \"f:annotations\": {\".\": {}, \"f:kubectl.kubernetes.io/last-applied-configuration\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}], \"resourceVersion\": \"819\", \"creationTimestamp\": \"2021-08-16T18:29:13Z\"}, \"apiVersion\": \"v1\"}', '2021-08-17 02:29:13', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (847, 'istio-system', 'istiod-5b6d7d4cb5-lgv9m', '', 'v1', 'pods', 'Pod', '137981459', '5f6949d7-7b6a-4435-8469-95c4ec55606e', '317d4bcf-3068-4d5d-a4aa-fa2127521ed8', '97eb0e4dc85afa37f150', '{\"kind\": \"Pod\", \"spec\": {\"volumes\": [{\"name\": \"local-certs\", \"emptyDir\": {\"medium\": \"Memory\"}}, {\"name\": \"istio-token\", \"projected\": {\"sources\": [{\"serviceAccountToken\": {\"path\": \"istio-token\", \"audience\": \"istio-ca\", \"expirationSeconds\": 43200}}], \"defaultMode\": 420}}, {\"name\": \"cacerts\", \"secret\": {\"optional\": true, \"secretName\": \"cacerts\", \"defaultMode\": 420}}, {\"name\": \"istio-kubeconfig\", \"secret\": {\"optional\": true, \"secretName\": \"istio-kubeconfig\", \"defaultMode\": 420}}, {\"name\": \"kube-api-access-zh825\", \"projected\": {\"sources\": [{\"serviceAccountToken\": {\"path\": \"token\", \"expirationSeconds\": 3607}}, {\"configMap\": {\"name\": \"kube-root-ca.crt\", \"items\": [{\"key\": \"ca.crt\", \"path\": \"ca.crt\"}]}}, {\"downwardAPI\": {\"items\": [{\"path\": \"namespace\", \"fieldRef\": {\"fieldPath\": \"metadata.namespace\", \"apiVersion\": \"v1\"}}]}}], \"defaultMode\": 420}}], \"nodeName\": \"dsjs2\", \"priority\": 0, \"dnsPolicy\": \"ClusterFirst\", \"containers\": [{\"env\": [{\"name\": \"REVISION\", \"value\": \"default\"}, {\"name\": \"JWT_POLICY\", \"value\": \"third-party-jwt\"}, {\"name\": \"PILOT_CERT_PROVIDER\", \"value\": \"istiod\"}, {\"name\": \"POD_NAME\", \"valueFrom\": {\"fieldRef\": {\"fieldPath\": \"metadata.name\", \"apiVersion\": \"v1\"}}}, {\"name\": \"POD_NAMESPACE\", \"valueFrom\": {\"fieldRef\": {\"fieldPath\": \"metadata.namespace\", \"apiVersion\": \"v1\"}}}, {\"name\": \"SERVICE_ACCOUNT\", \"valueFrom\": {\"fieldRef\": {\"fieldPath\": \"spec.serviceAccountName\", \"apiVersion\": \"v1\"}}}, {\"name\": \"KUBECONFIG\", \"value\": \"/var/run/secrets/remote/config\"}, {\"name\": \"ENABLE_LEGACY_FSGROUP_INJECTION\", \"value\": \"false\"}, {\"name\": \"PILOT_TRACE_SAMPLING\", \"value\": \"1\"}, {\"name\": \"PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_OUTBOUND\", \"value\": \"true\"}, {\"name\": \"PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_INBOUND\", \"value\": \"true\"}, {\"name\": \"ISTIOD_ADDR\", \"value\": \"istiod.istio-system.svc:15012\"}, {\"name\": \"PILOT_ENABLE_ANALYSIS\", \"value\": \"false\"}, {\"name\": \"CLUSTER_ID\", \"value\": \"Kubernetes\"}], \"args\": [\"discovery\", \"--monitoringAddr=:15014\", \"--log_output_level=default:info\", \"--domain\", \"cluster.local\", \"--keepaliveMaxServerConnectionAge\", \"30m\"], \"name\": \"discovery\", \"image\": \"docker.io/istio/pilot:1.13.2\", \"ports\": [{\"protocol\": \"TCP\", \"containerPort\": 8080}, {\"protocol\": \"TCP\", \"containerPort\": 15010}, {\"protocol\": \"TCP\", \"containerPort\": 15017}], \"resources\": {\"requests\": {\"cpu\": \"500m\", \"memory\": \"2Gi\"}}, \"volumeMounts\": [{\"name\": \"istio-token\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/tokens\"}, {\"name\": \"local-certs\", \"mountPath\": \"/var/run/secrets/istio-dns\"}, {\"name\": \"cacerts\", \"readOnly\": true, \"mountPath\": \"/etc/cacerts\"}, {\"name\": \"istio-kubeconfig\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/remote\"}, {\"name\": \"kube-api-access-zh825\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\"}], \"readinessProbe\": {\"httpGet\": {\"path\": \"/ready\", \"port\": 8080, \"scheme\": \"HTTP\"}, \"periodSeconds\": 3, \"timeoutSeconds\": 5, \"failureThreshold\": 3, \"successThreshold\": 1, \"initialDelaySeconds\": 1}, \"imagePullPolicy\": \"IfNotPresent\", \"securityContext\": {\"runAsUser\": 1337, \"runAsGroup\": 1337, \"capabilities\": {\"drop\": [\"ALL\"]}, \"runAsNonRoot\": true, \"readOnlyRootFilesystem\": true, \"allowPrivilegeEscalation\": false}, \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"tolerations\": [{\"key\": \"node.kubernetes.io/not-ready\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}, {\"key\": \"node.kubernetes.io/unreachable\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}], \"restartPolicy\": \"Always\", \"schedulerName\": \"default-scheduler\", \"serviceAccount\": \"istiod\", \"securityContext\": {\"fsGroup\": 1337}, \"preemptionPolicy\": \"PreemptLowerPriority\", \"enableServiceLinks\": true, \"serviceAccountName\": \"istiod\", \"terminationGracePeriodSeconds\": 30}, \"status\": {\"phase\": \"Running\", \"podIP\": \"10.244.1.194\", \"hostIP\": \"172.17.70.145\", \"podIPs\": [{\"ip\": \"10.244.1.194\"}], \"qosClass\": \"Burstable\", \"startTime\": \"2022-05-19T05:16:07Z\", \"conditions\": [{\"type\": \"Initialized\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-05-19T05:16:07Z\"}, {\"type\": \"Ready\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-05-19T05:17:12Z\"}, {\"type\": \"ContainersReady\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-05-19T05:17:12Z\"}, {\"type\": \"PodScheduled\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-05-19T05:11:43Z\"}], \"containerStatuses\": [{\"name\": \"discovery\", \"image\": \"istio/pilot:1.13.2\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2022-05-19T05:17:11Z\"}}, \"imageID\": \"docker-pullable://istio/pilot@sha256:cc90f668a5a1d4645e1478134f9b0b89d8c908d48aa85ae87a3c4517931e9c17\", \"started\": true, \"lastState\": {}, \"containerID\": \"docker://e1e0d820ccd1d50f1b9f043edda1736f7c9712ad33f29fca7fc66980e32199ef\", \"restartCount\": 0}]}, \"metadata\": {\"uid\": \"317d4bcf-3068-4d5d-a4aa-fa2127521ed8\", \"name\": \"istiod-5b6d7d4cb5-lgv9m\", \"labels\": {\"app\": \"istiod\", \"istio\": \"pilot\", \"istio.io/rev\": \"default\", \"pod-template-hash\": \"5b6d7d4cb5\", \"sidecar.istio.io/inject\": \"false\", \"operator.istio.io/component\": \"Pilot\", \"install.operator.istio.io/owning-resource\": \"unknown\"}, \"namespace\": \"istio-system\", \"annotations\": {\"prometheus.io/port\": \"15014\", \"prometheus.io/scrape\": \"true\", \"sidecar.istio.io/inject\": \"false\"}, \"generateName\": \"istiod-5b6d7d4cb5-\", \"managedFields\": [{\"time\": \"2022-05-19T05:11:43Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:spec\": {\"f:volumes\": {\".\": {}, \"k:{\\\"name\\\":\\\"cacerts\\\"}\": {\".\": {}, \"f:name\": {}, \"f:secret\": {\".\": {}, \"f:optional\": {}, \"f:secretName\": {}, \"f:defaultMode\": {}}}, \"k:{\\\"name\\\":\\\"istio-token\\\"}\": {\".\": {}, \"f:name\": {}, \"f:projected\": {\".\": {}, \"f:sources\": {}, \"f:defaultMode\": {}}}, \"k:{\\\"name\\\":\\\"local-certs\\\"}\": {\".\": {}, \"f:name\": {}, \"f:emptyDir\": {\".\": {}, \"f:medium\": {}}}, \"k:{\\\"name\\\":\\\"istio-kubeconfig\\\"}\": {\".\": {}, \"f:name\": {}, \"f:secret\": {\".\": {}, \"f:optional\": {}, \"f:secretName\": {}, \"f:defaultMode\": {}}}}, \"f:dnsPolicy\": {}, \"f:containers\": {\"k:{\\\"name\\\":\\\"discovery\\\"}\": {\".\": {}, \"f:env\": {\".\": {}, \"k:{\\\"name\\\":\\\"POD_NAME\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:fieldRef\": {}}}, \"k:{\\\"name\\\":\\\"REVISION\\\"}\": {\".\": {}, \"f:name\": {}, \"f:value\": {}}, \"k:{\\\"name\\\":\\\"CLUSTER_ID\\\"}\": {\".\": {}, \"f:name\": {}, \"f:value\": {}}, \"k:{\\\"name\\\":\\\"JWT_POLICY\\\"}\": {\".\": {}, \"f:name\": {}, \"f:value\": {}}, \"k:{\\\"name\\\":\\\"KUBECONFIG\\\"}\": {\".\": {}, \"f:name\": {}, \"f:value\": {}}, \"k:{\\\"name\\\":\\\"ISTIOD_ADDR\\\"}\": {\".\": {}, \"f:name\": {}, \"f:value\": {}}, \"k:{\\\"name\\\":\\\"POD_NAMESPACE\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:fieldRef\": {}}}, \"k:{\\\"name\\\":\\\"SERVICE_ACCOUNT\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:fieldRef\": {}}}, \"k:{\\\"name\\\":\\\"PILOT_CERT_PROVIDER\\\"}\": {\".\": {}, \"f:name\": {}, \"f:value\": {}}, \"k:{\\\"name\\\":\\\"PILOT_TRACE_SAMPLING\\\"}\": {\".\": {}, \"f:name\": {}, \"f:value\": {}}, \"k:{\\\"name\\\":\\\"PILOT_ENABLE_ANALYSIS\\\"}\": {\".\": {}, \"f:name\": {}, \"f:value\": {}}, \"k:{\\\"name\\\":\\\"ENABLE_LEGACY_FSGROUP_INJECTION\\\"}\": {\".\": {}, \"f:name\": {}, \"f:value\": {}}, \"k:{\\\"name\\\":\\\"PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_INBOUND\\\"}\": {\".\": {}, \"f:name\": {}, \"f:value\": {}}, \"k:{\\\"name\\\":\\\"PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_OUTBOUND\\\"}\": {\".\": {}, \"f:name\": {}, \"f:value\": {}}}, \"f:args\": {}, \"f:name\": {}, \"f:image\": {}, \"f:ports\": {\".\": {}, \"k:{\\\"containerPort\\\":8080,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}, \"k:{\\\"containerPort\\\":15010,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}, \"k:{\\\"containerPort\\\":15017,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}}, \"f:resources\": {\".\": {}, \"f:requests\": {\".\": {}, \"f:cpu\": {}, \"f:memory\": {}}}, \"f:volumeMounts\": {\".\": {}, \"k:{\\\"mountPath\\\":\\\"/etc/cacerts\\\"}\": {\".\": {}, \"f:name\": {}, \"f:readOnly\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/var/run/secrets/remote\\\"}\": {\".\": {}, \"f:name\": {}, \"f:readOnly\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/var/run/secrets/tokens\\\"}\": {\".\": {}, \"f:name\": {}, \"f:readOnly\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/var/run/secrets/istio-dns\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}}, \"f:readinessProbe\": {\".\": {}, \"f:httpGet\": {\".\": {}, \"f:path\": {}, \"f:port\": {}, \"f:scheme\": {}}, \"f:periodSeconds\": {}, \"f:timeoutSeconds\": {}, \"f:failureThreshold\": {}, \"f:successThreshold\": {}, \"f:initialDelaySeconds\": {}}, \"f:imagePullPolicy\": {}, \"f:securityContext\": {\".\": {}, \"f:runAsUser\": {}, \"f:runAsGroup\": {}, \"f:capabilities\": {\".\": {}, \"f:drop\": {}}, \"f:runAsNonRoot\": {}, \"f:readOnlyRootFilesystem\": {}, \"f:allowPrivilegeEscalation\": {}}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:restartPolicy\": {}, \"f:schedulerName\": {}, \"f:serviceAccount\": {}, \"f:securityContext\": {\".\": {}, \"f:fsGroup\": {}}, \"f:enableServiceLinks\": {}, \"f:serviceAccountName\": {}, \"f:terminationGracePeriodSeconds\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:app\": {}, \"f:istio\": {}, \"f:istio.io/rev\": {}, \"f:pod-template-hash\": {}, \"f:sidecar.istio.io/inject\": {}, \"f:operator.istio.io/component\": {}, \"f:install.operator.istio.io/owning-resource\": {}}, \"f:annotations\": {\".\": {}, \"f:prometheus.io/port\": {}, \"f:prometheus.io/scrape\": {}, \"f:sidecar.istio.io/inject\": {}}, \"f:generateName\": {}, \"f:ownerReferences\": {\".\": {}, \"k:{\\\"uid\\\":\\\"5f6949d7-7b6a-4435-8469-95c4ec55606e\\\"}\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2022-05-19T05:12:48Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:status\": {\"f:phase\": {}, \"f:podIP\": {}, \"f:hostIP\": {}, \"f:podIPs\": {\".\": {}, \"k:{\\\"ip\\\":\\\"10.244.1.194\\\"}\": {\".\": {}, \"f:ip\": {}}}, \"f:startTime\": {}, \"f:conditions\": {\"k:{\\\"type\\\":\\\"Ready\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"Initialized\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"ContainersReady\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}, \"f:containerStatuses\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}], \"ownerReferences\": [{\"uid\": \"5f6949d7-7b6a-4435-8469-95c4ec55606e\", \"kind\": \"ReplicaSet\", \"name\": \"istiod-5b6d7d4cb5\", \"apiVersion\": \"apps/v1\", \"controller\": true, \"blockOwnerDeletion\": true}], \"resourceVersion\": \"137981459\", \"creationTimestamp\": \"2022-05-19T05:11:43Z\"}, \"apiVersion\": \"v1\"}', '2022-05-19 13:11:43', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (848, 'kube-system', 'etcd-dsjs', '', 'v1', 'pods', 'Pod', '31164094', 'f87a4d29-ccdc-452e-a510-ba5c16954185', 'a616515d-1c61-47f1-acba-db3916a17a2b', '9cbceea6499edab92296', '{\"kind\": \"Pod\", \"spec\": {\"volumes\": [{\"name\": \"etcd-certs\", \"hostPath\": {\"path\": \"/etc/kubernetes/pki/etcd\", \"type\": \"DirectoryOrCreate\"}}, {\"name\": \"etcd-data\", \"hostPath\": {\"path\": \"/var/lib/etcd\", \"type\": \"DirectoryOrCreate\"}}], \"nodeName\": \"dsjs\", \"priority\": 2000001000, \"dnsPolicy\": \"ClusterFirst\", \"containers\": [{\"name\": \"etcd\", \"image\": \"k8s.gcr.io/etcd:3.5.0-0\", \"command\": [\"etcd\", \"--advertise-client-urls=https://172.17.70.144:2379\", \"--cert-file=/etc/kubernetes/pki/etcd/server.crt\", \"--client-cert-auth=true\", \"--data-dir=/var/lib/etcd\", \"--initial-advertise-peer-urls=https://172.17.70.144:2380\", \"--initial-cluster=dsjs=https://172.17.70.144:2380\", \"--key-file=/etc/kubernetes/pki/etcd/server.key\", \"--listen-client-urls=https://127.0.0.1:2379,https://172.17.70.144:2379\", \"--listen-metrics-urls=http://127.0.0.1:2381\", \"--listen-peer-urls=https://172.17.70.144:2380\", \"--name=dsjs\", \"--peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt\", \"--peer-client-cert-auth=true\", \"--peer-key-file=/etc/kubernetes/pki/etcd/peer.key\", \"--peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt\", \"--snapshot-count=10000\", \"--trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt\"], \"resources\": {\"requests\": {\"cpu\": \"100m\", \"memory\": \"100Mi\"}}, \"startupProbe\": {\"httpGet\": {\"host\": \"127.0.0.1\", \"path\": \"/health\", \"port\": 2381, \"scheme\": \"HTTP\"}, \"periodSeconds\": 10, \"timeoutSeconds\": 15, \"failureThreshold\": 24, \"successThreshold\": 1, \"initialDelaySeconds\": 10}, \"volumeMounts\": [{\"name\": \"etcd-data\", \"mountPath\": \"/var/lib/etcd\"}, {\"name\": \"etcd-certs\", \"mountPath\": \"/etc/kubernetes/pki/etcd\"}], \"livenessProbe\": {\"httpGet\": {\"host\": \"127.0.0.1\", \"path\": \"/health\", \"port\": 2381, \"scheme\": \"HTTP\"}, \"periodSeconds\": 10, \"timeoutSeconds\": 15, \"failureThreshold\": 8, \"successThreshold\": 1, \"initialDelaySeconds\": 10}, \"imagePullPolicy\": \"IfNotPresent\", \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"hostNetwork\": true, \"tolerations\": [{\"effect\": \"NoExecute\", \"operator\": \"Exists\"}], \"restartPolicy\": \"Always\", \"schedulerName\": \"default-scheduler\", \"securityContext\": {\"seccompProfile\": {\"type\": \"RuntimeDefault\"}}, \"preemptionPolicy\": \"PreemptLowerPriority\", \"priorityClassName\": \"system-node-critical\", \"enableServiceLinks\": true, \"terminationGracePeriodSeconds\": 30}, \"status\": {\"phase\": \"Running\", \"podIP\": \"172.17.70.144\", \"hostIP\": \"172.17.70.144\", \"podIPs\": [{\"ip\": \"172.17.70.144\"}], \"qosClass\": \"Burstable\", \"startTime\": \"2021-08-30T08:32:23Z\", \"conditions\": [{\"type\": \"Initialized\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-08-30T08:32:23Z\"}, {\"type\": \"Ready\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-08-30T08:32:38Z\"}, {\"type\": \"ContainersReady\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-08-30T08:32:38Z\"}, {\"type\": \"PodScheduled\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-08-30T08:32:23Z\"}], \"containerStatuses\": [{\"name\": \"etcd\", \"image\": \"k8s.gcr.io/etcd:3.5.0-0\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2021-08-30T08:32:25Z\"}}, \"imageID\": \"docker-pullable://registry.aliyuncs.com/google_containers/etcd@sha256:9ce33ba33d8e738a5b85ed50b5080ac746deceed4a7496c550927a7a19ca3b6d\", \"started\": true, \"lastState\": {\"terminated\": {\"reason\": \"Error\", \"exitCode\": 255, \"startedAt\": \"2021-08-30T08:10:40Z\", \"finishedAt\": \"2021-08-30T08:32:18Z\", \"containerID\": \"docker://636ca793e042c81cdabc06f99b220129c5b93b7b514dd66754ab09878f154677\"}}, \"containerID\": \"docker://a004ad31b8e79cd85f07f3179ce7fd2f1e07f13c796de4fca5717582e7692078\", \"restartCount\": 6}]}, \"metadata\": {\"uid\": \"a616515d-1c61-47f1-acba-db3916a17a2b\", \"name\": \"etcd-dsjs\", \"labels\": {\"tier\": \"control-plane\", \"component\": \"etcd\"}, \"namespace\": \"kube-system\", \"annotations\": {\"kubernetes.io/config.hash\": \"a868b0bd8a6c97e3e6121c959049d959\", \"kubernetes.io/config.seen\": \"2021-08-17T02:24:55.405401022+08:00\", \"kubernetes.io/config.mirror\": \"a868b0bd8a6c97e3e6121c959049d959\", \"kubernetes.io/config.source\": \"file\", \"seccomp.security.alpha.kubernetes.io/pod\": \"runtime/default\", \"kubeadm.kubernetes.io/etcd.advertise-client-urls\": \"https://172.17.70.144:2379\"}, \"managedFields\": [{\"time\": \"2021-08-16T18:24:56Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:spec\": {\"f:volumes\": {\".\": {}, \"k:{\\\"name\\\":\\\"etcd-data\\\"}\": {\".\": {}, \"f:name\": {}, \"f:hostPath\": {\".\": {}, \"f:path\": {}, \"f:type\": {}}}, \"k:{\\\"name\\\":\\\"etcd-certs\\\"}\": {\".\": {}, \"f:name\": {}, \"f:hostPath\": {\".\": {}, \"f:path\": {}, \"f:type\": {}}}}, \"f:nodeName\": {}, \"f:dnsPolicy\": {}, \"f:containers\": {\"k:{\\\"name\\\":\\\"etcd\\\"}\": {\".\": {}, \"f:name\": {}, \"f:image\": {}, \"f:command\": {}, \"f:resources\": {\".\": {}, \"f:requests\": {\".\": {}, \"f:cpu\": {}, \"f:memory\": {}}}, \"f:startupProbe\": {\".\": {}, \"f:httpGet\": {\".\": {}, \"f:host\": {}, \"f:path\": {}, \"f:port\": {}, \"f:scheme\": {}}, \"f:periodSeconds\": {}, \"f:timeoutSeconds\": {}, \"f:failureThreshold\": {}, \"f:successThreshold\": {}, \"f:initialDelaySeconds\": {}}, \"f:volumeMounts\": {\".\": {}, \"k:{\\\"mountPath\\\":\\\"/var/lib/etcd\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/etc/kubernetes/pki/etcd\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}}, \"f:livenessProbe\": {\".\": {}, \"f:httpGet\": {\".\": {}, \"f:host\": {}, \"f:path\": {}, \"f:port\": {}, \"f:scheme\": {}}, \"f:periodSeconds\": {}, \"f:timeoutSeconds\": {}, \"f:failureThreshold\": {}, \"f:successThreshold\": {}, \"f:initialDelaySeconds\": {}}, \"f:imagePullPolicy\": {}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:hostNetwork\": {}, \"f:tolerations\": {}, \"f:restartPolicy\": {}, \"f:schedulerName\": {}, \"f:securityContext\": {\".\": {}, \"f:seccompProfile\": {\".\": {}, \"f:type\": {}}}, \"f:priorityClassName\": {}, \"f:enableServiceLinks\": {}, \"f:terminationGracePeriodSeconds\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:tier\": {}, \"f:component\": {}}, \"f:annotations\": {\".\": {}, \"f:kubernetes.io/config.hash\": {}, \"f:kubernetes.io/config.seen\": {}, \"f:kubernetes.io/config.mirror\": {}, \"f:kubernetes.io/config.source\": {}, \"f:kubeadm.kubernetes.io/etcd.advertise-client-urls\": {}}, \"f:ownerReferences\": {\".\": {}, \"k:{\\\"uid\\\":\\\"f87a4d29-ccdc-452e-a510-ba5c16954185\\\"}\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2021-08-16T18:25:15Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:status\": {\"f:phase\": {}, \"f:podIP\": {}, \"f:hostIP\": {}, \"f:podIPs\": {\".\": {}, \"k:{\\\"ip\\\":\\\"172.17.70.144\\\"}\": {\".\": {}, \"f:ip\": {}}}, \"f:startTime\": {}, \"f:conditions\": {\".\": {}, \"k:{\\\"type\\\":\\\"Ready\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"Initialized\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"PodScheduled\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"ContainersReady\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}, \"f:containerStatuses\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}], \"ownerReferences\": [{\"uid\": \"f87a4d29-ccdc-452e-a510-ba5c16954185\", \"kind\": \"Node\", \"name\": \"dsjs\", \"apiVersion\": \"v1\", \"controller\": true}], \"resourceVersion\": \"31164094\", \"creationTimestamp\": \"2021-08-16T18:24:56Z\"}, \"apiVersion\": \"v1\"}', '2021-08-17 02:24:56', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (849, 'kube-system', 'test-scheduling-78878d7d67-z7kzh', '', 'v1', 'pods', 'Pod', '119987186', '4783d334-6dc8-4092-bde8-3902a9a4be96', 'fb4fc3b7-fb9b-4291-9c5e-706d39aace68', 'd58299c9ed50d97c18e5', '{\"kind\": \"Pod\", \"spec\": {\"volumes\": [{\"name\": \"config\", \"configMap\": {\"name\": \"test-scheduling-config\", \"defaultMode\": 420}}, {\"name\": \"app\", \"hostPath\": {\"path\": \"/home/shenyi/schedular\", \"type\": \"\"}}, {\"name\": \"kube-api-access-cmxhg\", \"projected\": {\"sources\": [{\"serviceAccountToken\": {\"path\": \"token\", \"expirationSeconds\": 3607}}, {\"configMap\": {\"name\": \"kube-root-ca.crt\", \"items\": [{\"key\": \"ca.crt\", \"path\": \"ca.crt\"}]}}, {\"downwardAPI\": {\"items\": [{\"path\": \"namespace\", \"fieldRef\": {\"fieldPath\": \"metadata.namespace\", \"apiVersion\": \"v1\"}}]}}], \"defaultMode\": 420}}], \"nodeName\": \"dsjs\", \"priority\": 0, \"dnsPolicy\": \"ClusterFirst\", \"containers\": [{\"args\": [\"--config=/etc/kubernetes/config.yaml\", \"--v=3\"], \"name\": \"tests-cheduling\", \"image\": \"alpine:3.12\", \"command\": [\"/app/test-scheduling\"], \"resources\": {}, \"volumeMounts\": [{\"name\": \"config\", \"mountPath\": \"/etc/kubernetes\"}, {\"name\": \"app\", \"mountPath\": \"/app\"}, {\"name\": \"kube-api-access-cmxhg\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\"}], \"imagePullPolicy\": \"IfNotPresent\", \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"tolerations\": [{\"key\": \"node.kubernetes.io/not-ready\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}, {\"key\": \"node.kubernetes.io/unreachable\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}], \"restartPolicy\": \"Always\", \"schedulerName\": \"default-scheduler\", \"serviceAccount\": \"test-scheduling-sa\", \"securityContext\": {}, \"preemptionPolicy\": \"PreemptLowerPriority\", \"enableServiceLinks\": true, \"serviceAccountName\": \"test-scheduling-sa\", \"terminationGracePeriodSeconds\": 30}, \"status\": {\"phase\": \"Running\", \"podIP\": \"10.244.0.79\", \"hostIP\": \"172.17.70.144\", \"podIPs\": [{\"ip\": \"10.244.0.79\"}], \"qosClass\": \"BestEffort\", \"startTime\": \"2022-02-21T16:51:33Z\", \"conditions\": [{\"type\": \"Initialized\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-02-21T16:51:33Z\"}, {\"type\": \"Ready\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-02-21T16:51:34Z\"}, {\"type\": \"ContainersReady\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-02-21T16:51:34Z\"}, {\"type\": \"PodScheduled\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-02-21T16:51:33Z\"}], \"containerStatuses\": [{\"name\": \"tests-cheduling\", \"image\": \"alpine:3.12\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2022-02-21T16:51:34Z\"}}, \"imageID\": \"docker-pullable://alpine@sha256:c0e9560cda118f9ec63ddefb4a173a2b2a0347082d7dff7dc14272e7841a5b5a\", \"started\": true, \"lastState\": {}, \"containerID\": \"docker://8cb26d9bc4d71c7b1ccd8b3f88f9f504a4b455fb8d08ccf11f6752c721b0deca\", \"restartCount\": 0}]}, \"metadata\": {\"uid\": \"fb4fc3b7-fb9b-4291-9c5e-706d39aace68\", \"name\": \"test-scheduling-78878d7d67-z7kzh\", \"labels\": {\"app\": \"test-scheduling\", \"pod-template-hash\": \"78878d7d67\"}, \"namespace\": \"kube-system\", \"generateName\": \"test-scheduling-78878d7d67-\", \"managedFields\": [{\"time\": \"2022-02-21T16:51:33Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:spec\": {\"f:volumes\": {\".\": {}, \"k:{\\\"name\\\":\\\"app\\\"}\": {\".\": {}, \"f:name\": {}, \"f:hostPath\": {\".\": {}, \"f:path\": {}, \"f:type\": {}}}, \"k:{\\\"name\\\":\\\"config\\\"}\": {\".\": {}, \"f:name\": {}, \"f:configMap\": {\".\": {}, \"f:name\": {}, \"f:defaultMode\": {}}}}, \"f:nodeName\": {}, \"f:dnsPolicy\": {}, \"f:containers\": {\"k:{\\\"name\\\":\\\"tests-cheduling\\\"}\": {\".\": {}, \"f:args\": {}, \"f:name\": {}, \"f:image\": {}, \"f:command\": {}, \"f:resources\": {}, \"f:volumeMounts\": {\".\": {}, \"k:{\\\"mountPath\\\":\\\"/app\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/etc/kubernetes\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}}, \"f:imagePullPolicy\": {}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:restartPolicy\": {}, \"f:schedulerName\": {}, \"f:serviceAccount\": {}, \"f:securityContext\": {}, \"f:enableServiceLinks\": {}, \"f:serviceAccountName\": {}, \"f:terminationGracePeriodSeconds\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:app\": {}, \"f:pod-template-hash\": {}}, \"f:generateName\": {}, \"f:ownerReferences\": {\".\": {}, \"k:{\\\"uid\\\":\\\"4783d334-6dc8-4092-bde8-3902a9a4be96\\\"}\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2022-02-21T16:51:34Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:status\": {\"f:phase\": {}, \"f:podIP\": {}, \"f:hostIP\": {}, \"f:podIPs\": {\".\": {}, \"k:{\\\"ip\\\":\\\"10.244.0.79\\\"}\": {\".\": {}, \"f:ip\": {}}}, \"f:startTime\": {}, \"f:conditions\": {\".\": {}, \"k:{\\\"type\\\":\\\"Ready\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"Initialized\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"PodScheduled\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"ContainersReady\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}, \"f:containerStatuses\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}], \"ownerReferences\": [{\"uid\": \"4783d334-6dc8-4092-bde8-3902a9a4be96\", \"kind\": \"ReplicaSet\", \"name\": \"test-scheduling-78878d7d67\", \"apiVersion\": \"apps/v1\", \"controller\": true, \"blockOwnerDeletion\": true}], \"resourceVersion\": \"119987186\", \"creationTimestamp\": \"2022-02-21T16:51:33Z\"}, \"apiVersion\": \"v1\"}', '2022-02-22 00:51:33', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (850, 'default', 'gateway', '', 'v1', 'pods', 'Pod', '133923101', '', '4736b818-ca0b-4080-8abd-611a1b7b702e', 'fb79df28e7b97608f38f', '{\"kind\": \"Pod\", \"spec\": {\"volumes\": [{\"name\": \"envoyconfig\", \"hostPath\": {\"path\": \"/home/shenyi/istio2/gateway\", \"type\": \"\"}}, {\"name\": \"kube-api-access-f772s\", \"projected\": {\"sources\": [{\"serviceAccountToken\": {\"path\": \"token\", \"expirationSeconds\": 3607}}, {\"configMap\": {\"name\": \"kube-root-ca.crt\", \"items\": [{\"key\": \"ca.crt\", \"path\": \"ca.crt\"}]}}, {\"downwardAPI\": {\"items\": [{\"path\": \"namespace\", \"fieldRef\": {\"fieldPath\": \"metadata.namespace\", \"apiVersion\": \"v1\"}}]}}], \"defaultMode\": 420}}], \"nodeName\": \"dsjs\", \"priority\": 0, \"dnsPolicy\": \"ClusterFirst\", \"containers\": [{\"name\": \"envoyproxy\", \"image\": \"envoyproxy/envoy-alpine:v1.21.0\", \"ports\": [{\"protocol\": \"TCP\", \"containerPort\": 8080}], \"resources\": {}, \"volumeMounts\": [{\"name\": \"envoyconfig\", \"mountPath\": \"/etc/envoy/\"}, {\"name\": \"kube-api-access-f772s\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\"}], \"imagePullPolicy\": \"IfNotPresent\", \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"tolerations\": [{\"key\": \"node.kubernetes.io/not-ready\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}, {\"key\": \"node.kubernetes.io/unreachable\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}], \"restartPolicy\": \"Always\", \"schedulerName\": \"default-scheduler\", \"serviceAccount\": \"default\", \"securityContext\": {}, \"preemptionPolicy\": \"PreemptLowerPriority\", \"enableServiceLinks\": true, \"serviceAccountName\": \"default\", \"terminationGracePeriodSeconds\": 30}, \"status\": {\"phase\": \"Running\", \"podIP\": \"10.244.0.187\", \"hostIP\": \"172.17.70.144\", \"podIPs\": [{\"ip\": \"10.244.0.187\"}], \"qosClass\": \"BestEffort\", \"startTime\": \"2022-04-29T16:31:23Z\", \"conditions\": [{\"type\": \"Initialized\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-04-29T16:31:23Z\"}, {\"type\": \"Ready\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-04-29T16:31:24Z\"}, {\"type\": \"ContainersReady\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-04-29T16:31:24Z\"}, {\"type\": \"PodScheduled\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-04-29T16:31:23Z\"}], \"containerStatuses\": [{\"name\": \"envoyproxy\", \"image\": \"envoyproxy/envoy-alpine:v1.21.0\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2022-04-29T16:31:24Z\"}}, \"imageID\": \"docker-pullable://envoyproxy/envoy-alpine@sha256:9e8e3f13bf6132358577370a1faf079779b9bb3077f76e938464db029f65abdc\", \"started\": true, \"lastState\": {}, \"containerID\": \"docker://9394c45a285a7f38cbc90eac700320eba736c7f6ecc5b5a4a9af312ea4dce492\", \"restartCount\": 0}]}, \"metadata\": {\"uid\": \"4736b818-ca0b-4080-8abd-611a1b7b702e\", \"name\": \"gateway\", \"labels\": {\"app\": \"gateway\"}, \"namespace\": \"default\", \"annotations\": {\"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Pod\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"gateway\\\"},\\\"name\\\":\\\"gateway\\\",\\\"namespace\\\":\\\"default\\\"},\\\"spec\\\":{\\\"containers\\\":[{\\\"image\\\":\\\"envoyproxy/envoy-alpine:v1.21.0\\\",\\\"imagePullPolicy\\\":\\\"IfNotPresent\\\",\\\"name\\\":\\\"envoyproxy\\\",\\\"ports\\\":[{\\\"containerPort\\\":8080}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/etc/envoy/\\\",\\\"name\\\":\\\"envoyconfig\\\"}]}],\\\"nodeName\\\":\\\"dsjs\\\",\\\"volumes\\\":[{\\\"hostPath\\\":{\\\"path\\\":\\\"/home/shenyi/istio2/gateway\\\"},\\\"name\\\":\\\"envoyconfig\\\"}]}}\\n\"}, \"managedFields\": [{\"time\": \"2022-04-29T16:31:23Z\", \"manager\": \"kubectl-client-side-apply\", \"fieldsV1\": {\"f:spec\": {\"f:volumes\": {\".\": {}, \"k:{\\\"name\\\":\\\"envoyconfig\\\"}\": {\".\": {}, \"f:name\": {}, \"f:hostPath\": {\".\": {}, \"f:path\": {}, \"f:type\": {}}}}, \"f:nodeName\": {}, \"f:dnsPolicy\": {}, \"f:containers\": {\"k:{\\\"name\\\":\\\"envoyproxy\\\"}\": {\".\": {}, \"f:name\": {}, \"f:image\": {}, \"f:ports\": {\".\": {}, \"k:{\\\"containerPort\\\":8080,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}}, \"f:resources\": {}, \"f:volumeMounts\": {\".\": {}, \"k:{\\\"mountPath\\\":\\\"/etc/envoy/\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}}, \"f:imagePullPolicy\": {}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:restartPolicy\": {}, \"f:schedulerName\": {}, \"f:securityContext\": {}, \"f:enableServiceLinks\": {}, \"f:terminationGracePeriodSeconds\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:app\": {}}, \"f:annotations\": {\".\": {}, \"f:kubectl.kubernetes.io/last-applied-configuration\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2022-04-29T16:31:24Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:status\": {\"f:phase\": {}, \"f:podIP\": {}, \"f:hostIP\": {}, \"f:podIPs\": {\".\": {}, \"k:{\\\"ip\\\":\\\"10.244.0.187\\\"}\": {\".\": {}, \"f:ip\": {}}}, \"f:startTime\": {}, \"f:conditions\": {\".\": {}, \"k:{\\\"type\\\":\\\"Ready\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"Initialized\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"PodScheduled\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"ContainersReady\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}, \"f:containerStatuses\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}], \"resourceVersion\": \"133923101\", \"creationTimestamp\": \"2022-04-29T16:31:23Z\"}, \"apiVersion\": \"v1\"}', '2022-04-30 00:31:23', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (851, 'kube-system', 'kube-apiserver-dsjs', '', 'v1', 'pods', 'Pod', '155165796', 'f87a4d29-ccdc-452e-a510-ba5c16954185', '0d19a61d-f566-44f4-9077-3b35943d4b4d', 'a9ff59415d989f7c9629', '{\"kind\": \"Pod\", \"spec\": {\"volumes\": [{\"name\": \"ca-certs\", \"hostPath\": {\"path\": \"/etc/ssl/certs\", \"type\": \"DirectoryOrCreate\"}}, {\"name\": \"etc-pki\", \"hostPath\": {\"path\": \"/etc/pki\", \"type\": \"DirectoryOrCreate\"}}, {\"name\": \"k8s-certs\", \"hostPath\": {\"path\": \"/etc/kubernetes/pki\", \"type\": \"DirectoryOrCreate\"}}], \"nodeName\": \"dsjs\", \"priority\": 2000001000, \"dnsPolicy\": \"ClusterFirst\", \"containers\": [{\"name\": \"kube-apiserver\", \"image\": \"k8s.gcr.io/kube-apiserver:v1.22.0\", \"command\": [\"kube-apiserver\", \"--advertise-address=172.17.70.144\", \"--allow-privileged=true\", \"--authorization-mode=Node,RBAC\", \"--client-ca-file=/etc/kubernetes/pki/ca.crt\", \"--enable-admission-plugins=NodeRestriction\", \"--enable-bootstrap-token-auth=true\", \"--etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt\", \"--etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt\", \"--etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key\", \"--etcd-servers=https://127.0.0.1:2379\", \"--kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt\", \"--kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key\", \"--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname\", \"--proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt\", \"--proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key\", \"--requestheader-allowed-names=front-proxy-client\", \"--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt\", \"--requestheader-extra-headers-prefix=X-Remote-Extra-\", \"--requestheader-group-headers=X-Remote-Group\", \"--requestheader-username-headers=X-Remote-User\", \"--secure-port=6443\", \"--service-account-issuer=https://kubernetes.default.svc.cluster.local\", \"--service-account-key-file=/etc/kubernetes/pki/sa.pub\", \"--service-account-signing-key-file=/etc/kubernetes/pki/sa.key\", \"--service-cluster-ip-range=10.96.0.0/12\", \"--tls-cert-file=/etc/kubernetes/pki/apiserver.crt\", \"--tls-private-key-file=/etc/kubernetes/pki/apiserver.key\"], \"resources\": {\"requests\": {\"cpu\": \"250m\"}}, \"startupProbe\": {\"httpGet\": {\"host\": \"172.17.70.144\", \"path\": \"/livez\", \"port\": 6443, \"scheme\": \"HTTPS\"}, \"periodSeconds\": 10, \"timeoutSeconds\": 15, \"failureThreshold\": 24, \"successThreshold\": 1, \"initialDelaySeconds\": 10}, \"volumeMounts\": [{\"name\": \"ca-certs\", \"readOnly\": true, \"mountPath\": \"/etc/ssl/certs\"}, {\"name\": \"etc-pki\", \"readOnly\": true, \"mountPath\": \"/etc/pki\"}, {\"name\": \"k8s-certs\", \"readOnly\": true, \"mountPath\": \"/etc/kubernetes/pki\"}], \"livenessProbe\": {\"httpGet\": {\"host\": \"172.17.70.144\", \"path\": \"/livez\", \"port\": 6443, \"scheme\": \"HTTPS\"}, \"periodSeconds\": 10, \"timeoutSeconds\": 15, \"failureThreshold\": 8, \"successThreshold\": 1, \"initialDelaySeconds\": 10}, \"readinessProbe\": {\"httpGet\": {\"host\": \"172.17.70.144\", \"path\": \"/readyz\", \"port\": 6443, \"scheme\": \"HTTPS\"}, \"periodSeconds\": 1, \"timeoutSeconds\": 15, \"failureThreshold\": 3, \"successThreshold\": 1}, \"imagePullPolicy\": \"IfNotPresent\", \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"hostNetwork\": true, \"tolerations\": [{\"effect\": \"NoExecute\", \"operator\": \"Exists\"}], \"restartPolicy\": \"Always\", \"schedulerName\": \"default-scheduler\", \"securityContext\": {\"seccompProfile\": {\"type\": \"RuntimeDefault\"}}, \"preemptionPolicy\": \"PreemptLowerPriority\", \"priorityClassName\": \"system-node-critical\", \"enableServiceLinks\": true, \"terminationGracePeriodSeconds\": 30}, \"status\": {\"phase\": \"Running\", \"podIP\": \"172.17.70.144\", \"hostIP\": \"172.17.70.144\", \"podIPs\": [{\"ip\": \"172.17.70.144\"}], \"qosClass\": \"Burstable\", \"startTime\": \"2021-08-30T08:32:24Z\", \"conditions\": [{\"type\": \"Initialized\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-08-30T08:32:24Z\"}, {\"type\": \"Ready\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-08-17T09:59:02Z\"}, {\"type\": \"ContainersReady\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-08-17T09:59:02Z\"}, {\"type\": \"PodScheduled\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-08-30T08:32:24Z\"}], \"containerStatuses\": [{\"name\": \"kube-apiserver\", \"image\": \"k8s.gcr.io/kube-apiserver:v1.22.0\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2022-08-10T09:33:04Z\"}}, \"imageID\": \"docker-pullable://registry.aliyuncs.com/google_containers/kube-apiserver@sha256:787cb30c5957bdb165814d35d501e27ed9962a1bb07718584f703c930b46ffc3\", \"started\": true, \"lastState\": {\"terminated\": {\"reason\": \"Error\", \"exitCode\": 2, \"startedAt\": \"2022-08-09T15:50:37Z\", \"finishedAt\": \"2022-08-10T09:33:03Z\", \"containerID\": \"docker://f469c1473e01edcccd5600ba1844faffdd20996f701b0ed7566ca616b44ef164\"}}, \"containerID\": \"docker://309c8fb8db24606659b356bca0c04fcd87b616498013e04c4312a5778a10fb37\", \"restartCount\": 27}]}, \"metadata\": {\"uid\": \"0d19a61d-f566-44f4-9077-3b35943d4b4d\", \"name\": \"kube-apiserver-dsjs\", \"labels\": {\"tier\": \"control-plane\", \"component\": \"kube-apiserver\"}, \"namespace\": \"kube-system\", \"annotations\": {\"kubernetes.io/config.hash\": \"7e126a4b83a2a08f77c5bb288ad84391\", \"kubernetes.io/config.seen\": \"2021-08-17T02:24:55.405403639+08:00\", \"kubernetes.io/config.mirror\": \"7e126a4b83a2a08f77c5bb288ad84391\", \"kubernetes.io/config.source\": \"file\", \"seccomp.security.alpha.kubernetes.io/pod\": \"runtime/default\", \"kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint\": \"172.17.70.144:6443\"}, \"managedFields\": [{\"time\": \"2021-08-16T18:24:56Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:spec\": {\"f:volumes\": {\".\": {}, \"k:{\\\"name\\\":\\\"etc-pki\\\"}\": {\".\": {}, \"f:name\": {}, \"f:hostPath\": {\".\": {}, \"f:path\": {}, \"f:type\": {}}}, \"k:{\\\"name\\\":\\\"ca-certs\\\"}\": {\".\": {}, \"f:name\": {}, \"f:hostPath\": {\".\": {}, \"f:path\": {}, \"f:type\": {}}}, \"k:{\\\"name\\\":\\\"k8s-certs\\\"}\": {\".\": {}, \"f:name\": {}, \"f:hostPath\": {\".\": {}, \"f:path\": {}, \"f:type\": {}}}}, \"f:nodeName\": {}, \"f:dnsPolicy\": {}, \"f:containers\": {\"k:{\\\"name\\\":\\\"kube-apiserver\\\"}\": {\".\": {}, \"f:name\": {}, \"f:image\": {}, \"f:command\": {}, \"f:resources\": {\".\": {}, \"f:requests\": {\".\": {}, \"f:cpu\": {}}}, \"f:startupProbe\": {\".\": {}, \"f:httpGet\": {\".\": {}, \"f:host\": {}, \"f:path\": {}, \"f:port\": {}, \"f:scheme\": {}}, \"f:periodSeconds\": {}, \"f:timeoutSeconds\": {}, \"f:failureThreshold\": {}, \"f:successThreshold\": {}, \"f:initialDelaySeconds\": {}}, \"f:volumeMounts\": {\".\": {}, \"k:{\\\"mountPath\\\":\\\"/etc/pki\\\"}\": {\".\": {}, \"f:name\": {}, \"f:readOnly\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/etc/ssl/certs\\\"}\": {\".\": {}, \"f:name\": {}, \"f:readOnly\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/etc/kubernetes/pki\\\"}\": {\".\": {}, \"f:name\": {}, \"f:readOnly\": {}, \"f:mountPath\": {}}}, \"f:livenessProbe\": {\".\": {}, \"f:httpGet\": {\".\": {}, \"f:host\": {}, \"f:path\": {}, \"f:port\": {}, \"f:scheme\": {}}, \"f:periodSeconds\": {}, \"f:timeoutSeconds\": {}, \"f:failureThreshold\": {}, \"f:successThreshold\": {}, \"f:initialDelaySeconds\": {}}, \"f:readinessProbe\": {\".\": {}, \"f:httpGet\": {\".\": {}, \"f:host\": {}, \"f:path\": {}, \"f:port\": {}, \"f:scheme\": {}}, \"f:periodSeconds\": {}, \"f:timeoutSeconds\": {}, \"f:failureThreshold\": {}, \"f:successThreshold\": {}}, \"f:imagePullPolicy\": {}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:hostNetwork\": {}, \"f:tolerations\": {}, \"f:restartPolicy\": {}, \"f:schedulerName\": {}, \"f:securityContext\": {\".\": {}, \"f:seccompProfile\": {\".\": {}, \"f:type\": {}}}, \"f:priorityClassName\": {}, \"f:enableServiceLinks\": {}, \"f:terminationGracePeriodSeconds\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:tier\": {}, \"f:component\": {}}, \"f:annotations\": {\".\": {}, \"f:kubernetes.io/config.hash\": {}, \"f:kubernetes.io/config.seen\": {}, \"f:kubernetes.io/config.mirror\": {}, \"f:kubernetes.io/config.source\": {}, \"f:kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint\": {}}, \"f:ownerReferences\": {\".\": {}, \"k:{\\\"uid\\\":\\\"f87a4d29-ccdc-452e-a510-ba5c16954185\\\"}\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2022-08-10T09:33:15Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:status\": {\"f:phase\": {}, \"f:podIP\": {}, \"f:hostIP\": {}, \"f:podIPs\": {\".\": {}, \"k:{\\\"ip\\\":\\\"172.17.70.144\\\"}\": {\".\": {}, \"f:ip\": {}}}, \"f:startTime\": {}, \"f:conditions\": {\".\": {}, \"k:{\\\"type\\\":\\\"Ready\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"Initialized\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"PodScheduled\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"ContainersReady\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}, \"f:containerStatuses\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}], \"ownerReferences\": [{\"uid\": \"f87a4d29-ccdc-452e-a510-ba5c16954185\", \"kind\": \"Node\", \"name\": \"dsjs\", \"apiVersion\": \"v1\", \"controller\": true}], \"resourceVersion\": \"155165796\", \"creationTimestamp\": \"2021-08-16T18:24:56Z\"}, \"apiVersion\": \"v1\"}', '2021-08-17 02:24:56', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (852, 'argocd', 'argocd-redis-5b6967fdfc-lbqzw', '', 'v1', 'pods', 'Pod', '31177628', '3f32dfac-8b2a-4b7a-8db0-7eff8339ff6d', 'd0ac394d-4bad-4418-88b3-2d74c45b9513', '0f688e5af911db6408f6', '{\"kind\": \"Pod\", \"spec\": {\"volumes\": [{\"name\": \"kube-api-access-vzfh9\", \"projected\": {\"sources\": [{\"serviceAccountToken\": {\"path\": \"token\", \"expirationSeconds\": 3607}}, {\"configMap\": {\"name\": \"kube-root-ca.crt\", \"items\": [{\"key\": \"ca.crt\", \"path\": \"ca.crt\"}]}}, {\"downwardAPI\": {\"items\": [{\"path\": \"namespace\", \"fieldRef\": {\"fieldPath\": \"metadata.namespace\", \"apiVersion\": \"v1\"}}]}}], \"defaultMode\": 420}}], \"affinity\": {\"podAntiAffinity\": {\"preferredDuringSchedulingIgnoredDuringExecution\": [{\"weight\": 100, \"podAffinityTerm\": {\"topologyKey\": \"kubernetes.io/hostname\", \"labelSelector\": {\"matchLabels\": {\"app.kubernetes.io/name\": \"argocd-redis\"}}}}, {\"weight\": 5, \"podAffinityTerm\": {\"topologyKey\": \"kubernetes.io/hostname\", \"labelSelector\": {\"matchLabels\": {\"app.kubernetes.io/part-of\": \"argocd\"}}}}]}}, \"nodeName\": \"dsjs\", \"priority\": 0, \"dnsPolicy\": \"ClusterFirst\", \"containers\": [{\"args\": [\"--save\", \"\", \"--appendonly\", \"no\"], \"name\": \"redis\", \"image\": \"redis:6.2.4-alpine\", \"ports\": [{\"protocol\": \"TCP\", \"containerPort\": 6379}], \"resources\": {}, \"volumeMounts\": [{\"name\": \"kube-api-access-vzfh9\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\"}], \"imagePullPolicy\": \"Always\", \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"tolerations\": [{\"key\": \"node.kubernetes.io/not-ready\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}, {\"key\": \"node.kubernetes.io/unreachable\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}], \"restartPolicy\": \"Always\", \"schedulerName\": \"default-scheduler\", \"serviceAccount\": \"argocd-redis\", \"securityContext\": {\"runAsUser\": 999, \"runAsNonRoot\": true}, \"preemptionPolicy\": \"PreemptLowerPriority\", \"enableServiceLinks\": true, \"serviceAccountName\": \"argocd-redis\", \"terminationGracePeriodSeconds\": 30}, \"status\": {\"phase\": \"Running\", \"podIP\": \"10.244.0.124\", \"hostIP\": \"172.17.70.144\", \"podIPs\": [{\"ip\": \"10.244.0.124\"}], \"qosClass\": \"BestEffort\", \"startTime\": \"2021-10-15T10:23:24Z\", \"conditions\": [{\"type\": \"Initialized\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-10-15T10:23:24Z\"}, {\"type\": \"Ready\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-10-15T10:24:13Z\"}, {\"type\": \"ContainersReady\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-10-15T10:24:13Z\"}, {\"type\": \"PodScheduled\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-10-15T10:23:24Z\"}], \"containerStatuses\": [{\"name\": \"redis\", \"image\": \"redis:6.2.4-alpine\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2021-10-15T10:24:12Z\"}}, \"imageID\": \"docker-pullable://redis@sha256:0039796b887fd30e460353f14e46ba1004152aa97f5f59094cc21eac445fc89b\", \"started\": true, \"lastState\": {}, \"containerID\": \"docker://ed7d165ec481b61db264b5687a45315f5ae50de9e08453a6dabc81d4e68da508\", \"restartCount\": 0}]}, \"metadata\": {\"uid\": \"d0ac394d-4bad-4418-88b3-2d74c45b9513\", \"name\": \"argocd-redis-5b6967fdfc-lbqzw\", \"labels\": {\"pod-template-hash\": \"5b6967fdfc\", \"app.kubernetes.io/name\": \"argocd-redis\"}, \"namespace\": \"argocd\", \"generateName\": \"argocd-redis-5b6967fdfc-\", \"managedFields\": [{\"time\": \"2021-10-15T10:23:24Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:spec\": {\"f:affinity\": {\".\": {}, \"f:podAntiAffinity\": {\".\": {}, \"f:preferredDuringSchedulingIgnoredDuringExecution\": {}}}, \"f:dnsPolicy\": {}, \"f:containers\": {\"k:{\\\"name\\\":\\\"redis\\\"}\": {\".\": {}, \"f:args\": {}, \"f:name\": {}, \"f:image\": {}, \"f:ports\": {\".\": {}, \"k:{\\\"containerPort\\\":6379,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}}, \"f:resources\": {}, \"f:imagePullPolicy\": {}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:restartPolicy\": {}, \"f:schedulerName\": {}, \"f:serviceAccount\": {}, \"f:securityContext\": {\".\": {}, \"f:runAsUser\": {}, \"f:runAsNonRoot\": {}}, \"f:enableServiceLinks\": {}, \"f:serviceAccountName\": {}, \"f:terminationGracePeriodSeconds\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:pod-template-hash\": {}, \"f:app.kubernetes.io/name\": {}}, \"f:generateName\": {}, \"f:ownerReferences\": {\".\": {}, \"k:{\\\"uid\\\":\\\"3f32dfac-8b2a-4b7a-8db0-7eff8339ff6d\\\"}\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2021-10-15T10:24:13Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:status\": {\"f:phase\": {}, \"f:podIP\": {}, \"f:hostIP\": {}, \"f:podIPs\": {\".\": {}, \"k:{\\\"ip\\\":\\\"10.244.0.124\\\"}\": {\".\": {}, \"f:ip\": {}}}, \"f:startTime\": {}, \"f:conditions\": {\"k:{\\\"type\\\":\\\"Ready\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"Initialized\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"ContainersReady\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}, \"f:containerStatuses\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}], \"ownerReferences\": [{\"uid\": \"3f32dfac-8b2a-4b7a-8db0-7eff8339ff6d\", \"kind\": \"ReplicaSet\", \"name\": \"argocd-redis-5b6967fdfc\", \"apiVersion\": \"apps/v1\", \"controller\": true, \"blockOwnerDeletion\": true}], \"resourceVersion\": \"31177628\", \"creationTimestamp\": \"2021-10-15T10:23:24Z\"}, \"apiVersion\": \"v1\"}', '2021-10-15 18:23:24', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (853, 'default', 'k8sproxy-7775d795db-9vdrf', '', 'v1', 'pods', 'Pod', '145402224', 'f83510e6-8cdd-47df-9abc-c4d26b62cda6', 'c6fe5e73-19d7-4363-8138-ac919e700048', '996a04377cf9c2ab18cd', '{\"kind\": \"Pod\", \"spec\": {\"volumes\": [{\"name\": \"kubeconfig\", \"hostPath\": {\"path\": \"/home/shenyi/.kube\", \"type\": \"\"}}, {\"name\": \"kube-api-access-hcl77\", \"projected\": {\"sources\": [{\"serviceAccountToken\": {\"path\": \"token\", \"expirationSeconds\": 3607}}, {\"configMap\": {\"name\": \"kube-root-ca.crt\", \"items\": [{\"key\": \"ca.crt\", \"path\": \"ca.crt\"}]}}, {\"downwardAPI\": {\"items\": [{\"path\": \"namespace\", \"fieldRef\": {\"fieldPath\": \"metadata.namespace\", \"apiVersion\": \"v1\"}}]}}], \"defaultMode\": 420}}], \"nodeName\": \"dsjs2\", \"priority\": 0, \"dnsPolicy\": \"ClusterFirst\", \"containers\": [{\"args\": [\"-c\", \"kubectl proxy --address=\'0.0.0.0\'  --accept-hosts=\'^*$\' --port=8080\"], \"name\": \"k8sproxy\", \"image\": \"docker.io/bitnami/kubectl:1.22\", \"ports\": [{\"protocol\": \"TCP\", \"containerPort\": 8080}], \"command\": [\"sh\"], \"resources\": {}, \"volumeMounts\": [{\"name\": \"kubeconfig\", \"mountPath\": \"/.kube\"}, {\"name\": \"kube-api-access-hcl77\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\"}], \"imagePullPolicy\": \"IfNotPresent\", \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"tolerations\": [{\"key\": \"node.kubernetes.io/not-ready\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}, {\"key\": \"node.kubernetes.io/unreachable\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}], \"restartPolicy\": \"Always\", \"schedulerName\": \"default-scheduler\", \"serviceAccount\": \"default\", \"securityContext\": {\"runAsUser\": 1000}, \"preemptionPolicy\": \"PreemptLowerPriority\", \"enableServiceLinks\": true, \"serviceAccountName\": \"default\", \"terminationGracePeriodSeconds\": 30}, \"status\": {\"phase\": \"Running\", \"podIP\": \"10.244.1.252\", \"hostIP\": \"172.17.70.145\", \"podIPs\": [{\"ip\": \"10.244.1.252\"}], \"qosClass\": \"BestEffort\", \"startTime\": \"2022-06-26T18:02:26Z\", \"conditions\": [{\"type\": \"Initialized\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-06-26T18:02:26Z\"}, {\"type\": \"Ready\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-06-26T18:02:27Z\"}, {\"type\": \"ContainersReady\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-06-26T18:02:27Z\"}, {\"type\": \"PodScheduled\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-06-26T18:02:26Z\"}], \"containerStatuses\": [{\"name\": \"k8sproxy\", \"image\": \"bitnami/kubectl:1.22\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2022-06-26T18:02:27Z\"}}, \"imageID\": \"docker-pullable://bitnami/kubectl@sha256:607c92869c1082242d5f2d48824ab8d9731e415b17d5de9fb9779679a4b13e3e\", \"started\": true, \"lastState\": {}, \"containerID\": \"docker://1005b16c62fc15fb638d35e2fc928fbffa37ac342c7aa533e03aae549e62598b\", \"restartCount\": 0}]}, \"metadata\": {\"uid\": \"c6fe5e73-19d7-4363-8138-ac919e700048\", \"name\": \"k8sproxy-7775d795db-9vdrf\", \"labels\": {\"app\": \"k8sproxy\", \"pod-template-hash\": \"7775d795db\"}, \"namespace\": \"default\", \"generateName\": \"k8sproxy-7775d795db-\", \"managedFields\": [{\"time\": \"2022-06-26T17:58:37Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:spec\": {\"f:volumes\": {\".\": {}, \"k:{\\\"name\\\":\\\"kubeconfig\\\"}\": {\".\": {}, \"f:name\": {}, \"f:hostPath\": {\".\": {}, \"f:path\": {}, \"f:type\": {}}}}, \"f:nodeName\": {}, \"f:dnsPolicy\": {}, \"f:containers\": {\"k:{\\\"name\\\":\\\"k8sproxy\\\"}\": {\".\": {}, \"f:args\": {}, \"f:name\": {}, \"f:image\": {}, \"f:ports\": {\".\": {}, \"k:{\\\"containerPort\\\":8080,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}}, \"f:command\": {}, \"f:resources\": {}, \"f:volumeMounts\": {\".\": {}, \"k:{\\\"mountPath\\\":\\\"/.kube\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}}, \"f:imagePullPolicy\": {}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:restartPolicy\": {}, \"f:schedulerName\": {}, \"f:securityContext\": {\".\": {}, \"f:runAsUser\": {}}, \"f:enableServiceLinks\": {}, \"f:terminationGracePeriodSeconds\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:app\": {}, \"f:pod-template-hash\": {}}, \"f:generateName\": {}, \"f:ownerReferences\": {\".\": {}, \"k:{\\\"uid\\\":\\\"f83510e6-8cdd-47df-9abc-c4d26b62cda6\\\"}\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2022-06-26T17:58:38Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:status\": {\"f:phase\": {}, \"f:podIP\": {}, \"f:hostIP\": {}, \"f:podIPs\": {\".\": {}, \"k:{\\\"ip\\\":\\\"10.244.1.252\\\"}\": {\".\": {}, \"f:ip\": {}}}, \"f:startTime\": {}, \"f:conditions\": {\".\": {}, \"k:{\\\"type\\\":\\\"Ready\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"Initialized\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"PodScheduled\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"ContainersReady\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}, \"f:containerStatuses\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}], \"ownerReferences\": [{\"uid\": \"f83510e6-8cdd-47df-9abc-c4d26b62cda6\", \"kind\": \"ReplicaSet\", \"name\": \"k8sproxy-7775d795db\", \"apiVersion\": \"apps/v1\", \"controller\": true, \"blockOwnerDeletion\": true}], \"resourceVersion\": \"145402224\", \"creationTimestamp\": \"2022-06-26T17:58:37Z\"}, \"apiVersion\": \"v1\"}', '2022-06-27 01:58:37', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (854, 'k8sblog', 'myblog-6b8c96768d-xfvsc', '', 'v1', 'pods', 'Pod', '158504702', '19575476-9ed5-41e5-bbaa-b7930f5e8575', 'c174a26b-ebff-4977-acda-db0b857a8a6e', '4b6f5ec6198aa3bfe6f4', '{\"kind\": \"Pod\", \"spec\": {\"volumes\": [{\"name\": \"myapp\", \"hostPath\": {\"path\": \"/home/shenyi/k8sblog/app\", \"type\": \"\"}}, {\"name\": \"kube-api-access-qtphl\", \"projected\": {\"sources\": [{\"serviceAccountToken\": {\"path\": \"token\", \"expirationSeconds\": 3607}}, {\"configMap\": {\"name\": \"kube-root-ca.crt\", \"items\": [{\"key\": \"ca.crt\", \"path\": \"ca.crt\"}]}}, {\"downwardAPI\": {\"items\": [{\"path\": \"namespace\", \"fieldRef\": {\"fieldPath\": \"metadata.namespace\", \"apiVersion\": \"v1\"}}]}}], \"defaultMode\": 420}}], \"nodeName\": \"dsjs2\", \"priority\": 0, \"dnsPolicy\": \"ClusterFirst\", \"containers\": [{\"name\": \"myblog\", \"image\": \"docker.io/shenyisyn/alpine:3.12\", \"ports\": [{\"protocol\": \"TCP\", \"containerPort\": 8080}], \"command\": [\"./k8sblog\"], \"resources\": {}, \"workingDir\": \"/app/bin\", \"volumeMounts\": [{\"name\": \"myapp\", \"mountPath\": \"/app\"}, {\"name\": \"kube-api-access-qtphl\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\"}], \"imagePullPolicy\": \"IfNotPresent\", \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"tolerations\": [{\"key\": \"node.kubernetes.io/not-ready\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}, {\"key\": \"node.kubernetes.io/unreachable\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}], \"restartPolicy\": \"Always\", \"schedulerName\": \"default-scheduler\", \"serviceAccount\": \"default\", \"securityContext\": {}, \"preemptionPolicy\": \"PreemptLowerPriority\", \"enableServiceLinks\": true, \"serviceAccountName\": \"default\", \"terminationGracePeriodSeconds\": 30}, \"status\": {\"phase\": \"Running\", \"podIP\": \"10.244.1.64\", \"hostIP\": \"172.17.70.145\", \"podIPs\": [{\"ip\": \"10.244.1.64\"}], \"qosClass\": \"BestEffort\", \"startTime\": \"2022-09-05T16:36:40Z\", \"conditions\": [{\"type\": \"Initialized\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-09-05T16:36:40Z\"}, {\"type\": \"Ready\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-09-05T16:36:42Z\"}, {\"type\": \"ContainersReady\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-09-05T16:36:42Z\"}, {\"type\": \"PodScheduled\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-09-05T16:36:40Z\"}], \"containerStatuses\": [{\"name\": \"myblog\", \"image\": \"shenyisyn/alpine:3.12\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2022-09-05T16:36:41Z\"}}, \"imageID\": \"docker-pullable://shenyisyn/alpine@sha256:60042f0d4a41173f1ab829e2c5ede985253ba7afe893a39393d28038637bffbe\", \"started\": true, \"lastState\": {}, \"containerID\": \"docker://f85c3244b7d6ab26bb394975a0b551b78380aae9ad416ea32e853fdf9415135a\", \"restartCount\": 0}]}, \"metadata\": {\"uid\": \"c174a26b-ebff-4977-acda-db0b857a8a6e\", \"name\": \"myblog-6b8c96768d-xfvsc\", \"labels\": {\"app\": \"myblog\", \"pod-template-hash\": \"6b8c96768d\"}, \"namespace\": \"k8sblog\", \"generateName\": \"myblog-6b8c96768d-\", \"managedFields\": [{\"time\": \"2022-09-05T16:36:47Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:spec\": {\"f:volumes\": {\".\": {}, \"k:{\\\"name\\\":\\\"myapp\\\"}\": {\".\": {}, \"f:name\": {}, \"f:hostPath\": {\".\": {}, \"f:path\": {}, \"f:type\": {}}}}, \"f:nodeName\": {}, \"f:dnsPolicy\": {}, \"f:containers\": {\"k:{\\\"name\\\":\\\"myblog\\\"}\": {\".\": {}, \"f:name\": {}, \"f:image\": {}, \"f:ports\": {\".\": {}, \"k:{\\\"containerPort\\\":8080,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}}, \"f:command\": {}, \"f:resources\": {}, \"f:workingDir\": {}, \"f:volumeMounts\": {\".\": {}, \"k:{\\\"mountPath\\\":\\\"/app\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}}, \"f:imagePullPolicy\": {}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:restartPolicy\": {}, \"f:schedulerName\": {}, \"f:securityContext\": {}, \"f:enableServiceLinks\": {}, \"f:terminationGracePeriodSeconds\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:app\": {}, \"f:pod-template-hash\": {}}, \"f:generateName\": {}, \"f:ownerReferences\": {\".\": {}, \"k:{\\\"uid\\\":\\\"19575476-9ed5-41e5-bbaa-b7930f5e8575\\\"}\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2022-09-05T16:36:49Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:status\": {\"f:phase\": {}, \"f:podIP\": {}, \"f:hostIP\": {}, \"f:podIPs\": {\".\": {}, \"k:{\\\"ip\\\":\\\"10.244.1.64\\\"}\": {\".\": {}, \"f:ip\": {}}}, \"f:startTime\": {}, \"f:conditions\": {\".\": {}, \"k:{\\\"type\\\":\\\"Ready\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"Initialized\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"PodScheduled\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"ContainersReady\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}, \"f:containerStatuses\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}], \"ownerReferences\": [{\"uid\": \"19575476-9ed5-41e5-bbaa-b7930f5e8575\", \"kind\": \"ReplicaSet\", \"name\": \"myblog-6b8c96768d\", \"apiVersion\": \"apps/v1\", \"controller\": true, \"blockOwnerDeletion\": true}], \"resourceVersion\": \"158504702\", \"creationTimestamp\": \"2022-09-05T16:36:47Z\"}, \"apiVersion\": \"v1\"}', '2022-09-06 00:36:47', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (855, 'kube-system', 'coredns-78fcd69978-hlktm', '', 'v1', 'pods', 'Pod', '31164900', '917ff575-3c1a-4547-963f-d41ad7874b93', '395fae80-5f99-4ded-b046-9bfc4d51e4a1', 'ea82ec73bc0a53e7b5ad', '{\"kind\": \"Pod\", \"spec\": {\"volumes\": [{\"name\": \"config-volume\", \"configMap\": {\"name\": \"coredns\", \"items\": [{\"key\": \"Corefile\", \"path\": \"Corefile\"}], \"defaultMode\": 420}}, {\"name\": \"kube-api-access-ckdsw\", \"projected\": {\"sources\": [{\"serviceAccountToken\": {\"path\": \"token\", \"expirationSeconds\": 3607}}, {\"configMap\": {\"name\": \"kube-root-ca.crt\", \"items\": [{\"key\": \"ca.crt\", \"path\": \"ca.crt\"}]}}, {\"downwardAPI\": {\"items\": [{\"path\": \"namespace\", \"fieldRef\": {\"fieldPath\": \"metadata.namespace\", \"apiVersion\": \"v1\"}}]}}], \"defaultMode\": 420}}], \"nodeName\": \"dsjs\", \"priority\": 2000000000, \"dnsPolicy\": \"Default\", \"containers\": [{\"args\": [\"-conf\", \"/etc/coredns/Corefile\"], \"name\": \"coredns\", \"image\": \"k8s.gcr.io/coredns/coredns:v1.8.4\", \"ports\": [{\"name\": \"dns\", \"protocol\": \"UDP\", \"containerPort\": 53}, {\"name\": \"dns-tcp\", \"protocol\": \"TCP\", \"containerPort\": 53}, {\"name\": \"metrics\", \"protocol\": \"TCP\", \"containerPort\": 9153}], \"resources\": {\"limits\": {\"memory\": \"170Mi\"}, \"requests\": {\"cpu\": \"100m\", \"memory\": \"70Mi\"}}, \"volumeMounts\": [{\"name\": \"config-volume\", \"readOnly\": true, \"mountPath\": \"/etc/coredns\"}, {\"name\": \"kube-api-access-ckdsw\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\"}], \"livenessProbe\": {\"httpGet\": {\"path\": \"/health\", \"port\": 8080, \"scheme\": \"HTTP\"}, \"periodSeconds\": 10, \"timeoutSeconds\": 5, \"failureThreshold\": 5, \"successThreshold\": 1, \"initialDelaySeconds\": 60}, \"readinessProbe\": {\"httpGet\": {\"path\": \"/ready\", \"port\": 8181, \"scheme\": \"HTTP\"}, \"periodSeconds\": 10, \"timeoutSeconds\": 1, \"failureThreshold\": 3, \"successThreshold\": 1}, \"imagePullPolicy\": \"IfNotPresent\", \"securityContext\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"], \"drop\": [\"all\"]}, \"readOnlyRootFilesystem\": true, \"allowPrivilegeEscalation\": false}, \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"tolerations\": [{\"key\": \"CriticalAddonsOnly\", \"operator\": \"Exists\"}, {\"key\": \"node-role.kubernetes.io/master\", \"effect\": \"NoSchedule\"}, {\"key\": \"node-role.kubernetes.io/control-plane\", \"effect\": \"NoSchedule\"}, {\"key\": \"node.kubernetes.io/not-ready\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}, {\"key\": \"node.kubernetes.io/unreachable\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}], \"nodeSelector\": {\"kubernetes.io/os\": \"linux\"}, \"restartPolicy\": \"Always\", \"schedulerName\": \"default-scheduler\", \"serviceAccount\": \"coredns\", \"securityContext\": {}, \"preemptionPolicy\": \"PreemptLowerPriority\", \"priorityClassName\": \"system-cluster-critical\", \"enableServiceLinks\": true, \"serviceAccountName\": \"coredns\", \"terminationGracePeriodSeconds\": 30}, \"status\": {\"phase\": \"Running\", \"podIP\": \"10.244.0.32\", \"hostIP\": \"172.17.70.144\", \"podIPs\": [{\"ip\": \"10.244.0.32\"}], \"qosClass\": \"Burstable\", \"startTime\": \"2021-08-16T18:29:17Z\", \"conditions\": [{\"type\": \"Initialized\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-08-16T18:29:17Z\"}, {\"type\": \"Ready\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-08-30T08:33:44Z\"}, {\"type\": \"ContainersReady\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-08-30T08:33:44Z\"}, {\"type\": \"PodScheduled\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-08-16T18:29:17Z\"}], \"containerStatuses\": [{\"name\": \"coredns\", \"image\": \"k8s.gcr.io/coredns/coredns:v1.8.4\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2021-08-30T08:33:42Z\"}}, \"imageID\": \"docker://sha256:8d147537fb7d1ac8895da4d55a5e53621949981e2e6460976dae812f83d84a44\", \"started\": true, \"lastState\": {\"terminated\": {\"reason\": \"Error\", \"exitCode\": 255, \"startedAt\": \"2021-08-30T08:12:07Z\", \"finishedAt\": \"2021-08-30T08:32:18Z\", \"containerID\": \"docker://da593932a1aa78570ef37b054424f099dbbdd483087352c315c74f27c22c3b9b\"}}, \"containerID\": \"docker://06f85106ccc7c205a499c157227f16d82a5dc1cfd03f764466ff703e51a9a3e6\", \"restartCount\": 2}]}, \"metadata\": {\"uid\": \"395fae80-5f99-4ded-b046-9bfc4d51e4a1\", \"name\": \"coredns-78fcd69978-hlktm\", \"labels\": {\"k8s-app\": \"kube-dns\", \"pod-template-hash\": \"78fcd69978\"}, \"namespace\": \"kube-system\", \"generateName\": \"coredns-78fcd69978-\", \"managedFields\": [{\"time\": \"2021-08-16T18:25:09Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:spec\": {\"f:volumes\": {\".\": {}, \"k:{\\\"name\\\":\\\"config-volume\\\"}\": {\".\": {}, \"f:name\": {}, \"f:configMap\": {\".\": {}, \"f:name\": {}, \"f:items\": {}, \"f:defaultMode\": {}}}}, \"f:dnsPolicy\": {}, \"f:containers\": {\"k:{\\\"name\\\":\\\"coredns\\\"}\": {\".\": {}, \"f:args\": {}, \"f:name\": {}, \"f:image\": {}, \"f:ports\": {\".\": {}, \"k:{\\\"containerPort\\\":53,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:name\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}, \"k:{\\\"containerPort\\\":53,\\\"protocol\\\":\\\"UDP\\\"}\": {\".\": {}, \"f:name\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}, \"k:{\\\"containerPort\\\":9153,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:name\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}}, \"f:resources\": {\".\": {}, \"f:limits\": {\".\": {}, \"f:memory\": {}}, \"f:requests\": {\".\": {}, \"f:cpu\": {}, \"f:memory\": {}}}, \"f:volumeMounts\": {\".\": {}, \"k:{\\\"mountPath\\\":\\\"/etc/coredns\\\"}\": {\".\": {}, \"f:name\": {}, \"f:readOnly\": {}, \"f:mountPath\": {}}}, \"f:livenessProbe\": {\".\": {}, \"f:httpGet\": {\".\": {}, \"f:path\": {}, \"f:port\": {}, \"f:scheme\": {}}, \"f:periodSeconds\": {}, \"f:timeoutSeconds\": {}, \"f:failureThreshold\": {}, \"f:successThreshold\": {}, \"f:initialDelaySeconds\": {}}, \"f:readinessProbe\": {\".\": {}, \"f:httpGet\": {\".\": {}, \"f:path\": {}, \"f:port\": {}, \"f:scheme\": {}}, \"f:periodSeconds\": {}, \"f:timeoutSeconds\": {}, \"f:failureThreshold\": {}, \"f:successThreshold\": {}}, \"f:imagePullPolicy\": {}, \"f:securityContext\": {\".\": {}, \"f:capabilities\": {\".\": {}, \"f:add\": {}, \"f:drop\": {}}, \"f:readOnlyRootFilesystem\": {}, \"f:allowPrivilegeEscalation\": {}}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:tolerations\": {}, \"f:nodeSelector\": {}, \"f:restartPolicy\": {}, \"f:schedulerName\": {}, \"f:serviceAccount\": {}, \"f:securityContext\": {}, \"f:priorityClassName\": {}, \"f:enableServiceLinks\": {}, \"f:serviceAccountName\": {}, \"f:terminationGracePeriodSeconds\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:k8s-app\": {}, \"f:pod-template-hash\": {}}, \"f:generateName\": {}, \"f:ownerReferences\": {\".\": {}, \"k:{\\\"uid\\\":\\\"917ff575-3c1a-4547-963f-d41ad7874b93\\\"}\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2021-08-16T18:25:09Z\", \"manager\": \"kube-scheduler\", \"fieldsV1\": {\"f:status\": {\"f:conditions\": {\".\": {}, \"k:{\\\"type\\\":\\\"PodScheduled\\\"}\": {\".\": {}, \"f:type\": {}, \"f:reason\": {}, \"f:status\": {}, \"f:message\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}, {\"time\": \"2021-08-30T08:33:44Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:status\": {\"f:phase\": {}, \"f:podIP\": {}, \"f:hostIP\": {}, \"f:podIPs\": {\".\": {}, \"k:{\\\"ip\\\":\\\"10.244.0.32\\\"}\": {\".\": {}, \"f:ip\": {}}}, \"f:startTime\": {}, \"f:conditions\": {\"k:{\\\"type\\\":\\\"Ready\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"Initialized\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"ContainersReady\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}, \"f:containerStatuses\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}], \"ownerReferences\": [{\"uid\": \"917ff575-3c1a-4547-963f-d41ad7874b93\", \"kind\": \"ReplicaSet\", \"name\": \"coredns-78fcd69978\", \"apiVersion\": \"apps/v1\", \"controller\": true, \"blockOwnerDeletion\": true}], \"resourceVersion\": \"31164900\", \"creationTimestamp\": \"2021-08-16T18:25:09Z\"}, \"apiVersion\": \"v1\"}', '2021-08-17 02:25:09', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (856, 'kube-system', 'kube-flannel-ds-88zxp', '', 'v1', 'pods', 'Pod', '31164827', '045bc567-8d99-48a2-92aa-3d09082727a5', '81a5d261-4df2-4d8f-a94b-5a17254cbb33', '7236a0e625c33e5d7f36', '{\"kind\": \"Pod\", \"spec\": {\"volumes\": [{\"name\": \"run\", \"hostPath\": {\"path\": \"/run/flannel\", \"type\": \"\"}}, {\"name\": \"cni\", \"hostPath\": {\"path\": \"/etc/cni/net.d\", \"type\": \"\"}}, {\"name\": \"flannel-cfg\", \"configMap\": {\"name\": \"kube-flannel-cfg\", \"defaultMode\": 420}}, {\"name\": \"kube-api-access-79kxk\", \"projected\": {\"sources\": [{\"serviceAccountToken\": {\"path\": \"token\", \"expirationSeconds\": 3607}}, {\"configMap\": {\"name\": \"kube-root-ca.crt\", \"items\": [{\"key\": \"ca.crt\", \"path\": \"ca.crt\"}]}}, {\"downwardAPI\": {\"items\": [{\"path\": \"namespace\", \"fieldRef\": {\"fieldPath\": \"metadata.namespace\", \"apiVersion\": \"v1\"}}]}}], \"defaultMode\": 420}}], \"affinity\": {\"nodeAffinity\": {\"requiredDuringSchedulingIgnoredDuringExecution\": {\"nodeSelectorTerms\": [{\"matchFields\": [{\"key\": \"metadata.name\", \"values\": [\"dsjs\"], \"operator\": \"In\"}]}]}}}, \"nodeName\": \"dsjs\", \"priority\": 2000001000, \"dnsPolicy\": \"ClusterFirst\", \"containers\": [{\"env\": [{\"name\": \"POD_NAME\", \"valueFrom\": {\"fieldRef\": {\"fieldPath\": \"metadata.name\", \"apiVersion\": \"v1\"}}}, {\"name\": \"POD_NAMESPACE\", \"valueFrom\": {\"fieldRef\": {\"fieldPath\": \"metadata.namespace\", \"apiVersion\": \"v1\"}}}], \"args\": [\"--ip-masq\", \"--kube-subnet-mgr\"], \"name\": \"kube-flannel\", \"image\": \"quay.io/coreos/flannel:v0.14.0\", \"command\": [\"/opt/bin/flanneld\"], \"resources\": {\"limits\": {\"cpu\": \"100m\", \"memory\": \"50Mi\"}, \"requests\": {\"cpu\": \"100m\", \"memory\": \"50Mi\"}}, \"volumeMounts\": [{\"name\": \"run\", \"mountPath\": \"/run/flannel\"}, {\"name\": \"flannel-cfg\", \"mountPath\": \"/etc/kube-flannel/\"}, {\"name\": \"kube-api-access-79kxk\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\"}], \"imagePullPolicy\": \"IfNotPresent\", \"securityContext\": {\"privileged\": false, \"capabilities\": {\"add\": [\"NET_ADMIN\", \"NET_RAW\"]}}, \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"hostNetwork\": true, \"tolerations\": [{\"effect\": \"NoSchedule\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/not-ready\", \"effect\": \"NoExecute\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/unreachable\", \"effect\": \"NoExecute\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/disk-pressure\", \"effect\": \"NoSchedule\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/memory-pressure\", \"effect\": \"NoSchedule\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/pid-pressure\", \"effect\": \"NoSchedule\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/unschedulable\", \"effect\": \"NoSchedule\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/network-unavailable\", \"effect\": \"NoSchedule\", \"operator\": \"Exists\"}], \"restartPolicy\": \"Always\", \"schedulerName\": \"default-scheduler\", \"initContainers\": [{\"args\": [\"-f\", \"/etc/kube-flannel/cni-conf.json\", \"/etc/cni/net.d/10-flannel.conflist\"], \"name\": \"install-cni\", \"image\": \"quay.io/coreos/flannel:v0.14.0\", \"command\": [\"cp\"], \"resources\": {}, \"volumeMounts\": [{\"name\": \"cni\", \"mountPath\": \"/etc/cni/net.d\"}, {\"name\": \"flannel-cfg\", \"mountPath\": \"/etc/kube-flannel/\"}, {\"name\": \"kube-api-access-79kxk\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\"}], \"imagePullPolicy\": \"IfNotPresent\", \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"serviceAccount\": \"flannel\", \"securityContext\": {}, \"preemptionPolicy\": \"PreemptLowerPriority\", \"priorityClassName\": \"system-node-critical\", \"enableServiceLinks\": true, \"serviceAccountName\": \"flannel\", \"terminationGracePeriodSeconds\": 30}, \"status\": {\"phase\": \"Running\", \"podIP\": \"172.17.70.144\", \"hostIP\": \"172.17.70.144\", \"podIPs\": [{\"ip\": \"172.17.70.144\"}], \"qosClass\": \"Burstable\", \"startTime\": \"2021-08-16T18:29:13Z\", \"conditions\": [{\"type\": \"Initialized\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-08-16T18:29:15Z\"}, {\"type\": \"Ready\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-08-30T08:33:40Z\"}, {\"type\": \"ContainersReady\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-08-30T08:33:40Z\"}, {\"type\": \"PodScheduled\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-08-16T18:29:13Z\"}], \"containerStatuses\": [{\"name\": \"kube-flannel\", \"image\": \"quay.io/coreos/flannel:v0.14.0\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2021-08-30T08:33:36Z\"}}, \"imageID\": \"docker://sha256:8522d622299ca431311ac69992419c956fbaca6fa8289c76810c9399d17c69de\", \"started\": true, \"lastState\": {\"terminated\": {\"reason\": \"Error\", \"exitCode\": 1, \"startedAt\": \"2021-08-30T08:32:46Z\", \"finishedAt\": \"2021-08-30T08:33:18Z\", \"containerID\": \"docker://9974c0656cca3fa2ac5230b563c7baac0814fcf9338ec17be52cb075fa932f45\"}}, \"containerID\": \"docker://08e391a3a760f5d70bfad3e625462f4c443886b8e4b651cd669d7d4396c63ca1\", \"restartCount\": 4}], \"initContainerStatuses\": [{\"name\": \"install-cni\", \"image\": \"quay.io/coreos/flannel:v0.14.0\", \"ready\": true, \"state\": {\"terminated\": {\"reason\": \"Completed\", \"exitCode\": 0, \"startedAt\": \"2021-08-30T08:32:44Z\", \"finishedAt\": \"2021-08-30T08:32:44Z\", \"containerID\": \"docker://93870f1869a4c8cdc773a9896633bcfd9705e93545b0bf44ac945f0e59a1253e\"}}, \"imageID\": \"docker://sha256:8522d622299ca431311ac69992419c956fbaca6fa8289c76810c9399d17c69de\", \"lastState\": {}, \"containerID\": \"docker://93870f1869a4c8cdc773a9896633bcfd9705e93545b0bf44ac945f0e59a1253e\", \"restartCount\": 2}]}, \"metadata\": {\"uid\": \"81a5d261-4df2-4d8f-a94b-5a17254cbb33\", \"name\": \"kube-flannel-ds-88zxp\", \"labels\": {\"app\": \"flannel\", \"tier\": \"node\", \"pod-template-generation\": \"1\", \"controller-revision-hash\": \"7fb8b954f9\"}, \"namespace\": \"kube-system\", \"generateName\": \"kube-flannel-ds-\", \"managedFields\": [{\"time\": \"2021-08-16T18:29:13Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:spec\": {\"f:volumes\": {\".\": {}, \"k:{\\\"name\\\":\\\"cni\\\"}\": {\".\": {}, \"f:name\": {}, \"f:hostPath\": {\".\": {}, \"f:path\": {}, \"f:type\": {}}}, \"k:{\\\"name\\\":\\\"run\\\"}\": {\".\": {}, \"f:name\": {}, \"f:hostPath\": {\".\": {}, \"f:path\": {}, \"f:type\": {}}}, \"k:{\\\"name\\\":\\\"flannel-cfg\\\"}\": {\".\": {}, \"f:name\": {}, \"f:configMap\": {\".\": {}, \"f:name\": {}, \"f:defaultMode\": {}}}}, \"f:affinity\": {\".\": {}, \"f:nodeAffinity\": {\".\": {}, \"f:requiredDuringSchedulingIgnoredDuringExecution\": {}}}, \"f:dnsPolicy\": {}, \"f:containers\": {\"k:{\\\"name\\\":\\\"kube-flannel\\\"}\": {\".\": {}, \"f:env\": {\".\": {}, \"k:{\\\"name\\\":\\\"POD_NAME\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:fieldRef\": {}}}, \"k:{\\\"name\\\":\\\"POD_NAMESPACE\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:fieldRef\": {}}}}, \"f:args\": {}, \"f:name\": {}, \"f:image\": {}, \"f:command\": {}, \"f:resources\": {\".\": {}, \"f:limits\": {\".\": {}, \"f:cpu\": {}, \"f:memory\": {}}, \"f:requests\": {\".\": {}, \"f:cpu\": {}, \"f:memory\": {}}}, \"f:volumeMounts\": {\".\": {}, \"k:{\\\"mountPath\\\":\\\"/run/flannel\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/etc/kube-flannel/\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}}, \"f:imagePullPolicy\": {}, \"f:securityContext\": {\".\": {}, \"f:privileged\": {}, \"f:capabilities\": {\".\": {}, \"f:add\": {}}}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:hostNetwork\": {}, \"f:tolerations\": {}, \"f:restartPolicy\": {}, \"f:schedulerName\": {}, \"f:initContainers\": {\".\": {}, \"k:{\\\"name\\\":\\\"install-cni\\\"}\": {\".\": {}, \"f:args\": {}, \"f:name\": {}, \"f:image\": {}, \"f:command\": {}, \"f:resources\": {}, \"f:volumeMounts\": {\".\": {}, \"k:{\\\"mountPath\\\":\\\"/etc/cni/net.d\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/etc/kube-flannel/\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}}, \"f:imagePullPolicy\": {}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:serviceAccount\": {}, \"f:securityContext\": {}, \"f:priorityClassName\": {}, \"f:enableServiceLinks\": {}, \"f:serviceAccountName\": {}, \"f:terminationGracePeriodSeconds\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:app\": {}, \"f:tier\": {}, \"f:pod-template-generation\": {}, \"f:controller-revision-hash\": {}}, \"f:generateName\": {}, \"f:ownerReferences\": {\".\": {}, \"k:{\\\"uid\\\":\\\"045bc567-8d99-48a2-92aa-3d09082727a5\\\"}\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2021-08-30T08:33:40Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:status\": {\"f:phase\": {}, \"f:podIP\": {}, \"f:hostIP\": {}, \"f:podIPs\": {\".\": {}, \"k:{\\\"ip\\\":\\\"172.17.70.144\\\"}\": {\".\": {}, \"f:ip\": {}}}, \"f:startTime\": {}, \"f:conditions\": {\"k:{\\\"type\\\":\\\"Ready\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"Initialized\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"ContainersReady\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}, \"f:containerStatuses\": {}, \"f:initContainerStatuses\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}], \"ownerReferences\": [{\"uid\": \"045bc567-8d99-48a2-92aa-3d09082727a5\", \"kind\": \"DaemonSet\", \"name\": \"kube-flannel-ds\", \"apiVersion\": \"apps/v1\", \"controller\": true, \"blockOwnerDeletion\": true}], \"resourceVersion\": \"31164827\", \"creationTimestamp\": \"2021-08-16T18:29:13Z\"}, \"apiVersion\": \"v1\"}', '2021-08-17 02:29:13', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (857, 'myweb', 'prodapi-6748487d64-47h55', '', 'v1', 'pods', 'Pod', '118302614', '4b3775d8-1dc6-4d58-8f8d-72b195b9ddc8', 'a0c41ec8-1662-4358-9e77-5f2eb47e61c0', 'a12f1bf9cf5c49b642df', '{\"kind\": \"Pod\", \"spec\": {\"volumes\": [{\"name\": \"istio-envoy\", \"emptyDir\": {\"medium\": \"Memory\"}}, {\"name\": \"istio-data\", \"emptyDir\": {}}, {\"name\": \"istio-podinfo\", \"downwardAPI\": {\"items\": [{\"path\": \"labels\", \"fieldRef\": {\"fieldPath\": \"metadata.labels\", \"apiVersion\": \"v1\"}}, {\"path\": \"annotations\", \"fieldRef\": {\"fieldPath\": \"metadata.annotations\", \"apiVersion\": \"v1\"}}], \"defaultMode\": 420}}, {\"name\": \"istio-token\", \"projected\": {\"sources\": [{\"serviceAccountToken\": {\"path\": \"istio-token\", \"audience\": \"istio-ca\", \"expirationSeconds\": 43200}}], \"defaultMode\": 420}}, {\"name\": \"istiod-ca-cert\", \"configMap\": {\"name\": \"istio-ca-root-cert\", \"defaultMode\": 420}}, {\"name\": \"kube-api-access-z5k5r\", \"projected\": {\"sources\": [{\"serviceAccountToken\": {\"path\": \"token\", \"expirationSeconds\": 3607}}, {\"configMap\": {\"name\": \"kube-root-ca.crt\", \"items\": [{\"key\": \"ca.crt\", \"path\": \"ca.crt\"}]}}, {\"downwardAPI\": {\"items\": [{\"path\": \"namespace\", \"fieldRef\": {\"fieldPath\": \"metadata.namespace\", \"apiVersion\": \"v1\"}}]}}], \"defaultMode\": 420}}], \"nodeName\": \"dsjs2\", \"priority\": 0, \"dnsPolicy\": \"ClusterFirst\", \"containers\": [{\"name\": \"prod\", \"image\": \"docker.io/shenyisyn/prod:v1\", \"ports\": [{\"protocol\": \"TCP\", \"containerPort\": 8080}], \"resources\": {}, \"volumeMounts\": [{\"name\": \"kube-api-access-z5k5r\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\"}], \"imagePullPolicy\": \"IfNotPresent\", \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}, {\"env\": [{\"name\": \"JWT_POLICY\", \"value\": \"third-party-jwt\"}, {\"name\": \"PILOT_CERT_PROVIDER\", \"value\": \"istiod\"}, {\"name\": \"CA_ADDR\", \"value\": \"istiod.istio-system.svc:15012\"}, {\"name\": \"POD_NAME\", \"valueFrom\": {\"fieldRef\": {\"fieldPath\": \"metadata.name\", \"apiVersion\": \"v1\"}}}, {\"name\": \"POD_NAMESPACE\", \"valueFrom\": {\"fieldRef\": {\"fieldPath\": \"metadata.namespace\", \"apiVersion\": \"v1\"}}}, {\"name\": \"INSTANCE_IP\", \"valueFrom\": {\"fieldRef\": {\"fieldPath\": \"status.podIP\", \"apiVersion\": \"v1\"}}}, {\"name\": \"SERVICE_ACCOUNT\", \"valueFrom\": {\"fieldRef\": {\"fieldPath\": \"spec.serviceAccountName\", \"apiVersion\": \"v1\"}}}, {\"name\": \"HOST_IP\", \"valueFrom\": {\"fieldRef\": {\"fieldPath\": \"status.hostIP\", \"apiVersion\": \"v1\"}}}, {\"name\": \"PROXY_CONFIG\", \"value\": \"{}\\n\"}, {\"name\": \"ISTIO_META_POD_PORTS\", \"value\": \"[\\n    {\\\"containerPort\\\":8080,\\\"protocol\\\":\\\"TCP\\\"}\\n]\"}, {\"name\": \"ISTIO_META_APP_CONTAINERS\", \"value\": \"prod\"}, {\"name\": \"ISTIO_META_CLUSTER_ID\", \"value\": \"Kubernetes\"}, {\"name\": \"ISTIO_META_INTERCEPTION_MODE\", \"value\": \"REDIRECT\"}, {\"name\": \"ISTIO_META_WORKLOAD_NAME\", \"value\": \"prodapi\"}, {\"name\": \"ISTIO_META_OWNER\", \"value\": \"kubernetes://apis/apps/v1/namespaces/myweb/deployments/prodapi\"}, {\"name\": \"ISTIO_META_MESH_ID\", \"value\": \"cluster.local\"}, {\"name\": \"TRUST_DOMAIN\", \"value\": \"cluster.local\"}], \"args\": [\"proxy\", \"sidecar\", \"--domain\", \"$(POD_NAMESPACE).svc.cluster.local\", \"--proxyLogLevel=warning\", \"--proxyComponentLogLevel=misc:error\", \"--log_output_level=default:info\", \"--concurrency\", \"2\"], \"name\": \"istio-proxy\", \"image\": \"docker.io/istio/proxyv2:1.12.2\", \"ports\": [{\"name\": \"http-envoy-prom\", \"protocol\": \"TCP\", \"containerPort\": 15090}], \"resources\": {\"limits\": {\"cpu\": \"2\", \"memory\": \"1Gi\"}, \"requests\": {\"cpu\": \"100m\", \"memory\": \"128Mi\"}}, \"volumeMounts\": [{\"name\": \"istiod-ca-cert\", \"mountPath\": \"/var/run/secrets/istio\"}, {\"name\": \"istio-data\", \"mountPath\": \"/var/lib/istio/data\"}, {\"name\": \"istio-envoy\", \"mountPath\": \"/etc/istio/proxy\"}, {\"name\": \"istio-token\", \"mountPath\": \"/var/run/secrets/tokens\"}, {\"name\": \"istio-podinfo\", \"mountPath\": \"/etc/istio/pod\"}, {\"name\": \"kube-api-access-z5k5r\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\"}], \"readinessProbe\": {\"httpGet\": {\"path\": \"/healthz/ready\", \"port\": 15021, \"scheme\": \"HTTP\"}, \"periodSeconds\": 2, \"timeoutSeconds\": 3, \"failureThreshold\": 30, \"successThreshold\": 1, \"initialDelaySeconds\": 1}, \"imagePullPolicy\": \"IfNotPresent\", \"securityContext\": {\"runAsUser\": 1337, \"privileged\": false, \"runAsGroup\": 1337, \"capabilities\": {\"drop\": [\"ALL\"]}, \"runAsNonRoot\": true, \"readOnlyRootFilesystem\": true, \"allowPrivilegeEscalation\": false}, \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"tolerations\": [{\"key\": \"node.kubernetes.io/not-ready\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}, {\"key\": \"node.kubernetes.io/unreachable\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}], \"restartPolicy\": \"Always\", \"schedulerName\": \"default-scheduler\", \"initContainers\": [{\"args\": [\"istio-iptables\", \"-p\", \"15001\", \"-z\", \"15006\", \"-u\", \"1337\", \"-m\", \"REDIRECT\", \"-i\", \"*\", \"-x\", \"\", \"-b\", \"*\", \"-d\", \"15090,15021,15020\"], \"name\": \"istio-init\", \"image\": \"docker.io/istio/proxyv2:1.12.2\", \"resources\": {\"limits\": {\"cpu\": \"2\", \"memory\": \"1Gi\"}, \"requests\": {\"cpu\": \"100m\", \"memory\": \"128Mi\"}}, \"volumeMounts\": [{\"name\": \"kube-api-access-z5k5r\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\"}], \"imagePullPolicy\": \"IfNotPresent\", \"securityContext\": {\"runAsUser\": 0, \"privileged\": false, \"runAsGroup\": 0, \"capabilities\": {\"add\": [\"NET_ADMIN\", \"NET_RAW\"], \"drop\": [\"ALL\"]}, \"runAsNonRoot\": false, \"readOnlyRootFilesystem\": false, \"allowPrivilegeEscalation\": false}, \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"serviceAccount\": \"default\", \"securityContext\": {}, \"preemptionPolicy\": \"PreemptLowerPriority\", \"enableServiceLinks\": true, \"serviceAccountName\": \"default\", \"terminationGracePeriodSeconds\": 30}, \"status\": {\"phase\": \"Running\", \"podIP\": \"10.244.1.253\", \"hostIP\": \"172.17.70.145\", \"podIPs\": [{\"ip\": \"10.244.1.253\"}], \"qosClass\": \"Burstable\", \"startTime\": \"2022-02-13T15:32:08Z\", \"conditions\": [{\"type\": \"Initialized\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-02-13T15:32:09Z\"}, {\"type\": \"Ready\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-02-13T15:32:10Z\"}, {\"type\": \"ContainersReady\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-02-13T15:32:10Z\"}, {\"type\": \"PodScheduled\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-02-13T15:26:45Z\"}], \"containerStatuses\": [{\"name\": \"istio-proxy\", \"image\": \"istio/proxyv2:1.12.2\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2022-02-13T15:32:09Z\"}}, \"imageID\": \"docker-pullable://istio/proxyv2@sha256:f26717efc7f6e0fe928760dd353ed004ea35444f5aa6d41341a003e7610cd26f\", \"started\": true, \"lastState\": {}, \"containerID\": \"docker://f5d189598190cb763f04d4dca8efc97e3df6c2e7ec81bb19c8fc7bfb7a123088\", \"restartCount\": 0}, {\"name\": \"prod\", \"image\": \"prod:v1\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2022-02-13T15:32:09Z\"}}, \"imageID\": \"docker-pullable://shenyisyn/prod@sha256:87af02219f026a6ab53124775bc8e640c874c3c68874b6a8c9aecb44248407fd\", \"started\": true, \"lastState\": {}, \"containerID\": \"docker://96934aa372b9a2c85ce4009c2bfa67a3e88d4e69a2840dd29dbac9c7e3b00f2d\", \"restartCount\": 0}], \"initContainerStatuses\": [{\"name\": \"istio-init\", \"image\": \"istio/proxyv2:1.12.2\", \"ready\": true, \"state\": {\"terminated\": {\"reason\": \"Completed\", \"exitCode\": 0, \"startedAt\": \"2022-02-13T15:32:08Z\", \"finishedAt\": \"2022-02-13T15:32:08Z\", \"containerID\": \"docker://0cf8b58eef6e352756557765d2510495ea2c4b657d8c9be7e0ee5131192b8213\"}}, \"imageID\": \"docker-pullable://istio/proxyv2@sha256:f26717efc7f6e0fe928760dd353ed004ea35444f5aa6d41341a003e7610cd26f\", \"lastState\": {}, \"containerID\": \"docker://0cf8b58eef6e352756557765d2510495ea2c4b657d8c9be7e0ee5131192b8213\", \"restartCount\": 0}]}, \"metadata\": {\"uid\": \"a0c41ec8-1662-4358-9e77-5f2eb47e61c0\", \"name\": \"prodapi-6748487d64-47h55\", \"labels\": {\"app\": \"prod\", \"version\": \"v1\", \"pod-template-hash\": \"6748487d64\", \"security.istio.io/tlsMode\": \"istio\", \"service.istio.io/canonical-name\": \"prod\", \"service.istio.io/canonical-revision\": \"v1\"}, \"namespace\": \"myweb\", \"annotations\": {\"prometheus.io/path\": \"/stats/prometheus\", \"prometheus.io/port\": \"15020\", \"prometheus.io/scrape\": \"true\", \"sidecar.istio.io/status\": \"{\\\"initContainers\\\":[\\\"istio-init\\\"],\\\"containers\\\":[\\\"istio-proxy\\\"],\\\"volumes\\\":[\\\"istio-envoy\\\",\\\"istio-data\\\",\\\"istio-podinfo\\\",\\\"istio-token\\\",\\\"istiod-ca-cert\\\"],\\\"imagePullSecrets\\\":null,\\\"revision\\\":\\\"default\\\"}\", \"kubectl.kubernetes.io/default-container\": \"prod\", \"kubectl.kubernetes.io/default-logs-container\": \"prod\"}, \"generateName\": \"prodapi-6748487d64-\", \"managedFields\": [{\"time\": \"2022-02-13T15:26:45Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:spec\": {\"f:dnsPolicy\": {}, \"f:containers\": {\"k:{\\\"name\\\":\\\"prod\\\"}\": {\".\": {}, \"f:name\": {}, \"f:image\": {}, \"f:ports\": {\".\": {}, \"k:{\\\"containerPort\\\":8080,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}}, \"f:resources\": {}, \"f:imagePullPolicy\": {}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:restartPolicy\": {}, \"f:schedulerName\": {}, \"f:securityContext\": {}, \"f:enableServiceLinks\": {}, \"f:terminationGracePeriodSeconds\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:app\": {}, \"f:version\": {}, \"f:pod-template-hash\": {}}, \"f:generateName\": {}, \"f:ownerReferences\": {\".\": {}, \"k:{\\\"uid\\\":\\\"4b3775d8-1dc6-4d58-8f8d-72b195b9ddc8\\\"}\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2022-02-13T15:26:48Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:status\": {\"f:phase\": {}, \"f:podIP\": {}, \"f:hostIP\": {}, \"f:podIPs\": {\".\": {}, \"k:{\\\"ip\\\":\\\"10.244.1.253\\\"}\": {\".\": {}, \"f:ip\": {}}}, \"f:startTime\": {}, \"f:conditions\": {\"k:{\\\"type\\\":\\\"Ready\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"Initialized\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"ContainersReady\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}, \"f:containerStatuses\": {}, \"f:initContainerStatuses\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}], \"ownerReferences\": [{\"uid\": \"4b3775d8-1dc6-4d58-8f8d-72b195b9ddc8\", \"kind\": \"ReplicaSet\", \"name\": \"prodapi-6748487d64\", \"apiVersion\": \"apps/v1\", \"controller\": true, \"blockOwnerDeletion\": true}], \"resourceVersion\": \"118302614\", \"creationTimestamp\": \"2022-02-13T15:26:45Z\"}, \"apiVersion\": \"v1\"}', '2022-02-13 23:26:45', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (858, 'argocd', 'argocd-repo-server-75fdf4dfbf-vkj4k', '', 'v1', 'pods', 'Pod', '117699186', '8ca69e6e-c521-41ee-837c-c8d638327d58', '44b3641b-e3bb-433c-87dc-b4fc2d41fa97', 'd442230817b213f11c1b', '{\"kind\": \"Pod\", \"spec\": {\"volumes\": [{\"name\": \"ssh-known-hosts\", \"configMap\": {\"name\": \"argocd-ssh-known-hosts-cm\", \"defaultMode\": 420}}, {\"name\": \"tls-certs\", \"configMap\": {\"name\": \"argocd-tls-certs-cm\", \"defaultMode\": 420}}, {\"name\": \"gpg-keys\", \"configMap\": {\"name\": \"argocd-gpg-keys-cm\", \"defaultMode\": 420}}, {\"name\": \"gpg-keyring\", \"emptyDir\": {}}, {\"name\": \"tmp\", \"emptyDir\": {}}, {\"name\": \"argocd-repo-server-tls\", \"secret\": {\"items\": [{\"key\": \"tls.crt\", \"path\": \"tls.crt\"}, {\"key\": \"tls.key\", \"path\": \"tls.key\"}, {\"key\": \"ca.crt\", \"path\": \"ca.crt\"}], \"optional\": true, \"secretName\": \"argocd-repo-server-tls\", \"defaultMode\": 420}}], \"affinity\": {\"podAntiAffinity\": {\"preferredDuringSchedulingIgnoredDuringExecution\": [{\"weight\": 100, \"podAffinityTerm\": {\"topologyKey\": \"kubernetes.io/hostname\", \"labelSelector\": {\"matchLabels\": {\"app.kubernetes.io/name\": \"argocd-repo-server\"}}}}, {\"weight\": 5, \"podAffinityTerm\": {\"topologyKey\": \"kubernetes.io/hostname\", \"labelSelector\": {\"matchLabels\": {\"app.kubernetes.io/part-of\": \"argocd\"}}}}]}}, \"nodeName\": \"dsjs\", \"priority\": 0, \"dnsPolicy\": \"ClusterFirst\", \"containers\": [{\"env\": [{\"name\": \"ARGOCD_RECONCILIATION_TIMEOUT\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"timeout.reconciliation\", \"name\": \"argocd-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_REPO_SERVER_LOGFORMAT\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"reposerver.log.format\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_REPO_SERVER_LOGLEVEL\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"reposerver.log.level\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_REPO_SERVER_PARALLELISM_LIMIT\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"reposerver.parallelism.limit\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_REPO_SERVER_DISABLE_TLS\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"reposerver.disable.tls\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_TLS_MIN_VERSION\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"reposerver.tls.minversion\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_TLS_MAX_VERSION\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"reposerver.tls.maxversion\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_TLS_CIPHERS\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"reposerver.tls.ciphers\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_REPO_CACHE_EXPIRATION\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"reposerver.repo.cache.expiration\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"REDIS_SERVER\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"redis.server\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"REDISDB\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"redis.db\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_DEFAULT_CACHE_EXPIRATION\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"reposerver.default.cache.expiration\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}], \"name\": \"argocd-repo-server\", \"image\": \"argoproj/argocd:v2.1.2\", \"ports\": [{\"protocol\": \"TCP\", \"containerPort\": 8081}, {\"protocol\": \"TCP\", \"containerPort\": 8084}], \"command\": [\"entrypoint.sh\", \"argocd-repo-server\", \"--redis\", \"argocd-redis:6379\"], \"resources\": {}, \"volumeMounts\": [{\"name\": \"ssh-known-hosts\", \"mountPath\": \"/app/config/ssh\"}, {\"name\": \"tls-certs\", \"mountPath\": \"/app/config/tls\"}, {\"name\": \"gpg-keys\", \"mountPath\": \"/app/config/gpg/source\"}, {\"name\": \"gpg-keyring\", \"mountPath\": \"/app/config/gpg/keys\"}, {\"name\": \"argocd-repo-server-tls\", \"mountPath\": \"/app/config/reposerver/tls\"}, {\"name\": \"tmp\", \"mountPath\": \"/tmp\"}], \"livenessProbe\": {\"httpGet\": {\"path\": \"/healthz?full=true\", \"port\": 8084, \"scheme\": \"HTTP\"}, \"periodSeconds\": 5, \"timeoutSeconds\": 1, \"failureThreshold\": 3, \"successThreshold\": 1, \"initialDelaySeconds\": 30}, \"readinessProbe\": {\"httpGet\": {\"path\": \"/healthz\", \"port\": 8084, \"scheme\": \"HTTP\"}, \"periodSeconds\": 10, \"timeoutSeconds\": 1, \"failureThreshold\": 3, \"successThreshold\": 1, \"initialDelaySeconds\": 5}, \"imagePullPolicy\": \"Always\", \"securityContext\": {\"capabilities\": {\"drop\": [\"all\"]}, \"runAsNonRoot\": true, \"readOnlyRootFilesystem\": true, \"allowPrivilegeEscalation\": false}, \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"tolerations\": [{\"key\": \"node.kubernetes.io/not-ready\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}, {\"key\": \"node.kubernetes.io/unreachable\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}], \"restartPolicy\": \"Always\", \"schedulerName\": \"default-scheduler\", \"serviceAccount\": \"default\", \"securityContext\": {}, \"preemptionPolicy\": \"PreemptLowerPriority\", \"enableServiceLinks\": true, \"serviceAccountName\": \"default\", \"automountServiceAccountToken\": false, \"terminationGracePeriodSeconds\": 30}, \"status\": {\"phase\": \"Running\", \"podIP\": \"10.244.0.208\", \"hostIP\": \"172.17.70.144\", \"podIPs\": [{\"ip\": \"10.244.0.208\"}], \"qosClass\": \"BestEffort\", \"startTime\": \"2022-01-19T16:02:38Z\", \"conditions\": [{\"type\": \"Initialized\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-01-19T16:02:38Z\"}, {\"type\": \"Ready\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-02-10T18:06:58Z\"}, {\"type\": \"ContainersReady\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-02-10T18:06:58Z\"}, {\"type\": \"PodScheduled\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-01-19T16:02:38Z\"}], \"containerStatuses\": [{\"name\": \"argocd-repo-server\", \"image\": \"argoproj/argocd:v2.1.2\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2022-02-10T18:06:52Z\"}}, \"imageID\": \"docker-pullable://argoproj/argocd@sha256:2e0e725c9282bfb7b08bea7dbbfd8dbce6410d670e3f8addd9b6540d818ad520\", \"started\": true, \"lastState\": {\"terminated\": {\"reason\": \"Error\", \"exitCode\": 143, \"startedAt\": \"2022-01-19T16:03:32Z\", \"finishedAt\": \"2022-02-10T18:04:45Z\", \"containerID\": \"docker://5f2582c697e9be9fb4e8d3492a4fbc9c964b7f82719afd3c6da8ab5f53ad151e\"}}, \"containerID\": \"docker://247d42f3a4e0f9e832a571a09e42d08f5d0899d705a3dd5dc317e15ae91208ac\", \"restartCount\": 1}]}, \"metadata\": {\"uid\": \"44b3641b-e3bb-433c-87dc-b4fc2d41fa97\", \"name\": \"argocd-repo-server-75fdf4dfbf-vkj4k\", \"labels\": {\"pod-template-hash\": \"75fdf4dfbf\", \"app.kubernetes.io/name\": \"argocd-repo-server\"}, \"namespace\": \"argocd\", \"generateName\": \"argocd-repo-server-75fdf4dfbf-\", \"managedFields\": [{\"time\": \"2022-01-19T16:02:38Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:spec\": {\"f:volumes\": {\".\": {}, \"k:{\\\"name\\\":\\\"tmp\\\"}\": {\".\": {}, \"f:name\": {}, \"f:emptyDir\": {}}, \"k:{\\\"name\\\":\\\"gpg-keys\\\"}\": {\".\": {}, \"f:name\": {}, \"f:configMap\": {\".\": {}, \"f:name\": {}, \"f:defaultMode\": {}}}, \"k:{\\\"name\\\":\\\"tls-certs\\\"}\": {\".\": {}, \"f:name\": {}, \"f:configMap\": {\".\": {}, \"f:name\": {}, \"f:defaultMode\": {}}}, \"k:{\\\"name\\\":\\\"gpg-keyring\\\"}\": {\".\": {}, \"f:name\": {}, \"f:emptyDir\": {}}, \"k:{\\\"name\\\":\\\"ssh-known-hosts\\\"}\": {\".\": {}, \"f:name\": {}, \"f:configMap\": {\".\": {}, \"f:name\": {}, \"f:defaultMode\": {}}}, \"k:{\\\"name\\\":\\\"argocd-repo-server-tls\\\"}\": {\".\": {}, \"f:name\": {}, \"f:secret\": {\".\": {}, \"f:items\": {}, \"f:optional\": {}, \"f:secretName\": {}, \"f:defaultMode\": {}}}}, \"f:affinity\": {\".\": {}, \"f:podAntiAffinity\": {\".\": {}, \"f:preferredDuringSchedulingIgnoredDuringExecution\": {}}}, \"f:dnsPolicy\": {}, \"f:containers\": {\"k:{\\\"name\\\":\\\"argocd-repo-server\\\"}\": {\".\": {}, \"f:env\": {\".\": {}, \"k:{\\\"name\\\":\\\"REDISDB\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"REDIS_SERVER\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_TLS_CIPHERS\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_TLS_MAX_VERSION\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_TLS_MIN_VERSION\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_REPO_SERVER_LOGLEVEL\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_REPO_CACHE_EXPIRATION\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_REPO_SERVER_LOGFORMAT\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_RECONCILIATION_TIMEOUT\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_REPO_SERVER_DISABLE_TLS\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_DEFAULT_CACHE_EXPIRATION\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_REPO_SERVER_PARALLELISM_LIMIT\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}}, \"f:name\": {}, \"f:image\": {}, \"f:ports\": {\".\": {}, \"k:{\\\"containerPort\\\":8081,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}, \"k:{\\\"containerPort\\\":8084,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}}, \"f:command\": {}, \"f:resources\": {}, \"f:volumeMounts\": {\".\": {}, \"k:{\\\"mountPath\\\":\\\"/tmp\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/app/config/ssh\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/app/config/tls\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/app/config/gpg/keys\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/app/config/gpg/source\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/app/config/reposerver/tls\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}}, \"f:livenessProbe\": {\".\": {}, \"f:httpGet\": {\".\": {}, \"f:path\": {}, \"f:port\": {}, \"f:scheme\": {}}, \"f:periodSeconds\": {}, \"f:timeoutSeconds\": {}, \"f:failureThreshold\": {}, \"f:successThreshold\": {}, \"f:initialDelaySeconds\": {}}, \"f:readinessProbe\": {\".\": {}, \"f:httpGet\": {\".\": {}, \"f:path\": {}, \"f:port\": {}, \"f:scheme\": {}}, \"f:periodSeconds\": {}, \"f:timeoutSeconds\": {}, \"f:failureThreshold\": {}, \"f:successThreshold\": {}, \"f:initialDelaySeconds\": {}}, \"f:imagePullPolicy\": {}, \"f:securityContext\": {\".\": {}, \"f:capabilities\": {\".\": {}, \"f:drop\": {}}, \"f:runAsNonRoot\": {}, \"f:readOnlyRootFilesystem\": {}, \"f:allowPrivilegeEscalation\": {}}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:restartPolicy\": {}, \"f:schedulerName\": {}, \"f:securityContext\": {}, \"f:enableServiceLinks\": {}, \"f:automountServiceAccountToken\": {}, \"f:terminationGracePeriodSeconds\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:pod-template-hash\": {}, \"f:app.kubernetes.io/name\": {}}, \"f:generateName\": {}, \"f:ownerReferences\": {\".\": {}, \"k:{\\\"uid\\\":\\\"8ca69e6e-c521-41ee-837c-c8d638327d58\\\"}\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2022-02-10T18:06:58Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:status\": {\"f:phase\": {}, \"f:podIP\": {}, \"f:hostIP\": {}, \"f:podIPs\": {\".\": {}, \"k:{\\\"ip\\\":\\\"10.244.0.208\\\"}\": {\".\": {}, \"f:ip\": {}}}, \"f:startTime\": {}, \"f:conditions\": {\"k:{\\\"type\\\":\\\"Ready\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"Initialized\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"ContainersReady\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}, \"f:containerStatuses\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}], \"ownerReferences\": [{\"uid\": \"8ca69e6e-c521-41ee-837c-c8d638327d58\", \"kind\": \"ReplicaSet\", \"name\": \"argocd-repo-server-75fdf4dfbf\", \"apiVersion\": \"apps/v1\", \"controller\": true, \"blockOwnerDeletion\": true}], \"resourceVersion\": \"117699186\", \"creationTimestamp\": \"2022-01-19T16:02:38Z\"}, \"apiVersion\": \"v1\"}', '2022-01-20 00:02:38', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (859, 'kube-system', 'coredns-78fcd69978-t4mk6', '', 'v1', 'pods', 'Pod', '31164879', '917ff575-3c1a-4547-963f-d41ad7874b93', '73e0584a-9816-4b83-bb0d-2b26085bf73d', '6ca06983e051d3fff81a', '{\"kind\": \"Pod\", \"spec\": {\"volumes\": [{\"name\": \"config-volume\", \"configMap\": {\"name\": \"coredns\", \"items\": [{\"key\": \"Corefile\", \"path\": \"Corefile\"}], \"defaultMode\": 420}}, {\"name\": \"kube-api-access-2mzvz\", \"projected\": {\"sources\": [{\"serviceAccountToken\": {\"path\": \"token\", \"expirationSeconds\": 3607}}, {\"configMap\": {\"name\": \"kube-root-ca.crt\", \"items\": [{\"key\": \"ca.crt\", \"path\": \"ca.crt\"}]}}, {\"downwardAPI\": {\"items\": [{\"path\": \"namespace\", \"fieldRef\": {\"fieldPath\": \"metadata.namespace\", \"apiVersion\": \"v1\"}}]}}], \"defaultMode\": 420}}], \"nodeName\": \"dsjs\", \"priority\": 2000000000, \"dnsPolicy\": \"Default\", \"containers\": [{\"args\": [\"-conf\", \"/etc/coredns/Corefile\"], \"name\": \"coredns\", \"image\": \"k8s.gcr.io/coredns/coredns:v1.8.4\", \"ports\": [{\"name\": \"dns\", \"protocol\": \"UDP\", \"containerPort\": 53}, {\"name\": \"dns-tcp\", \"protocol\": \"TCP\", \"containerPort\": 53}, {\"name\": \"metrics\", \"protocol\": \"TCP\", \"containerPort\": 9153}], \"resources\": {\"limits\": {\"memory\": \"170Mi\"}, \"requests\": {\"cpu\": \"100m\", \"memory\": \"70Mi\"}}, \"volumeMounts\": [{\"name\": \"config-volume\", \"readOnly\": true, \"mountPath\": \"/etc/coredns\"}, {\"name\": \"kube-api-access-2mzvz\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\"}], \"livenessProbe\": {\"httpGet\": {\"path\": \"/health\", \"port\": 8080, \"scheme\": \"HTTP\"}, \"periodSeconds\": 10, \"timeoutSeconds\": 5, \"failureThreshold\": 5, \"successThreshold\": 1, \"initialDelaySeconds\": 60}, \"readinessProbe\": {\"httpGet\": {\"path\": \"/ready\", \"port\": 8181, \"scheme\": \"HTTP\"}, \"periodSeconds\": 10, \"timeoutSeconds\": 1, \"failureThreshold\": 3, \"successThreshold\": 1}, \"imagePullPolicy\": \"IfNotPresent\", \"securityContext\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"], \"drop\": [\"all\"]}, \"readOnlyRootFilesystem\": true, \"allowPrivilegeEscalation\": false}, \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"tolerations\": [{\"key\": \"CriticalAddonsOnly\", \"operator\": \"Exists\"}, {\"key\": \"node-role.kubernetes.io/master\", \"effect\": \"NoSchedule\"}, {\"key\": \"node-role.kubernetes.io/control-plane\", \"effect\": \"NoSchedule\"}, {\"key\": \"node.kubernetes.io/not-ready\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}, {\"key\": \"node.kubernetes.io/unreachable\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}], \"nodeSelector\": {\"kubernetes.io/os\": \"linux\"}, \"restartPolicy\": \"Always\", \"schedulerName\": \"default-scheduler\", \"serviceAccount\": \"coredns\", \"securityContext\": {}, \"preemptionPolicy\": \"PreemptLowerPriority\", \"priorityClassName\": \"system-cluster-critical\", \"enableServiceLinks\": true, \"serviceAccountName\": \"coredns\", \"terminationGracePeriodSeconds\": 30}, \"status\": {\"phase\": \"Running\", \"podIP\": \"10.244.0.28\", \"hostIP\": \"172.17.70.144\", \"podIPs\": [{\"ip\": \"10.244.0.28\"}], \"qosClass\": \"Burstable\", \"startTime\": \"2021-08-16T18:29:17Z\", \"conditions\": [{\"type\": \"Initialized\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-08-16T18:29:17Z\"}, {\"type\": \"Ready\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-08-30T08:33:43Z\"}, {\"type\": \"ContainersReady\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-08-30T08:33:43Z\"}, {\"type\": \"PodScheduled\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-08-16T18:29:17Z\"}], \"containerStatuses\": [{\"name\": \"coredns\", \"image\": \"k8s.gcr.io/coredns/coredns:v1.8.4\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2021-08-30T08:33:40Z\"}}, \"imageID\": \"docker://sha256:8d147537fb7d1ac8895da4d55a5e53621949981e2e6460976dae812f83d84a44\", \"started\": true, \"lastState\": {\"terminated\": {\"reason\": \"Error\", \"exitCode\": 255, \"startedAt\": \"2021-08-30T08:12:05Z\", \"finishedAt\": \"2021-08-30T08:32:18Z\", \"containerID\": \"docker://a61de8799c5ebdb6a50042fc7c05b5046053e8ee5c4b07daebbcfbc7681c9415\"}}, \"containerID\": \"docker://3a8f28041c6c0157cfda9d1ea4b0b68476a635051d3d8cd7609bd27d72e0278b\", \"restartCount\": 2}]}, \"metadata\": {\"uid\": \"73e0584a-9816-4b83-bb0d-2b26085bf73d\", \"name\": \"coredns-78fcd69978-t4mk6\", \"labels\": {\"k8s-app\": \"kube-dns\", \"pod-template-hash\": \"78fcd69978\"}, \"namespace\": \"kube-system\", \"generateName\": \"coredns-78fcd69978-\", \"managedFields\": [{\"time\": \"2021-08-16T18:25:09Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:spec\": {\"f:volumes\": {\".\": {}, \"k:{\\\"name\\\":\\\"config-volume\\\"}\": {\".\": {}, \"f:name\": {}, \"f:configMap\": {\".\": {}, \"f:name\": {}, \"f:items\": {}, \"f:defaultMode\": {}}}}, \"f:dnsPolicy\": {}, \"f:containers\": {\"k:{\\\"name\\\":\\\"coredns\\\"}\": {\".\": {}, \"f:args\": {}, \"f:name\": {}, \"f:image\": {}, \"f:ports\": {\".\": {}, \"k:{\\\"containerPort\\\":53,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:name\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}, \"k:{\\\"containerPort\\\":53,\\\"protocol\\\":\\\"UDP\\\"}\": {\".\": {}, \"f:name\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}, \"k:{\\\"containerPort\\\":9153,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:name\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}}, \"f:resources\": {\".\": {}, \"f:limits\": {\".\": {}, \"f:memory\": {}}, \"f:requests\": {\".\": {}, \"f:cpu\": {}, \"f:memory\": {}}}, \"f:volumeMounts\": {\".\": {}, \"k:{\\\"mountPath\\\":\\\"/etc/coredns\\\"}\": {\".\": {}, \"f:name\": {}, \"f:readOnly\": {}, \"f:mountPath\": {}}}, \"f:livenessProbe\": {\".\": {}, \"f:httpGet\": {\".\": {}, \"f:path\": {}, \"f:port\": {}, \"f:scheme\": {}}, \"f:periodSeconds\": {}, \"f:timeoutSeconds\": {}, \"f:failureThreshold\": {}, \"f:successThreshold\": {}, \"f:initialDelaySeconds\": {}}, \"f:readinessProbe\": {\".\": {}, \"f:httpGet\": {\".\": {}, \"f:path\": {}, \"f:port\": {}, \"f:scheme\": {}}, \"f:periodSeconds\": {}, \"f:timeoutSeconds\": {}, \"f:failureThreshold\": {}, \"f:successThreshold\": {}}, \"f:imagePullPolicy\": {}, \"f:securityContext\": {\".\": {}, \"f:capabilities\": {\".\": {}, \"f:add\": {}, \"f:drop\": {}}, \"f:readOnlyRootFilesystem\": {}, \"f:allowPrivilegeEscalation\": {}}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:tolerations\": {}, \"f:nodeSelector\": {}, \"f:restartPolicy\": {}, \"f:schedulerName\": {}, \"f:serviceAccount\": {}, \"f:securityContext\": {}, \"f:priorityClassName\": {}, \"f:enableServiceLinks\": {}, \"f:serviceAccountName\": {}, \"f:terminationGracePeriodSeconds\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:k8s-app\": {}, \"f:pod-template-hash\": {}}, \"f:generateName\": {}, \"f:ownerReferences\": {\".\": {}, \"k:{\\\"uid\\\":\\\"917ff575-3c1a-4547-963f-d41ad7874b93\\\"}\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2021-08-16T18:25:09Z\", \"manager\": \"kube-scheduler\", \"fieldsV1\": {\"f:status\": {\"f:conditions\": {\".\": {}, \"k:{\\\"type\\\":\\\"PodScheduled\\\"}\": {\".\": {}, \"f:type\": {}, \"f:reason\": {}, \"f:status\": {}, \"f:message\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}, {\"time\": \"2021-08-30T08:33:43Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:status\": {\"f:phase\": {}, \"f:podIP\": {}, \"f:hostIP\": {}, \"f:podIPs\": {\".\": {}, \"k:{\\\"ip\\\":\\\"10.244.0.28\\\"}\": {\".\": {}, \"f:ip\": {}}}, \"f:startTime\": {}, \"f:conditions\": {\"k:{\\\"type\\\":\\\"Ready\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"Initialized\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"ContainersReady\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}, \"f:containerStatuses\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}], \"ownerReferences\": [{\"uid\": \"917ff575-3c1a-4547-963f-d41ad7874b93\", \"kind\": \"ReplicaSet\", \"name\": \"coredns-78fcd69978\", \"apiVersion\": \"apps/v1\", \"controller\": true, \"blockOwnerDeletion\": true}], \"resourceVersion\": \"31164879\", \"creationTimestamp\": \"2021-08-16T18:25:09Z\"}, \"apiVersion\": \"v1\"}', '2021-08-17 02:25:09', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (860, 'kube-system', 'kube-controller-manager-dsjs', '', 'v1', 'pods', 'Pod', '155111096', 'f87a4d29-ccdc-452e-a510-ba5c16954185', '9cdbb7f1-3754-4342-99e5-6fa45e2ff35a', 'c2a2bab599641d9fe946', '{\"kind\": \"Pod\", \"spec\": {\"volumes\": [{\"name\": \"ca-certs\", \"hostPath\": {\"path\": \"/etc/ssl/certs\", \"type\": \"DirectoryOrCreate\"}}, {\"name\": \"etc-pki\", \"hostPath\": {\"path\": \"/etc/pki\", \"type\": \"DirectoryOrCreate\"}}, {\"name\": \"flexvolume-dir\", \"hostPath\": {\"path\": \"/usr/libexec/kubernetes/kubelet-plugins/volume/exec\", \"type\": \"DirectoryOrCreate\"}}, {\"name\": \"k8s-certs\", \"hostPath\": {\"path\": \"/etc/kubernetes/pki\", \"type\": \"DirectoryOrCreate\"}}, {\"name\": \"kubeconfig\", \"hostPath\": {\"path\": \"/etc/kubernetes/controller-manager.conf\", \"type\": \"FileOrCreate\"}}], \"nodeName\": \"dsjs\", \"priority\": 2000001000, \"dnsPolicy\": \"ClusterFirst\", \"containers\": [{\"name\": \"kube-controller-manager\", \"image\": \"k8s.gcr.io/kube-controller-manager:v1.22.0\", \"command\": [\"kube-controller-manager\", \"--allocate-node-cidrs=true\", \"--authentication-kubeconfig=/etc/kubernetes/controller-manager.conf\", \"--authorization-kubeconfig=/etc/kubernetes/controller-manager.conf\", \"--bind-address=127.0.0.1\", \"--client-ca-file=/etc/kubernetes/pki/ca.crt\", \"--cluster-cidr=10.244.0.0/16\", \"--cluster-name=kubernetes\", \"--cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt\", \"--cluster-signing-key-file=/etc/kubernetes/pki/ca.key\", \"--controllers=*,bootstrapsigner,tokencleaner\", \"--kubeconfig=/etc/kubernetes/controller-manager.conf\", \"--leader-elect=true\", \"--port=0\", \"--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt\", \"--root-ca-file=/etc/kubernetes/pki/ca.crt\", \"--service-account-private-key-file=/etc/kubernetes/pki/sa.key\", \"--service-cluster-ip-range=10.96.0.0/12\", \"--use-service-account-credentials=true\"], \"resources\": {\"requests\": {\"cpu\": \"200m\"}}, \"startupProbe\": {\"httpGet\": {\"host\": \"127.0.0.1\", \"path\": \"/healthz\", \"port\": 10257, \"scheme\": \"HTTPS\"}, \"periodSeconds\": 10, \"timeoutSeconds\": 15, \"failureThreshold\": 24, \"successThreshold\": 1, \"initialDelaySeconds\": 10}, \"volumeMounts\": [{\"name\": \"ca-certs\", \"readOnly\": true, \"mountPath\": \"/etc/ssl/certs\"}, {\"name\": \"etc-pki\", \"readOnly\": true, \"mountPath\": \"/etc/pki\"}, {\"name\": \"flexvolume-dir\", \"mountPath\": \"/usr/libexec/kubernetes/kubelet-plugins/volume/exec\"}, {\"name\": \"k8s-certs\", \"readOnly\": true, \"mountPath\": \"/etc/kubernetes/pki\"}, {\"name\": \"kubeconfig\", \"readOnly\": true, \"mountPath\": \"/etc/kubernetes/controller-manager.conf\"}], \"livenessProbe\": {\"httpGet\": {\"host\": \"127.0.0.1\", \"path\": \"/healthz\", \"port\": 10257, \"scheme\": \"HTTPS\"}, \"periodSeconds\": 10, \"timeoutSeconds\": 15, \"failureThreshold\": 8, \"successThreshold\": 1, \"initialDelaySeconds\": 10}, \"imagePullPolicy\": \"IfNotPresent\", \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"hostNetwork\": true, \"tolerations\": [{\"effect\": \"NoExecute\", \"operator\": \"Exists\"}], \"restartPolicy\": \"Always\", \"schedulerName\": \"default-scheduler\", \"securityContext\": {\"seccompProfile\": {\"type\": \"RuntimeDefault\"}}, \"preemptionPolicy\": \"PreemptLowerPriority\", \"priorityClassName\": \"system-node-critical\", \"enableServiceLinks\": true, \"terminationGracePeriodSeconds\": 30}, \"status\": {\"phase\": \"Running\", \"podIP\": \"172.17.70.144\", \"hostIP\": \"172.17.70.144\", \"podIPs\": [{\"ip\": \"172.17.70.144\"}], \"qosClass\": \"Burstable\", \"startTime\": \"2021-08-30T08:32:24Z\", \"conditions\": [{\"type\": \"Initialized\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-08-30T08:32:24Z\"}, {\"type\": \"Ready\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-08-16T18:25:08Z\"}, {\"type\": \"ContainersReady\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-08-16T18:25:08Z\"}, {\"type\": \"PodScheduled\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-08-30T08:32:24Z\"}], \"containerStatuses\": [{\"name\": \"kube-controller-manager\", \"image\": \"k8s.gcr.io/kube-controller-manager:v1.22.0\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2022-08-16T18:24:55Z\"}}, \"imageID\": \"docker-pullable://registry.aliyuncs.com/google_containers/kube-controller-manager@sha256:796095b22f014e4b7850316333e46c49c172f8a99a10943f76a9ba77af6ddfb7\", \"started\": true, \"lastState\": {\"terminated\": {\"reason\": \"Error\", \"exitCode\": 255, \"startedAt\": \"2021-08-30T08:32:25Z\", \"finishedAt\": \"2022-08-16T18:24:54Z\", \"containerID\": \"docker://b38702e0c05e0c87d2baee2433354ffe23971583ad185454574734066aba57bc\"}}, \"containerID\": \"docker://a5f065794fc9328ea690d52191e41da77fd37505fd2acc791733dd91159d0781\", \"restartCount\": 3}]}, \"metadata\": {\"uid\": \"9cdbb7f1-3754-4342-99e5-6fa45e2ff35a\", \"name\": \"kube-controller-manager-dsjs\", \"labels\": {\"tier\": \"control-plane\", \"component\": \"kube-controller-manager\"}, \"namespace\": \"kube-system\", \"annotations\": {\"kubernetes.io/config.hash\": \"34207cfeb3f6035a893de159f2a644d0\", \"kubernetes.io/config.seen\": \"2021-08-17T02:24:55.405406103+08:00\", \"kubernetes.io/config.mirror\": \"34207cfeb3f6035a893de159f2a644d0\", \"kubernetes.io/config.source\": \"file\", \"seccomp.security.alpha.kubernetes.io/pod\": \"runtime/default\"}, \"managedFields\": [{\"time\": \"2021-08-16T18:24:56Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:spec\": {\"f:volumes\": {\".\": {}, \"k:{\\\"name\\\":\\\"etc-pki\\\"}\": {\".\": {}, \"f:name\": {}, \"f:hostPath\": {\".\": {}, \"f:path\": {}, \"f:type\": {}}}, \"k:{\\\"name\\\":\\\"ca-certs\\\"}\": {\".\": {}, \"f:name\": {}, \"f:hostPath\": {\".\": {}, \"f:path\": {}, \"f:type\": {}}}, \"k:{\\\"name\\\":\\\"k8s-certs\\\"}\": {\".\": {}, \"f:name\": {}, \"f:hostPath\": {\".\": {}, \"f:path\": {}, \"f:type\": {}}}, \"k:{\\\"name\\\":\\\"kubeconfig\\\"}\": {\".\": {}, \"f:name\": {}, \"f:hostPath\": {\".\": {}, \"f:path\": {}, \"f:type\": {}}}, \"k:{\\\"name\\\":\\\"flexvolume-dir\\\"}\": {\".\": {}, \"f:name\": {}, \"f:hostPath\": {\".\": {}, \"f:path\": {}, \"f:type\": {}}}}, \"f:nodeName\": {}, \"f:dnsPolicy\": {}, \"f:containers\": {\"k:{\\\"name\\\":\\\"kube-controller-manager\\\"}\": {\".\": {}, \"f:name\": {}, \"f:image\": {}, \"f:command\": {}, \"f:resources\": {\".\": {}, \"f:requests\": {\".\": {}, \"f:cpu\": {}}}, \"f:startupProbe\": {\".\": {}, \"f:httpGet\": {\".\": {}, \"f:host\": {}, \"f:path\": {}, \"f:port\": {}, \"f:scheme\": {}}, \"f:periodSeconds\": {}, \"f:timeoutSeconds\": {}, \"f:failureThreshold\": {}, \"f:successThreshold\": {}, \"f:initialDelaySeconds\": {}}, \"f:volumeMounts\": {\".\": {}, \"k:{\\\"mountPath\\\":\\\"/etc/pki\\\"}\": {\".\": {}, \"f:name\": {}, \"f:readOnly\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/etc/ssl/certs\\\"}\": {\".\": {}, \"f:name\": {}, \"f:readOnly\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/etc/kubernetes/pki\\\"}\": {\".\": {}, \"f:name\": {}, \"f:readOnly\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/etc/kubernetes/controller-manager.conf\\\"}\": {\".\": {}, \"f:name\": {}, \"f:readOnly\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/usr/libexec/kubernetes/kubelet-plugins/volume/exec\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}}, \"f:livenessProbe\": {\".\": {}, \"f:httpGet\": {\".\": {}, \"f:host\": {}, \"f:path\": {}, \"f:port\": {}, \"f:scheme\": {}}, \"f:periodSeconds\": {}, \"f:timeoutSeconds\": {}, \"f:failureThreshold\": {}, \"f:successThreshold\": {}, \"f:initialDelaySeconds\": {}}, \"f:imagePullPolicy\": {}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:hostNetwork\": {}, \"f:tolerations\": {}, \"f:restartPolicy\": {}, \"f:schedulerName\": {}, \"f:securityContext\": {\".\": {}, \"f:seccompProfile\": {\".\": {}, \"f:type\": {}}}, \"f:priorityClassName\": {}, \"f:enableServiceLinks\": {}, \"f:terminationGracePeriodSeconds\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:tier\": {}, \"f:component\": {}}, \"f:annotations\": {\".\": {}, \"f:kubernetes.io/config.hash\": {}, \"f:kubernetes.io/config.seen\": {}, \"f:kubernetes.io/config.mirror\": {}, \"f:kubernetes.io/config.source\": {}}, \"f:ownerReferences\": {\".\": {}, \"k:{\\\"uid\\\":\\\"f87a4d29-ccdc-452e-a510-ba5c16954185\\\"}\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2022-08-16T18:25:08Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:status\": {\"f:phase\": {}, \"f:podIP\": {}, \"f:hostIP\": {}, \"f:podIPs\": {\".\": {}, \"k:{\\\"ip\\\":\\\"172.17.70.144\\\"}\": {\".\": {}, \"f:ip\": {}}}, \"f:startTime\": {}, \"f:conditions\": {\".\": {}, \"k:{\\\"type\\\":\\\"Ready\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"Initialized\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"PodScheduled\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"ContainersReady\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}, \"f:containerStatuses\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}], \"ownerReferences\": [{\"uid\": \"f87a4d29-ccdc-452e-a510-ba5c16954185\", \"kind\": \"Node\", \"name\": \"dsjs\", \"apiVersion\": \"v1\", \"controller\": true}], \"resourceVersion\": \"155111096\", \"creationTimestamp\": \"2021-08-16T18:24:56Z\"}, \"apiVersion\": \"v1\"}', '2021-08-17 02:24:56', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (861, 'myhost', 'myvc1-0', '', 'v1', 'pods', 'Pod', '157302390', '2567071d-d921-40b4-8ef1-4356fe1a0207', 'bbb5b8e4-672d-4934-8030-f3fdf918fd13', '36815df278959744d3ae', '{\"kind\": \"Pod\", \"spec\": {\"volumes\": [{\"name\": \"config\", \"emptyDir\": {}}, {\"name\": \"coredns\", \"configMap\": {\"name\": \"myvc1-coredns\", \"defaultMode\": 420}}, {\"name\": \"data\", \"emptyDir\": {}}, {\"name\": \"kube-api-access-mp4n2\", \"projected\": {\"sources\": [{\"serviceAccountToken\": {\"path\": \"token\", \"expirationSeconds\": 3607}}, {\"configMap\": {\"name\": \"kube-root-ca.crt\", \"items\": [{\"key\": \"ca.crt\", \"path\": \"ca.crt\"}]}}, {\"downwardAPI\": {\"items\": [{\"path\": \"namespace\", \"fieldRef\": {\"fieldPath\": \"metadata.namespace\", \"apiVersion\": \"v1\"}}]}}], \"defaultMode\": 420}}], \"affinity\": {}, \"hostname\": \"myvc1-0\", \"nodeName\": \"dsjs2\", \"priority\": 0, \"dnsPolicy\": \"ClusterFirst\", \"subdomain\": \"myvc1-headless\", \"containers\": [{\"env\": [{\"name\": \"SERVICE_CIDR\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"cidr\", \"name\": \"vc-cidr-myvc1\"}}}], \"args\": [\"-c\", \"/bin/k3s server --write-kubeconfig=/data/k3s-config/kube-config.yaml --data-dir=/data --disable=traefik,servicelb,metrics-server,local-storage,coredns --disable-network-policy --disable-agent --disable-cloud-controller --flannel-backend=none --disable-scheduler --kube-controller-manager-arg=controllers=*,-nodeipam,-nodelifecycle,-persistentvolume-binder,-attachdetach,-persistentvolume-expander,-cloud-node-lifecycle --kube-apiserver-arg=endpoint-reconciler-type=none --service-cidr=$(SERVICE_CIDR) && true\"], \"name\": \"vcluster\", \"image\": \"rancher/k3s:v1.24.1-rc1-k3s1\", \"command\": [\"/bin/sh\"], \"resources\": {\"limits\": {\"memory\": \"2Gi\"}, \"requests\": {\"cpu\": \"200m\", \"memory\": \"256Mi\"}}, \"volumeMounts\": [{\"name\": \"config\", \"mountPath\": \"/etc/rancher\"}, {\"name\": \"data\", \"mountPath\": \"/data\"}, {\"name\": \"kube-api-access-mp4n2\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\"}], \"imagePullPolicy\": \"IfNotPresent\", \"securityContext\": {\"allowPrivilegeEscalation\": false}, \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}, {\"env\": [{\"name\": \"POD_IP\", \"valueFrom\": {\"fieldRef\": {\"fieldPath\": \"status.podIP\", \"apiVersion\": \"v1\"}}}], \"args\": [\"--name=myvc1\", \"--service-account=vc-workload-myvc1\", \"--kube-config-context-name=my-vcluster\", \"--tls-san=myvc1.jtthink.com\"], \"name\": \"syncer\", \"image\": \"loftsh/vcluster:0.11.1\", \"resources\": {\"limits\": {\"memory\": \"1Gi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"64Mi\"}}, \"volumeMounts\": [{\"name\": \"coredns\", \"readOnly\": true, \"mountPath\": \"/manifests/coredns\"}, {\"name\": \"data\", \"readOnly\": true, \"mountPath\": \"/data\"}, {\"name\": \"kube-api-access-mp4n2\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\"}], \"livenessProbe\": {\"httpGet\": {\"path\": \"/healthz\", \"port\": 8443, \"scheme\": \"HTTPS\"}, \"periodSeconds\": 2, \"timeoutSeconds\": 1, \"failureThreshold\": 60, \"successThreshold\": 1, \"initialDelaySeconds\": 60}, \"readinessProbe\": {\"httpGet\": {\"path\": \"/readyz\", \"port\": 8443, \"scheme\": \"HTTPS\"}, \"periodSeconds\": 2, \"timeoutSeconds\": 1, \"failureThreshold\": 60, \"successThreshold\": 1}, \"imagePullPolicy\": \"IfNotPresent\", \"securityContext\": {\"allowPrivilegeEscalation\": false}, \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"tolerations\": [{\"key\": \"node.kubernetes.io/not-ready\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}, {\"key\": \"node.kubernetes.io/unreachable\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}], \"restartPolicy\": \"Always\", \"schedulerName\": \"default-scheduler\", \"serviceAccount\": \"vc-myvc1\", \"securityContext\": {}, \"preemptionPolicy\": \"PreemptLowerPriority\", \"enableServiceLinks\": true, \"serviceAccountName\": \"vc-myvc1\", \"terminationGracePeriodSeconds\": 10}, \"status\": {\"phase\": \"Running\", \"podIP\": \"10.244.1.60\", \"hostIP\": \"172.17.70.145\", \"podIPs\": [{\"ip\": \"10.244.1.60\"}], \"qosClass\": \"Burstable\", \"startTime\": \"2022-08-29T17:51:20Z\", \"conditions\": [{\"type\": \"Initialized\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-08-29T17:51:20Z\"}, {\"type\": \"Ready\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-08-29T17:51:32Z\"}, {\"type\": \"ContainersReady\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-08-29T17:51:32Z\"}, {\"type\": \"PodScheduled\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-08-29T17:51:20Z\"}], \"containerStatuses\": [{\"name\": \"syncer\", \"image\": \"loftsh/vcluster:0.11.1\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2022-08-29T17:51:21Z\"}}, \"imageID\": \"docker-pullable://loftsh/vcluster@sha256:7dfae0dcbe0428a9321f0ee2bdd16e0ba175cc0253e4cfa200f9a1f302cdfcd5\", \"started\": true, \"lastState\": {}, \"containerID\": \"docker://f6a91a2c6c7992bd004d9c182c0f9b85140dada04747ce9e8ada61915c4607a1\", \"restartCount\": 0}, {\"name\": \"vcluster\", \"image\": \"rancher/k3s:v1.24.1-rc1-k3s1\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2022-08-29T17:51:21Z\"}}, \"imageID\": \"docker-pullable://rancher/k3s@sha256:15ab0b64c93507d15963f197dd84f3778fce4d12d290fca11bcab12dcd4db64b\", \"started\": true, \"lastState\": {}, \"containerID\": \"docker://ed0c1bd43da2455c3d89dd2addd06bb498937d9a163433b8a8b58c8afc927e3c\", \"restartCount\": 0}]}, \"metadata\": {\"uid\": \"bbb5b8e4-672d-4934-8030-f3fdf918fd13\", \"name\": \"myvc1-0\", \"labels\": {\"app\": \"vcluster\", \"release\": \"myvc1\", \"controller-revision-hash\": \"myvc1-58d55f9f7f\", \"statefulset.kubernetes.io/pod-name\": \"myvc1-0\"}, \"namespace\": \"myhost\", \"generateName\": \"myvc1-\", \"managedFields\": [{\"time\": \"2022-08-29T17:51:20Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:spec\": {\"f:volumes\": {\".\": {}, \"k:{\\\"name\\\":\\\"data\\\"}\": {\".\": {}, \"f:name\": {}, \"f:emptyDir\": {}}, \"k:{\\\"name\\\":\\\"config\\\"}\": {\".\": {}, \"f:name\": {}, \"f:emptyDir\": {}}, \"k:{\\\"name\\\":\\\"coredns\\\"}\": {\".\": {}, \"f:name\": {}, \"f:configMap\": {\".\": {}, \"f:name\": {}, \"f:defaultMode\": {}}}}, \"f:affinity\": {}, \"f:hostname\": {}, \"f:dnsPolicy\": {}, \"f:subdomain\": {}, \"f:containers\": {\"k:{\\\"name\\\":\\\"syncer\\\"}\": {\".\": {}, \"f:env\": {\".\": {}, \"k:{\\\"name\\\":\\\"POD_IP\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:fieldRef\": {}}}}, \"f:args\": {}, \"f:name\": {}, \"f:image\": {}, \"f:resources\": {\".\": {}, \"f:limits\": {\".\": {}, \"f:memory\": {}}, \"f:requests\": {\".\": {}, \"f:cpu\": {}, \"f:memory\": {}}}, \"f:volumeMounts\": {\".\": {}, \"k:{\\\"mountPath\\\":\\\"/data\\\"}\": {\".\": {}, \"f:name\": {}, \"f:readOnly\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/manifests/coredns\\\"}\": {\".\": {}, \"f:name\": {}, \"f:readOnly\": {}, \"f:mountPath\": {}}}, \"f:livenessProbe\": {\".\": {}, \"f:httpGet\": {\".\": {}, \"f:path\": {}, \"f:port\": {}, \"f:scheme\": {}}, \"f:periodSeconds\": {}, \"f:timeoutSeconds\": {}, \"f:failureThreshold\": {}, \"f:successThreshold\": {}, \"f:initialDelaySeconds\": {}}, \"f:readinessProbe\": {\".\": {}, \"f:httpGet\": {\".\": {}, \"f:path\": {}, \"f:port\": {}, \"f:scheme\": {}}, \"f:periodSeconds\": {}, \"f:timeoutSeconds\": {}, \"f:failureThreshold\": {}, \"f:successThreshold\": {}}, \"f:imagePullPolicy\": {}, \"f:securityContext\": {\".\": {}, \"f:allowPrivilegeEscalation\": {}}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}, \"k:{\\\"name\\\":\\\"vcluster\\\"}\": {\".\": {}, \"f:env\": {\".\": {}, \"k:{\\\"name\\\":\\\"SERVICE_CIDR\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}}, \"f:args\": {}, \"f:name\": {}, \"f:image\": {}, \"f:command\": {}, \"f:resources\": {\".\": {}, \"f:limits\": {\".\": {}, \"f:memory\": {}}, \"f:requests\": {\".\": {}, \"f:cpu\": {}, \"f:memory\": {}}}, \"f:volumeMounts\": {\".\": {}, \"k:{\\\"mountPath\\\":\\\"/data\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/etc/rancher\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}}, \"f:imagePullPolicy\": {}, \"f:securityContext\": {\".\": {}, \"f:allowPrivilegeEscalation\": {}}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:restartPolicy\": {}, \"f:schedulerName\": {}, \"f:serviceAccount\": {}, \"f:securityContext\": {}, \"f:enableServiceLinks\": {}, \"f:serviceAccountName\": {}, \"f:terminationGracePeriodSeconds\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:app\": {}, \"f:release\": {}, \"f:controller-revision-hash\": {}, \"f:statefulset.kubernetes.io/pod-name\": {}}, \"f:generateName\": {}, \"f:ownerReferences\": {\".\": {}, \"k:{\\\"uid\\\":\\\"2567071d-d921-40b4-8ef1-4356fe1a0207\\\"}\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2022-08-29T17:51:33Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:status\": {\"f:phase\": {}, \"f:podIP\": {}, \"f:hostIP\": {}, \"f:podIPs\": {\".\": {}, \"k:{\\\"ip\\\":\\\"10.244.1.60\\\"}\": {\".\": {}, \"f:ip\": {}}}, \"f:startTime\": {}, \"f:conditions\": {\"k:{\\\"type\\\":\\\"Ready\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"Initialized\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"ContainersReady\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}, \"f:containerStatuses\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}], \"ownerReferences\": [{\"uid\": \"2567071d-d921-40b4-8ef1-4356fe1a0207\", \"kind\": \"StatefulSet\", \"name\": \"myvc1\", \"apiVersion\": \"apps/v1\", \"controller\": true, \"blockOwnerDeletion\": true}], \"resourceVersion\": \"157302390\", \"creationTimestamp\": \"2022-08-29T17:51:20Z\"}, \"apiVersion\": \"v1\"}', '2022-08-30 01:51:20', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (862, 'default', 'testrouter-7bf796c6c6-mkwzd', '', 'v1', 'pods', 'Pod', '157412141', 'f9492f35-b581-4e65-9870-225e31898561', 'f257c73d-1c6f-4a12-b9f2-a4ae2e336d09', '0de04117b07d87ade0b0', '{\"kind\": \"Pod\", \"spec\": {\"volumes\": [{\"name\": \"bindata\", \"hostPath\": {\"path\": \"/home/shenyi/ngxplus/bin\", \"type\": \"\"}}, {\"name\": \"kube-api-access-nhzxn\", \"projected\": {\"sources\": [{\"serviceAccountToken\": {\"path\": \"token\", \"expirationSeconds\": 3607}}, {\"configMap\": {\"name\": \"kube-root-ca.crt\", \"items\": [{\"key\": \"ca.crt\", \"path\": \"ca.crt\"}]}}, {\"downwardAPI\": {\"items\": [{\"path\": \"namespace\", \"fieldRef\": {\"fieldPath\": \"metadata.namespace\", \"apiVersion\": \"v1\"}}]}}], \"defaultMode\": 420}}], \"nodeName\": \"dsjs\", \"priority\": 0, \"dnsPolicy\": \"ClusterFirst\", \"containers\": [{\"name\": \"testrouter\", \"image\": \"alpine:3.12\", \"ports\": [{\"protocol\": \"TCP\", \"containerPort\": 8080}], \"command\": [\"./router\"], \"resources\": {}, \"workingDir\": \"/app\", \"volumeMounts\": [{\"name\": \"bindata\", \"mountPath\": \"/app\"}, {\"name\": \"kube-api-access-nhzxn\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\"}], \"imagePullPolicy\": \"IfNotPresent\", \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"tolerations\": [{\"key\": \"node.kubernetes.io/not-ready\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}, {\"key\": \"node.kubernetes.io/unreachable\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}], \"restartPolicy\": \"Always\", \"schedulerName\": \"default-scheduler\", \"serviceAccount\": \"default\", \"securityContext\": {}, \"preemptionPolicy\": \"PreemptLowerPriority\", \"enableServiceLinks\": true, \"serviceAccountName\": \"default\", \"terminationGracePeriodSeconds\": 30}, \"status\": {\"phase\": \"Running\", \"podIP\": \"10.244.0.219\", \"hostIP\": \"172.17.70.144\", \"podIPs\": [{\"ip\": \"10.244.0.219\"}], \"qosClass\": \"BestEffort\", \"startTime\": \"2022-08-30T09:01:30Z\", \"conditions\": [{\"type\": \"Initialized\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-08-30T09:01:30Z\"}, {\"type\": \"Ready\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-08-30T09:01:32Z\"}, {\"type\": \"ContainersReady\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-08-30T09:01:32Z\"}, {\"type\": \"PodScheduled\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-08-30T09:01:30Z\"}], \"containerStatuses\": [{\"name\": \"testrouter\", \"image\": \"alpine:3.12\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2022-08-30T09:01:31Z\"}}, \"imageID\": \"docker-pullable://alpine@sha256:c0e9560cda118f9ec63ddefb4a173a2b2a0347082d7dff7dc14272e7841a5b5a\", \"started\": true, \"lastState\": {}, \"containerID\": \"docker://159e0503abdd2c6328f978dce2f418f6043354d6747b6287a8d02cfadf45bf7e\", \"restartCount\": 0}]}, \"metadata\": {\"uid\": \"f257c73d-1c6f-4a12-b9f2-a4ae2e336d09\", \"name\": \"testrouter-7bf796c6c6-mkwzd\", \"labels\": {\"app\": \"testrouter\", \"pod-template-hash\": \"7bf796c6c6\"}, \"namespace\": \"default\", \"generateName\": \"testrouter-7bf796c6c6-\", \"managedFields\": [{\"time\": \"2022-08-30T09:01:30Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:spec\": {\"f:volumes\": {\".\": {}, \"k:{\\\"name\\\":\\\"bindata\\\"}\": {\".\": {}, \"f:name\": {}, \"f:hostPath\": {\".\": {}, \"f:path\": {}, \"f:type\": {}}}}, \"f:nodeName\": {}, \"f:dnsPolicy\": {}, \"f:containers\": {\"k:{\\\"name\\\":\\\"testrouter\\\"}\": {\".\": {}, \"f:name\": {}, \"f:image\": {}, \"f:ports\": {\".\": {}, \"k:{\\\"containerPort\\\":8080,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}}, \"f:command\": {}, \"f:resources\": {}, \"f:workingDir\": {}, \"f:volumeMounts\": {\".\": {}, \"k:{\\\"mountPath\\\":\\\"/app\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}}, \"f:imagePullPolicy\": {}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:restartPolicy\": {}, \"f:schedulerName\": {}, \"f:securityContext\": {}, \"f:enableServiceLinks\": {}, \"f:terminationGracePeriodSeconds\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:app\": {}, \"f:pod-template-hash\": {}}, \"f:generateName\": {}, \"f:ownerReferences\": {\".\": {}, \"k:{\\\"uid\\\":\\\"f9492f35-b581-4e65-9870-225e31898561\\\"}\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2022-08-30T09:01:32Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:status\": {\"f:phase\": {}, \"f:podIP\": {}, \"f:hostIP\": {}, \"f:podIPs\": {\".\": {}, \"k:{\\\"ip\\\":\\\"10.244.0.219\\\"}\": {\".\": {}, \"f:ip\": {}}}, \"f:startTime\": {}, \"f:conditions\": {\".\": {}, \"k:{\\\"type\\\":\\\"Ready\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"Initialized\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"PodScheduled\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"ContainersReady\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}, \"f:containerStatuses\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}], \"ownerReferences\": [{\"uid\": \"f9492f35-b581-4e65-9870-225e31898561\", \"kind\": \"ReplicaSet\", \"name\": \"testrouter-7bf796c6c6\", \"apiVersion\": \"apps/v1\", \"controller\": true, \"blockOwnerDeletion\": true}], \"resourceVersion\": \"157412141\", \"creationTimestamp\": \"2022-08-30T09:01:30Z\"}, \"apiVersion\": \"v1\"}', '2022-08-30 17:01:30', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (863, 'argocd', 'argocd-server-6bbcff7688-w8s24', '', 'v1', 'pods', 'Pod', '31177734', '283935ac-7304-4066-9869-88b3dc5a5970', '89408a57-9496-4b22-9698-59c81edd7b9f', '1eb97615ac88abbd9753', '{\"kind\": \"Pod\", \"spec\": {\"volumes\": [{\"name\": \"plugins-home\", \"emptyDir\": {}}, {\"name\": \"tmp\", \"emptyDir\": {}}, {\"name\": \"static-files\", \"emptyDir\": {}}, {\"name\": \"ssh-known-hosts\", \"configMap\": {\"name\": \"argocd-ssh-known-hosts-cm\", \"defaultMode\": 420}}, {\"name\": \"tls-certs\", \"configMap\": {\"name\": \"argocd-tls-certs-cm\", \"defaultMode\": 420}}, {\"name\": \"argocd-repo-server-tls\", \"secret\": {\"items\": [{\"key\": \"tls.crt\", \"path\": \"tls.crt\"}, {\"key\": \"tls.key\", \"path\": \"tls.key\"}, {\"key\": \"ca.crt\", \"path\": \"ca.crt\"}], \"optional\": true, \"secretName\": \"argocd-repo-server-tls\", \"defaultMode\": 420}}, {\"name\": \"kube-api-access-sgg87\", \"projected\": {\"sources\": [{\"serviceAccountToken\": {\"path\": \"token\", \"expirationSeconds\": 3607}}, {\"configMap\": {\"name\": \"kube-root-ca.crt\", \"items\": [{\"key\": \"ca.crt\", \"path\": \"ca.crt\"}]}}, {\"downwardAPI\": {\"items\": [{\"path\": \"namespace\", \"fieldRef\": {\"fieldPath\": \"metadata.namespace\", \"apiVersion\": \"v1\"}}]}}], \"defaultMode\": 420}}], \"affinity\": {\"podAntiAffinity\": {\"preferredDuringSchedulingIgnoredDuringExecution\": [{\"weight\": 100, \"podAffinityTerm\": {\"topologyKey\": \"kubernetes.io/hostname\", \"labelSelector\": {\"matchLabels\": {\"app.kubernetes.io/name\": \"argocd-server\"}}}}, {\"weight\": 5, \"podAffinityTerm\": {\"topologyKey\": \"kubernetes.io/hostname\", \"labelSelector\": {\"matchLabels\": {\"app.kubernetes.io/part-of\": \"argocd\"}}}}]}}, \"nodeName\": \"dsjs\", \"priority\": 0, \"dnsPolicy\": \"ClusterFirst\", \"containers\": [{\"env\": [{\"name\": \"ARGOCD_SERVER_INSECURE\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"server.insecure\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_SERVER_BASEHREF\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"server.basehref\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_SERVER_ROOTPATH\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"server.rootpath\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_SERVER_LOGFORMAT\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"server.log.format\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_REPO_SERVER_LOGLEVEL\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"server.log.level\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_SERVER_REPO_SERVER\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"repo.server\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_SERVER_DEX_SERVER\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"server.dex.server\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_SERVER_DISABLE_AUTH\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"server.disable.auth\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_SERVER_ENABLE_GZIP\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"server.enable.gzip\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"server.repo.server.timeout.seconds\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_SERVER_X_FRAME_OPTIONS\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"server.x.frame.options\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_SERVER_REPO_SERVER_PLAINTEXT\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"server.repo.server.plaintext\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_SERVER_REPO_SERVER_STRICT_TLS\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"server.repo.server.strict.tls\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_TLS_MIN_VERSION\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"server.tls.minversion\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_TLS_MAX_VERSION\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"server.tls.maxversion\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_TLS_CIPHERS\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"server.tls.ciphers\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"server.connection.status.cache.expiration\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_SERVER_OIDC_CACHE_EXPIRATION\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"server.oidc.cache.expiration\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"server.login.attempts.expiration\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_SERVER_STATIC_ASSETS\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"server.staticassets\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_APP_STATE_CACHE_EXPIRATION\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"server.app.state.cache.expiration\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"REDIS_SERVER\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"redis.server\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"REDISDB\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"redis.db\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_DEFAULT_CACHE_EXPIRATION\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"server.default.cache.expiration\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}], \"name\": \"argocd-server\", \"image\": \"argoproj/argocd:v2.1.2\", \"ports\": [{\"protocol\": \"TCP\", \"containerPort\": 8080}, {\"protocol\": \"TCP\", \"containerPort\": 8083}], \"command\": [\"argocd-server\"], \"resources\": {}, \"volumeMounts\": [{\"name\": \"ssh-known-hosts\", \"mountPath\": \"/app/config/ssh\"}, {\"name\": \"tls-certs\", \"mountPath\": \"/app/config/tls\"}, {\"name\": \"argocd-repo-server-tls\", \"mountPath\": \"/app/config/server/tls\"}, {\"name\": \"plugins-home\", \"mountPath\": \"/home/argocd\"}, {\"name\": \"tmp\", \"mountPath\": \"/tmp\"}, {\"name\": \"kube-api-access-sgg87\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\"}], \"livenessProbe\": {\"httpGet\": {\"path\": \"/healthz?full=true\", \"port\": 8080, \"scheme\": \"HTTP\"}, \"periodSeconds\": 30, \"timeoutSeconds\": 1, \"failureThreshold\": 3, \"successThreshold\": 1, \"initialDelaySeconds\": 3}, \"readinessProbe\": {\"httpGet\": {\"path\": \"/healthz\", \"port\": 8080, \"scheme\": \"HTTP\"}, \"periodSeconds\": 30, \"timeoutSeconds\": 1, \"failureThreshold\": 3, \"successThreshold\": 1, \"initialDelaySeconds\": 3}, \"imagePullPolicy\": \"Always\", \"securityContext\": {\"capabilities\": {\"drop\": [\"all\"]}, \"runAsNonRoot\": true, \"readOnlyRootFilesystem\": true, \"allowPrivilegeEscalation\": false}, \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"tolerations\": [{\"key\": \"node.kubernetes.io/not-ready\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}, {\"key\": \"node.kubernetes.io/unreachable\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}], \"restartPolicy\": \"Always\", \"schedulerName\": \"default-scheduler\", \"serviceAccount\": \"argocd-server\", \"securityContext\": {}, \"preemptionPolicy\": \"PreemptLowerPriority\", \"enableServiceLinks\": true, \"serviceAccountName\": \"argocd-server\", \"terminationGracePeriodSeconds\": 30}, \"status\": {\"phase\": \"Running\", \"podIP\": \"10.244.0.123\", \"hostIP\": \"172.17.70.144\", \"podIPs\": [{\"ip\": \"10.244.0.123\"}], \"qosClass\": \"BestEffort\", \"startTime\": \"2021-10-15T10:23:25Z\", \"conditions\": [{\"type\": \"Initialized\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-10-15T10:23:25Z\"}, {\"type\": \"Ready\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-10-15T10:24:25Z\"}, {\"type\": \"ContainersReady\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-10-15T10:24:25Z\"}, {\"type\": \"PodScheduled\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-10-15T10:23:25Z\"}], \"containerStatuses\": [{\"name\": \"argocd-server\", \"image\": \"argoproj/argocd:v2.1.2\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2021-10-15T10:23:53Z\"}}, \"imageID\": \"docker-pullable://argoproj/argocd@sha256:2e0e725c9282bfb7b08bea7dbbfd8dbce6410d670e3f8addd9b6540d818ad520\", \"started\": true, \"lastState\": {}, \"containerID\": \"docker://b0685a4b3573c6ca9527c9fe58c2b93eeb49b5309980ee8ac9b0cb1a1c73631c\", \"restartCount\": 0}]}, \"metadata\": {\"uid\": \"89408a57-9496-4b22-9698-59c81edd7b9f\", \"name\": \"argocd-server-6bbcff7688-w8s24\", \"labels\": {\"pod-template-hash\": \"6bbcff7688\", \"app.kubernetes.io/name\": \"argocd-server\"}, \"namespace\": \"argocd\", \"generateName\": \"argocd-server-6bbcff7688-\", \"managedFields\": [{\"time\": \"2021-10-15T10:23:25Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:spec\": {\"f:volumes\": {\".\": {}, \"k:{\\\"name\\\":\\\"tmp\\\"}\": {\".\": {}, \"f:name\": {}, \"f:emptyDir\": {}}, \"k:{\\\"name\\\":\\\"tls-certs\\\"}\": {\".\": {}, \"f:name\": {}, \"f:configMap\": {\".\": {}, \"f:name\": {}, \"f:defaultMode\": {}}}, \"k:{\\\"name\\\":\\\"plugins-home\\\"}\": {\".\": {}, \"f:name\": {}, \"f:emptyDir\": {}}, \"k:{\\\"name\\\":\\\"static-files\\\"}\": {\".\": {}, \"f:name\": {}, \"f:emptyDir\": {}}, \"k:{\\\"name\\\":\\\"ssh-known-hosts\\\"}\": {\".\": {}, \"f:name\": {}, \"f:configMap\": {\".\": {}, \"f:name\": {}, \"f:defaultMode\": {}}}, \"k:{\\\"name\\\":\\\"argocd-repo-server-tls\\\"}\": {\".\": {}, \"f:name\": {}, \"f:secret\": {\".\": {}, \"f:items\": {}, \"f:optional\": {}, \"f:secretName\": {}, \"f:defaultMode\": {}}}}, \"f:affinity\": {\".\": {}, \"f:podAntiAffinity\": {\".\": {}, \"f:preferredDuringSchedulingIgnoredDuringExecution\": {}}}, \"f:dnsPolicy\": {}, \"f:containers\": {\"k:{\\\"name\\\":\\\"argocd-server\\\"}\": {\".\": {}, \"f:env\": {\".\": {}, \"k:{\\\"name\\\":\\\"REDISDB\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"REDIS_SERVER\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_TLS_CIPHERS\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_SERVER_BASEHREF\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_SERVER_INSECURE\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_SERVER_ROOTPATH\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_TLS_MAX_VERSION\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_TLS_MIN_VERSION\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_SERVER_LOGFORMAT\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_SERVER_DEX_SERVER\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_SERVER_ENABLE_GZIP\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_SERVER_REPO_SERVER\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_SERVER_DISABLE_AUTH\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_REPO_SERVER_LOGLEVEL\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_SERVER_STATIC_ASSETS\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_SERVER_X_FRAME_OPTIONS\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_DEFAULT_CACHE_EXPIRATION\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_APP_STATE_CACHE_EXPIRATION\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_SERVER_OIDC_CACHE_EXPIRATION\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_SERVER_REPO_SERVER_PLAINTEXT\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_SERVER_REPO_SERVER_STRICT_TLS\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}}, \"f:name\": {}, \"f:image\": {}, \"f:ports\": {\".\": {}, \"k:{\\\"containerPort\\\":8080,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}, \"k:{\\\"containerPort\\\":8083,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}}, \"f:command\": {}, \"f:resources\": {}, \"f:volumeMounts\": {\".\": {}, \"k:{\\\"mountPath\\\":\\\"/tmp\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/home/argocd\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/app/config/ssh\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/app/config/tls\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/app/config/server/tls\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}}, \"f:livenessProbe\": {\".\": {}, \"f:httpGet\": {\".\": {}, \"f:path\": {}, \"f:port\": {}, \"f:scheme\": {}}, \"f:periodSeconds\": {}, \"f:timeoutSeconds\": {}, \"f:failureThreshold\": {}, \"f:successThreshold\": {}, \"f:initialDelaySeconds\": {}}, \"f:readinessProbe\": {\".\": {}, \"f:httpGet\": {\".\": {}, \"f:path\": {}, \"f:port\": {}, \"f:scheme\": {}}, \"f:periodSeconds\": {}, \"f:timeoutSeconds\": {}, \"f:failureThreshold\": {}, \"f:successThreshold\": {}, \"f:initialDelaySeconds\": {}}, \"f:imagePullPolicy\": {}, \"f:securityContext\": {\".\": {}, \"f:capabilities\": {\".\": {}, \"f:drop\": {}}, \"f:runAsNonRoot\": {}, \"f:readOnlyRootFilesystem\": {}, \"f:allowPrivilegeEscalation\": {}}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:restartPolicy\": {}, \"f:schedulerName\": {}, \"f:serviceAccount\": {}, \"f:securityContext\": {}, \"f:enableServiceLinks\": {}, \"f:serviceAccountName\": {}, \"f:terminationGracePeriodSeconds\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:pod-template-hash\": {}, \"f:app.kubernetes.io/name\": {}}, \"f:generateName\": {}, \"f:ownerReferences\": {\".\": {}, \"k:{\\\"uid\\\":\\\"283935ac-7304-4066-9869-88b3dc5a5970\\\"}\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2021-10-15T10:24:25Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:status\": {\"f:phase\": {}, \"f:podIP\": {}, \"f:hostIP\": {}, \"f:podIPs\": {\".\": {}, \"k:{\\\"ip\\\":\\\"10.244.0.123\\\"}\": {\".\": {}, \"f:ip\": {}}}, \"f:startTime\": {}, \"f:conditions\": {\"k:{\\\"type\\\":\\\"Ready\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"Initialized\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"ContainersReady\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}, \"f:containerStatuses\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}], \"ownerReferences\": [{\"uid\": \"283935ac-7304-4066-9869-88b3dc5a5970\", \"kind\": \"ReplicaSet\", \"name\": \"argocd-server-6bbcff7688\", \"apiVersion\": \"apps/v1\", \"controller\": true, \"blockOwnerDeletion\": true}], \"resourceVersion\": \"31177734\", \"creationTimestamp\": \"2021-10-15T10:23:25Z\"}, \"apiVersion\": \"v1\"}', '2021-10-15 18:23:25', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (864, 'ingress-nginx', 'myingress-ingress-nginx-controller-x9zhc', '', 'v1', 'pods', 'Pod', '31169528', '8c6da241-aa55-44d8-8169-b2e85565218f', 'e561b865-eaa9-41a1-8020-8073539b3dec', '5456ee8648f96b2c01af', '{\"kind\": \"Pod\", \"spec\": {\"volumes\": [{\"name\": \"kube-api-access-l7gdn\", \"projected\": {\"sources\": [{\"serviceAccountToken\": {\"path\": \"token\", \"expirationSeconds\": 3607}}, {\"configMap\": {\"name\": \"kube-root-ca.crt\", \"items\": [{\"key\": \"ca.crt\", \"path\": \"ca.crt\"}]}}, {\"downwardAPI\": {\"items\": [{\"path\": \"namespace\", \"fieldRef\": {\"fieldPath\": \"metadata.namespace\", \"apiVersion\": \"v1\"}}]}}], \"defaultMode\": 420}}], \"affinity\": {\"nodeAffinity\": {\"requiredDuringSchedulingIgnoredDuringExecution\": {\"nodeSelectorTerms\": [{\"matchFields\": [{\"key\": \"metadata.name\", \"values\": [\"dsjs\"], \"operator\": \"In\"}]}]}}}, \"nodeName\": \"dsjs\", \"priority\": 0, \"dnsPolicy\": \"ClusterFirst\", \"containers\": [{\"env\": [{\"name\": \"POD_NAME\", \"valueFrom\": {\"fieldRef\": {\"fieldPath\": \"metadata.name\", \"apiVersion\": \"v1\"}}}, {\"name\": \"POD_NAMESPACE\", \"valueFrom\": {\"fieldRef\": {\"fieldPath\": \"metadata.namespace\", \"apiVersion\": \"v1\"}}}, {\"name\": \"LD_PRELOAD\", \"value\": \"/usr/local/lib/libmimalloc.so\"}], \"args\": [\"/nginx-ingress-controller\", \"--publish-service=$(POD_NAMESPACE)/myingress-ingress-nginx-controller\", \"--election-id=ingress-controller-leader\", \"--controller-class=k8s.io/ingress-nginx\", \"--configmap=$(POD_NAMESPACE)/myingress-ingress-nginx-controller\", \"--enable-ssl-passthrough\"], \"name\": \"controller\", \"image\": \"docker.io/willdockerhub/ingress-nginx-controller:v1.0.0-beta.3\", \"ports\": [{\"name\": \"http\", \"hostPort\": 80, \"protocol\": \"TCP\", \"containerPort\": 80}, {\"name\": \"https\", \"hostPort\": 443, \"protocol\": \"TCP\", \"containerPort\": 443}], \"lifecycle\": {\"preStop\": {\"exec\": {\"command\": [\"/wait-shutdown\"]}}}, \"resources\": {\"requests\": {\"cpu\": \"100m\", \"memory\": \"90Mi\"}}, \"volumeMounts\": [{\"name\": \"kube-api-access-l7gdn\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\"}], \"livenessProbe\": {\"httpGet\": {\"path\": \"/healthz\", \"port\": 10254, \"scheme\": \"HTTP\"}, \"periodSeconds\": 10, \"timeoutSeconds\": 1, \"failureThreshold\": 5, \"successThreshold\": 1, \"initialDelaySeconds\": 10}, \"readinessProbe\": {\"httpGet\": {\"path\": \"/healthz\", \"port\": 10254, \"scheme\": \"HTTP\"}, \"periodSeconds\": 10, \"timeoutSeconds\": 1, \"failureThreshold\": 3, \"successThreshold\": 1, \"initialDelaySeconds\": 10}, \"imagePullPolicy\": \"IfNotPresent\", \"securityContext\": {\"runAsUser\": 101, \"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"], \"drop\": [\"ALL\"]}, \"allowPrivilegeEscalation\": true}, \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"hostNetwork\": true, \"tolerations\": [{\"key\": \"node.kubernetes.io/not-ready\", \"effect\": \"NoExecute\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/unreachable\", \"effect\": \"NoExecute\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/disk-pressure\", \"effect\": \"NoSchedule\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/memory-pressure\", \"effect\": \"NoSchedule\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/pid-pressure\", \"effect\": \"NoSchedule\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/unschedulable\", \"effect\": \"NoSchedule\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/network-unavailable\", \"effect\": \"NoSchedule\", \"operator\": \"Exists\"}], \"nodeSelector\": {\"kubernetes.io/os\": \"linux\"}, \"restartPolicy\": \"Always\", \"schedulerName\": \"default-scheduler\", \"serviceAccount\": \"myingress-ingress-nginx\", \"securityContext\": {}, \"preemptionPolicy\": \"PreemptLowerPriority\", \"enableServiceLinks\": true, \"serviceAccountName\": \"myingress-ingress-nginx\", \"terminationGracePeriodSeconds\": 300}, \"status\": {\"phase\": \"Running\", \"podIP\": \"172.17.70.144\", \"hostIP\": \"172.17.70.144\", \"podIPs\": [{\"ip\": \"172.17.70.144\"}], \"qosClass\": \"Burstable\", \"startTime\": \"2021-09-28T13:18:56Z\", \"conditions\": [{\"type\": \"Initialized\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-09-28T13:18:56Z\"}, {\"type\": \"Ready\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-10-15T10:09:16Z\"}, {\"type\": \"ContainersReady\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-10-15T10:09:16Z\"}, {\"type\": \"PodScheduled\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-09-28T13:18:56Z\"}], \"containerStatuses\": [{\"name\": \"controller\", \"image\": \"willdockerhub/ingress-nginx-controller:v1.0.0-beta.3\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2021-10-15T10:09:01Z\"}}, \"imageID\": \"docker-pullable://willdockerhub/ingress-nginx-controller@sha256:44a7a06b71187a4529b0a9edee5cc22bdf71b414470eff696c3869ea8d90a695\", \"started\": true, \"lastState\": {\"terminated\": {\"reason\": \"Error\", \"exitCode\": 255, \"startedAt\": \"2021-09-28T13:18:57Z\", \"finishedAt\": \"2021-08-30T08:10:32Z\", \"containerID\": \"docker://f24acfb89d95c2399d830c8d1d41298d97036a754b0c7b552aa6e8f619cb9b62\"}}, \"containerID\": \"docker://7c31bfb5e4da0e5880ff2cf963462c5b849c3834966a88e9ad8f69358eb1469c\", \"restartCount\": 1}]}, \"metadata\": {\"uid\": \"e561b865-eaa9-41a1-8020-8073539b3dec\", \"name\": \"myingress-ingress-nginx-controller-x9zhc\", \"labels\": {\"app.kubernetes.io/name\": \"ingress-nginx\", \"pod-template-generation\": \"5\", \"controller-revision-hash\": \"6cdc7b7848\", \"app.kubernetes.io/instance\": \"myingress\", \"app.kubernetes.io/component\": \"controller\"}, \"namespace\": \"ingress-nginx\", \"generateName\": \"myingress-ingress-nginx-controller-\", \"managedFields\": [{\"time\": \"2021-09-28T13:18:56Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:spec\": {\"f:affinity\": {\".\": {}, \"f:nodeAffinity\": {\".\": {}, \"f:requiredDuringSchedulingIgnoredDuringExecution\": {}}}, \"f:dnsPolicy\": {}, \"f:containers\": {\"k:{\\\"name\\\":\\\"controller\\\"}\": {\".\": {}, \"f:env\": {\".\": {}, \"k:{\\\"name\\\":\\\"POD_NAME\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:fieldRef\": {}}}, \"k:{\\\"name\\\":\\\"LD_PRELOAD\\\"}\": {\".\": {}, \"f:name\": {}, \"f:value\": {}}, \"k:{\\\"name\\\":\\\"POD_NAMESPACE\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:fieldRef\": {}}}}, \"f:args\": {}, \"f:name\": {}, \"f:image\": {}, \"f:ports\": {\".\": {}, \"k:{\\\"containerPort\\\":80,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:name\": {}, \"f:hostPort\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}, \"k:{\\\"containerPort\\\":443,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:name\": {}, \"f:hostPort\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}}, \"f:lifecycle\": {\".\": {}, \"f:preStop\": {\".\": {}, \"f:exec\": {\".\": {}, \"f:command\": {}}}}, \"f:resources\": {\".\": {}, \"f:requests\": {\".\": {}, \"f:cpu\": {}, \"f:memory\": {}}}, \"f:livenessProbe\": {\".\": {}, \"f:httpGet\": {\".\": {}, \"f:path\": {}, \"f:port\": {}, \"f:scheme\": {}}, \"f:periodSeconds\": {}, \"f:timeoutSeconds\": {}, \"f:failureThreshold\": {}, \"f:successThreshold\": {}, \"f:initialDelaySeconds\": {}}, \"f:readinessProbe\": {\".\": {}, \"f:httpGet\": {\".\": {}, \"f:path\": {}, \"f:port\": {}, \"f:scheme\": {}}, \"f:periodSeconds\": {}, \"f:timeoutSeconds\": {}, \"f:failureThreshold\": {}, \"f:successThreshold\": {}, \"f:initialDelaySeconds\": {}}, \"f:imagePullPolicy\": {}, \"f:securityContext\": {\".\": {}, \"f:runAsUser\": {}, \"f:capabilities\": {\".\": {}, \"f:add\": {}, \"f:drop\": {}}, \"f:allowPrivilegeEscalation\": {}}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:hostNetwork\": {}, \"f:tolerations\": {}, \"f:nodeSelector\": {}, \"f:restartPolicy\": {}, \"f:schedulerName\": {}, \"f:serviceAccount\": {}, \"f:securityContext\": {}, \"f:enableServiceLinks\": {}, \"f:serviceAccountName\": {}, \"f:terminationGracePeriodSeconds\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:app.kubernetes.io/name\": {}, \"f:pod-template-generation\": {}, \"f:controller-revision-hash\": {}, \"f:app.kubernetes.io/instance\": {}, \"f:app.kubernetes.io/component\": {}}, \"f:generateName\": {}, \"f:ownerReferences\": {\".\": {}, \"k:{\\\"uid\\\":\\\"8c6da241-aa55-44d8-8169-b2e85565218f\\\"}\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2021-10-15T10:09:16Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:status\": {\"f:phase\": {}, \"f:podIP\": {}, \"f:hostIP\": {}, \"f:podIPs\": {\".\": {}, \"k:{\\\"ip\\\":\\\"172.17.70.144\\\"}\": {\".\": {}, \"f:ip\": {}}}, \"f:startTime\": {}, \"f:conditions\": {\"k:{\\\"type\\\":\\\"Ready\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"Initialized\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"ContainersReady\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}, \"f:containerStatuses\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}], \"ownerReferences\": [{\"uid\": \"8c6da241-aa55-44d8-8169-b2e85565218f\", \"kind\": \"DaemonSet\", \"name\": \"myingress-ingress-nginx-controller\", \"apiVersion\": \"apps/v1\", \"controller\": true, \"blockOwnerDeletion\": true}], \"resourceVersion\": \"31169528\", \"creationTimestamp\": \"2021-09-28T13:18:56Z\"}, \"apiVersion\": \"v1\"}', '2021-09-28 21:18:56', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (865, 'kube-system', 'kube-flannel-ds-pqjms', '', 'v1', 'pods', 'Pod', '136982892', '045bc567-8d99-48a2-92aa-3d09082727a5', '19aa1a03-4b8a-458a-bd4d-c91ba60d9ef8', '78364e02ea66ad9a3a8e', '{\"kind\": \"Pod\", \"spec\": {\"volumes\": [{\"name\": \"run\", \"hostPath\": {\"path\": \"/run/flannel\", \"type\": \"\"}}, {\"name\": \"cni\", \"hostPath\": {\"path\": \"/etc/cni/net.d\", \"type\": \"\"}}, {\"name\": \"flannel-cfg\", \"configMap\": {\"name\": \"kube-flannel-cfg\", \"defaultMode\": 420}}, {\"name\": \"kube-api-access-chkst\", \"projected\": {\"sources\": [{\"serviceAccountToken\": {\"path\": \"token\", \"expirationSeconds\": 3607}}, {\"configMap\": {\"name\": \"kube-root-ca.crt\", \"items\": [{\"key\": \"ca.crt\", \"path\": \"ca.crt\"}]}}, {\"downwardAPI\": {\"items\": [{\"path\": \"namespace\", \"fieldRef\": {\"fieldPath\": \"metadata.namespace\", \"apiVersion\": \"v1\"}}]}}], \"defaultMode\": 420}}], \"affinity\": {\"nodeAffinity\": {\"requiredDuringSchedulingIgnoredDuringExecution\": {\"nodeSelectorTerms\": [{\"matchFields\": [{\"key\": \"metadata.name\", \"values\": [\"dsjs2\"], \"operator\": \"In\"}]}]}}}, \"nodeName\": \"dsjs2\", \"priority\": 2000001000, \"dnsPolicy\": \"ClusterFirst\", \"containers\": [{\"env\": [{\"name\": \"POD_NAME\", \"valueFrom\": {\"fieldRef\": {\"fieldPath\": \"metadata.name\", \"apiVersion\": \"v1\"}}}, {\"name\": \"POD_NAMESPACE\", \"valueFrom\": {\"fieldRef\": {\"fieldPath\": \"metadata.namespace\", \"apiVersion\": \"v1\"}}}], \"args\": [\"--ip-masq\", \"--kube-subnet-mgr\"], \"name\": \"kube-flannel\", \"image\": \"quay.io/coreos/flannel:v0.14.0\", \"command\": [\"/opt/bin/flanneld\"], \"resources\": {\"limits\": {\"cpu\": \"100m\", \"memory\": \"50Mi\"}, \"requests\": {\"cpu\": \"100m\", \"memory\": \"50Mi\"}}, \"volumeMounts\": [{\"name\": \"run\", \"mountPath\": \"/run/flannel\"}, {\"name\": \"flannel-cfg\", \"mountPath\": \"/etc/kube-flannel/\"}, {\"name\": \"kube-api-access-chkst\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\"}], \"imagePullPolicy\": \"IfNotPresent\", \"securityContext\": {\"privileged\": false, \"capabilities\": {\"add\": [\"NET_ADMIN\", \"NET_RAW\"]}}, \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"hostNetwork\": true, \"tolerations\": [{\"effect\": \"NoSchedule\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/not-ready\", \"effect\": \"NoExecute\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/unreachable\", \"effect\": \"NoExecute\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/disk-pressure\", \"effect\": \"NoSchedule\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/memory-pressure\", \"effect\": \"NoSchedule\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/pid-pressure\", \"effect\": \"NoSchedule\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/unschedulable\", \"effect\": \"NoSchedule\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/network-unavailable\", \"effect\": \"NoSchedule\", \"operator\": \"Exists\"}], \"restartPolicy\": \"Always\", \"schedulerName\": \"default-scheduler\", \"initContainers\": [{\"args\": [\"-f\", \"/etc/kube-flannel/cni-conf.json\", \"/etc/cni/net.d/10-flannel.conflist\"], \"name\": \"install-cni\", \"image\": \"quay.io/coreos/flannel:v0.14.0\", \"command\": [\"cp\"], \"resources\": {}, \"volumeMounts\": [{\"name\": \"cni\", \"mountPath\": \"/etc/cni/net.d\"}, {\"name\": \"flannel-cfg\", \"mountPath\": \"/etc/kube-flannel/\"}, {\"name\": \"kube-api-access-chkst\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\"}], \"imagePullPolicy\": \"IfNotPresent\", \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"serviceAccount\": \"flannel\", \"securityContext\": {}, \"preemptionPolicy\": \"PreemptLowerPriority\", \"priorityClassName\": \"system-node-critical\", \"enableServiceLinks\": true, \"serviceAccountName\": \"flannel\", \"terminationGracePeriodSeconds\": 30}, \"status\": {\"phase\": \"Running\", \"podIP\": \"172.17.70.145\", \"hostIP\": \"172.17.70.145\", \"podIPs\": [{\"ip\": \"172.17.70.145\"}], \"qosClass\": \"Burstable\", \"startTime\": \"2021-08-16T18:29:13Z\", \"conditions\": [{\"type\": \"Initialized\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-08-16T18:29:15Z\"}, {\"type\": \"Ready\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-01-21T04:31:52Z\"}, {\"type\": \"ContainersReady\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-01-21T04:31:52Z\"}, {\"type\": \"PodScheduled\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-08-16T18:29:13Z\"}], \"containerStatuses\": [{\"name\": \"kube-flannel\", \"image\": \"quay.io/coreos/flannel:v0.14.0\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2022-01-21T04:31:52Z\"}}, \"imageID\": \"docker://sha256:8522d622299ca431311ac69992419c956fbaca6fa8289c76810c9399d17c69de\", \"started\": true, \"lastState\": {}, \"containerID\": \"docker://8acf87dbe9467013fe972320912593d50274fca52c32d6fcbf862721f2ef2c6a\", \"restartCount\": 1}], \"initContainerStatuses\": [{\"name\": \"install-cni\", \"image\": \"quay.io/coreos/flannel:v0.14.0\", \"ready\": true, \"state\": {\"terminated\": {\"reason\": \"Completed\", \"exitCode\": 0, \"startedAt\": \"2022-01-21T04:31:26Z\", \"finishedAt\": \"2022-01-21T04:31:27Z\", \"containerID\": \"docker://be8e3f536d8255d19d29c5f3ff2ccee1f981bcea035899300537ef7e366a3036\"}}, \"imageID\": \"docker://sha256:8522d622299ca431311ac69992419c956fbaca6fa8289c76810c9399d17c69de\", \"lastState\": {}, \"containerID\": \"docker://be8e3f536d8255d19d29c5f3ff2ccee1f981bcea035899300537ef7e366a3036\", \"restartCount\": 1}]}, \"metadata\": {\"uid\": \"19aa1a03-4b8a-458a-bd4d-c91ba60d9ef8\", \"name\": \"kube-flannel-ds-pqjms\", \"labels\": {\"app\": \"flannel\", \"tier\": \"node\", \"pod-template-generation\": \"1\", \"controller-revision-hash\": \"7fb8b954f9\"}, \"namespace\": \"kube-system\", \"generateName\": \"kube-flannel-ds-\", \"managedFields\": [{\"time\": \"2021-08-16T18:29:13Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:spec\": {\"f:volumes\": {\".\": {}, \"k:{\\\"name\\\":\\\"cni\\\"}\": {\".\": {}, \"f:name\": {}, \"f:hostPath\": {\".\": {}, \"f:path\": {}, \"f:type\": {}}}, \"k:{\\\"name\\\":\\\"run\\\"}\": {\".\": {}, \"f:name\": {}, \"f:hostPath\": {\".\": {}, \"f:path\": {}, \"f:type\": {}}}, \"k:{\\\"name\\\":\\\"flannel-cfg\\\"}\": {\".\": {}, \"f:name\": {}, \"f:configMap\": {\".\": {}, \"f:name\": {}, \"f:defaultMode\": {}}}}, \"f:affinity\": {\".\": {}, \"f:nodeAffinity\": {\".\": {}, \"f:requiredDuringSchedulingIgnoredDuringExecution\": {}}}, \"f:dnsPolicy\": {}, \"f:containers\": {\"k:{\\\"name\\\":\\\"kube-flannel\\\"}\": {\".\": {}, \"f:env\": {\".\": {}, \"k:{\\\"name\\\":\\\"POD_NAME\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:fieldRef\": {}}}, \"k:{\\\"name\\\":\\\"POD_NAMESPACE\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:fieldRef\": {}}}}, \"f:args\": {}, \"f:name\": {}, \"f:image\": {}, \"f:command\": {}, \"f:resources\": {\".\": {}, \"f:limits\": {\".\": {}, \"f:cpu\": {}, \"f:memory\": {}}, \"f:requests\": {\".\": {}, \"f:cpu\": {}, \"f:memory\": {}}}, \"f:volumeMounts\": {\".\": {}, \"k:{\\\"mountPath\\\":\\\"/run/flannel\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/etc/kube-flannel/\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}}, \"f:imagePullPolicy\": {}, \"f:securityContext\": {\".\": {}, \"f:privileged\": {}, \"f:capabilities\": {\".\": {}, \"f:add\": {}}}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:hostNetwork\": {}, \"f:tolerations\": {}, \"f:restartPolicy\": {}, \"f:schedulerName\": {}, \"f:initContainers\": {\".\": {}, \"k:{\\\"name\\\":\\\"install-cni\\\"}\": {\".\": {}, \"f:args\": {}, \"f:name\": {}, \"f:image\": {}, \"f:command\": {}, \"f:resources\": {}, \"f:volumeMounts\": {\".\": {}, \"k:{\\\"mountPath\\\":\\\"/etc/cni/net.d\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/etc/kube-flannel/\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}}, \"f:imagePullPolicy\": {}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:serviceAccount\": {}, \"f:securityContext\": {}, \"f:priorityClassName\": {}, \"f:enableServiceLinks\": {}, \"f:serviceAccountName\": {}, \"f:terminationGracePeriodSeconds\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:app\": {}, \"f:tier\": {}, \"f:pod-template-generation\": {}, \"f:controller-revision-hash\": {}}, \"f:generateName\": {}, \"f:ownerReferences\": {\".\": {}, \"k:{\\\"uid\\\":\\\"045bc567-8d99-48a2-92aa-3d09082727a5\\\"}\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2022-01-21T04:52:52Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:status\": {\"f:phase\": {}, \"f:podIP\": {}, \"f:hostIP\": {}, \"f:podIPs\": {\".\": {}, \"k:{\\\"ip\\\":\\\"172.17.70.145\\\"}\": {\".\": {}, \"f:ip\": {}}}, \"f:startTime\": {}, \"f:conditions\": {\"k:{\\\"type\\\":\\\"Ready\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"Initialized\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"ContainersReady\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}, \"f:containerStatuses\": {}, \"f:initContainerStatuses\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}], \"ownerReferences\": [{\"uid\": \"045bc567-8d99-48a2-92aa-3d09082727a5\", \"kind\": \"DaemonSet\", \"name\": \"kube-flannel-ds\", \"apiVersion\": \"apps/v1\", \"controller\": true, \"blockOwnerDeletion\": true}], \"resourceVersion\": \"136982892\", \"creationTimestamp\": \"2021-08-16T18:29:13Z\"}, \"apiVersion\": \"v1\"}', '2021-08-17 02:29:13', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (866, 'default', 'ngx', '', 'v1', 'pods', 'Pod', '158419872', '', '3a77880b-b851-44eb-80f4-872f752b0d08', 'b390b865eda35dc2fc6e', '{\"kind\": \"Pod\", \"spec\": {\"volumes\": [{\"name\": \"kube-api-access-zq9fg\", \"projected\": {\"sources\": [{\"serviceAccountToken\": {\"path\": \"token\", \"expirationSeconds\": 3607}}, {\"configMap\": {\"name\": \"kube-root-ca.crt\", \"items\": [{\"key\": \"ca.crt\", \"path\": \"ca.crt\"}]}}, {\"downwardAPI\": {\"items\": [{\"path\": \"namespace\", \"fieldRef\": {\"fieldPath\": \"metadata.namespace\", \"apiVersion\": \"v1\"}}]}}], \"defaultMode\": 420}}], \"nodeName\": \"dsjs\", \"priority\": 0, \"dnsPolicy\": \"ClusterFirst\", \"containers\": [{\"name\": \"ngx1\", \"image\": \"nginx:1.18-alpine\", \"ports\": [{\"protocol\": \"TCP\", \"containerPort\": 80}], \"resources\": {\"limits\": {\"cpu\": \"500m\", \"memory\": \"128Mi\"}, \"requests\": {\"cpu\": \"250m\", \"memory\": \"64Mi\"}}, \"volumeMounts\": [{\"name\": \"kube-api-access-zq9fg\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\"}], \"imagePullPolicy\": \"IfNotPresent\", \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"tolerations\": [{\"key\": \"node.kubernetes.io/not-ready\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}, {\"key\": \"node.kubernetes.io/unreachable\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}], \"restartPolicy\": \"Always\", \"schedulerName\": \"default-scheduler\", \"serviceAccount\": \"default\", \"securityContext\": {}, \"preemptionPolicy\": \"PreemptLowerPriority\", \"enableServiceLinks\": true, \"serviceAccountName\": \"default\", \"terminationGracePeriodSeconds\": 30}, \"status\": {\"phase\": \"Running\", \"podIP\": \"10.244.0.220\", \"hostIP\": \"172.17.70.144\", \"podIPs\": [{\"ip\": \"10.244.0.220\"}], \"qosClass\": \"Burstable\", \"startTime\": \"2022-09-05T04:50:45Z\", \"conditions\": [{\"type\": \"Initialized\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-09-05T04:50:45Z\"}, {\"type\": \"Ready\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-09-05T04:50:47Z\"}, {\"type\": \"ContainersReady\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-09-05T04:50:47Z\"}, {\"type\": \"PodScheduled\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-09-05T04:50:45Z\"}], \"containerStatuses\": [{\"name\": \"ngx1\", \"image\": \"nginx:1.18-alpine\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2022-09-05T04:50:46Z\"}}, \"imageID\": \"docker-pullable://nginx@sha256:29dc24ed982665eb88598e0129e4ec88c2049fafc63125a4a640dd67529dc6d4\", \"started\": true, \"lastState\": {}, \"containerID\": \"docker://1683f537263d51a5a057b9142769b7eae3b1d24597be09eb2540892c1a03c9b8\", \"restartCount\": 0}]}, \"metadata\": {\"uid\": \"3a77880b-b851-44eb-80f4-872f752b0d08\", \"name\": \"ngx\", \"namespace\": \"default\", \"annotations\": {\"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Pod\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"ngx\\\",\\\"namespace\\\":\\\"default\\\"},\\\"spec\\\":{\\\"containers\\\":[{\\\"image\\\":\\\"nginx:1.18-alpine\\\",\\\"imagePullPolicy\\\":\\\"IfNotPresent\\\",\\\"name\\\":\\\"ngx1\\\",\\\"ports\\\":[{\\\"containerPort\\\":80}],\\\"resources\\\":{\\\"limits\\\":{\\\"cpu\\\":\\\"500m\\\",\\\"memory\\\":\\\"128Mi\\\"},\\\"requests\\\":{\\\"cpu\\\":\\\"250m\\\",\\\"memory\\\":\\\"64Mi\\\"}}}]}}\\n\"}, \"managedFields\": [{\"time\": \"2022-09-05T04:50:45Z\", \"manager\": \"kubectl-client-side-apply\", \"fieldsV1\": {\"f:spec\": {\"f:dnsPolicy\": {}, \"f:containers\": {\"k:{\\\"name\\\":\\\"ngx1\\\"}\": {\".\": {}, \"f:name\": {}, \"f:image\": {}, \"f:ports\": {\".\": {}, \"k:{\\\"containerPort\\\":80,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}}, \"f:resources\": {\".\": {}, \"f:limits\": {\".\": {}, \"f:cpu\": {}, \"f:memory\": {}}, \"f:requests\": {\".\": {}, \"f:cpu\": {}, \"f:memory\": {}}}, \"f:imagePullPolicy\": {}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:restartPolicy\": {}, \"f:schedulerName\": {}, \"f:securityContext\": {}, \"f:enableServiceLinks\": {}, \"f:terminationGracePeriodSeconds\": {}}, \"f:metadata\": {\"f:annotations\": {\".\": {}, \"f:kubectl.kubernetes.io/last-applied-configuration\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2022-09-05T04:50:47Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:status\": {\"f:phase\": {}, \"f:podIP\": {}, \"f:hostIP\": {}, \"f:podIPs\": {\".\": {}, \"k:{\\\"ip\\\":\\\"10.244.0.220\\\"}\": {\".\": {}, \"f:ip\": {}}}, \"f:startTime\": {}, \"f:conditions\": {\"k:{\\\"type\\\":\\\"Ready\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"Initialized\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"ContainersReady\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}, \"f:containerStatuses\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}], \"resourceVersion\": \"158419872\", \"creationTimestamp\": \"2022-09-05T04:50:45Z\"}, \"apiVersion\": \"v1\"}', '2022-09-05 12:50:45', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (867, 'myhost', 'coredns-66ffcc6b58-x79hb-x-kube-system-x-myvc1', '', 'v1', 'pods', 'Pod', '157302405', '9f4a0851-85b1-4623-bcbe-c4b4d7ac9d5e', 'aefcd349-7583-4f75-860d-8b0b8b8a3abe', 'e43a01605e5b86f27d6c', '{\"kind\": \"Pod\", \"spec\": {\"volumes\": [{\"name\": \"config-volume\", \"configMap\": {\"name\": \"coredns-x-kube-system-x-myvc1\", \"items\": [{\"key\": \"Corefile\", \"path\": \"Corefile\"}, {\"key\": \"NodeHosts\", \"path\": \"NodeHosts\"}], \"defaultMode\": 420}}, {\"name\": \"custom-config-volume\", \"configMap\": {\"name\": \"coredns-custom-x-kube-system-x-myvc1\", \"optional\": true, \"defaultMode\": 420}}, {\"name\": \"kube-api-access-f2bmn\", \"projected\": {\"sources\": [{\"downwardAPI\": {\"items\": [{\"mode\": 420, \"path\": \"token\", \"fieldRef\": {\"fieldPath\": \"metadata.annotations[\'vcluster.loft.sh/token-jtosudef\']\", \"apiVersion\": \"v1\"}}]}}, {\"configMap\": {\"name\": \"kube-root-ca.crt-x-kube-system-x-myvc1\", \"items\": [{\"key\": \"ca.crt\", \"path\": \"ca.crt\"}]}}, {\"downwardAPI\": {\"items\": [{\"path\": \"namespace\", \"fieldRef\": {\"fieldPath\": \"metadata.annotations[\'vcluster.loft.sh/namespace\']\", \"apiVersion\": \"v1\"}}]}}], \"defaultMode\": 420}}], \"hostname\": \"coredns-66ffcc6b58-x79hb\", \"nodeName\": \"dsjs2\", \"priority\": 0, \"dnsPolicy\": \"Default\", \"containers\": [{\"env\": [{\"name\": \"KUBERNETES_PORT\", \"value\": \"tcp://10.104.200.214:443\"}, {\"name\": \"KUBERNETES_PORT_443_TCP\", \"value\": \"tcp://10.104.200.214:443\"}, {\"name\": \"KUBERNETES_PORT_443_TCP_ADDR\", \"value\": \"10.104.200.214\"}, {\"name\": \"KUBERNETES_PORT_443_TCP_PORT\", \"value\": \"443\"}, {\"name\": \"KUBERNETES_PORT_443_TCP_PROTO\", \"value\": \"tcp\"}, {\"name\": \"KUBERNETES_SERVICE_HOST\", \"value\": \"10.104.200.214\"}, {\"name\": \"KUBERNETES_SERVICE_PORT\", \"value\": \"443\"}, {\"name\": \"KUBERNETES_SERVICE_PORT_HTTPS\", \"value\": \"443\"}], \"args\": [\"-conf\", \"/etc/coredns/Corefile\"], \"name\": \"coredns\", \"image\": \"coredns/coredns:1.8.7\", \"ports\": [{\"name\": \"dns\", \"protocol\": \"UDP\", \"containerPort\": 1053}, {\"name\": \"dns-tcp\", \"protocol\": \"TCP\", \"containerPort\": 1053}, {\"name\": \"metrics\", \"protocol\": \"TCP\", \"containerPort\": 9153}], \"resources\": {\"limits\": {\"cpu\": \"1\", \"memory\": \"170Mi\"}, \"requests\": {\"cpu\": \"3m\", \"memory\": \"16Mi\"}}, \"volumeMounts\": [{\"name\": \"config-volume\", \"readOnly\": true, \"mountPath\": \"/etc/coredns\"}, {\"name\": \"custom-config-volume\", \"readOnly\": true, \"mountPath\": \"/etc/coredns/custom\"}, {\"name\": \"kube-api-access-f2bmn\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\"}], \"livenessProbe\": {\"httpGet\": {\"path\": \"/health\", \"port\": 8080, \"scheme\": \"HTTP\"}, \"periodSeconds\": 10, \"timeoutSeconds\": 1, \"failureThreshold\": 3, \"successThreshold\": 1, \"initialDelaySeconds\": 60}, \"readinessProbe\": {\"httpGet\": {\"path\": \"/ready\", \"port\": 8181, \"scheme\": \"HTTP\"}, \"periodSeconds\": 2, \"timeoutSeconds\": 1, \"failureThreshold\": 3, \"successThreshold\": 1}, \"imagePullPolicy\": \"IfNotPresent\", \"securityContext\": {\"runAsUser\": 1001, \"capabilities\": {\"drop\": [\"ALL\"]}, \"runAsNonRoot\": true, \"readOnlyRootFilesystem\": true, \"allowPrivilegeEscalation\": false}, \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"hostAliases\": [{\"ip\": \"10.104.200.214\", \"hostnames\": [\"kubernetes\", \"kubernetes.default\", \"kubernetes.default.svc\"]}], \"tolerations\": [{\"key\": \"node.kubernetes.io/not-ready\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}, {\"key\": \"node.kubernetes.io/unreachable\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}], \"nodeSelector\": {\"kubernetes.io/os\": \"linux\"}, \"restartPolicy\": \"Always\", \"schedulerName\": \"default-scheduler\", \"serviceAccount\": \"vc-workload-myvc1\", \"securityContext\": {}, \"preemptionPolicy\": \"PreemptLowerPriority\", \"enableServiceLinks\": false, \"serviceAccountName\": \"vc-workload-myvc1\", \"topologySpreadConstraints\": [{\"maxSkew\": 1, \"topologyKey\": \"kubernetes.io/hostname\", \"labelSelector\": {\"matchLabels\": {\"vcluster.loft.sh/namespace\": \"kube-system\", \"vcluster.loft.sh/managed-by\": \"myvc1\", \"vcluster.loft.sh/label-myvc1-x-f0d64011ff\": \"kube-dns\"}}, \"whenUnsatisfiable\": \"DoNotSchedule\"}], \"automountServiceAccountToken\": false, \"terminationGracePeriodSeconds\": 30}, \"status\": {\"phase\": \"Running\", \"podIP\": \"10.244.1.61\", \"hostIP\": \"172.17.70.145\", \"podIPs\": [{\"ip\": \"10.244.1.61\"}], \"qosClass\": \"Burstable\", \"startTime\": \"2022-08-29T17:51:32Z\", \"conditions\": [{\"type\": \"Initialized\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-08-29T17:51:32Z\"}, {\"type\": \"Ready\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-08-29T17:51:34Z\"}, {\"type\": \"ContainersReady\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-08-29T17:51:34Z\"}, {\"type\": \"PodScheduled\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-08-29T17:51:32Z\"}], \"containerStatuses\": [{\"name\": \"coredns\", \"image\": \"coredns/coredns:1.8.7\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2022-08-29T17:51:33Z\"}}, \"imageID\": \"docker-pullable://coredns/coredns@sha256:58508c172b14716350dc5185baefd78265a703514281d309d1d54aa1b721ad68\", \"started\": true, \"lastState\": {}, \"containerID\": \"docker://326760d00349dec98d6b1553b7f0a7f7cfbf6d7b86c5cf732d291da59ca8a200\", \"restartCount\": 0}]}, \"metadata\": {\"uid\": \"aefcd349-7583-4f75-860d-8b0b8b8a3abe\", \"name\": \"coredns-66ffcc6b58-x79hb-x-kube-system-x-myvc1\", \"labels\": {\"vcluster.loft.sh/namespace\": \"kube-system\", \"vcluster.loft.sh/managed-by\": \"myvc1\", \"vcluster.loft.sh/label-myvc1-x-f0d64011ff\": \"kube-dns\", \"vcluster.loft.sh/label-myvc1-x-fdcdfa3fd8\": \"66ffcc6b58\", \"vcluster.loft.sh/ns-label-myvc1-x-cf1227b7b2\": \"kube-system\"}, \"namespace\": \"myhost\", \"annotations\": {\"vcluster.loft.sh/uid\": \"5a637d7b-3fb0-4fff-af9f-daeb92900d07\", \"vcluster.loft.sh/name\": \"coredns-66ffcc6b58-x79hb\", \"vcluster.loft.sh/labels\": \"k8s-app=\\\"kube-dns\\\"\\npod-template-hash=\\\"66ffcc6b58\\\"\", \"vcluster.loft.sh/namespace\": \"kube-system\", \"vcluster.loft.sh/object-name\": \"coredns-66ffcc6b58-x79hb\", \"vcluster.loft.sh/owner-set-kind\": \"ReplicaSet\", \"vcluster.loft.sh/token-jtosudef\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6InFsMnhVRkhSRFVaSzRTSmNFM0I4TkNRbm5PanBkUXZmYU1ONGRrRzZSQUUifQ.eyJhdWQiOlsiaHR0cHM6Ly9rdWJlcm5ldGVzLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWwiLCJodHRwczovL2t1YmVybmV0ZXMuZGVmYXVsdC5zdmMiLCJodHRwczovL2t1YmVybmV0ZXMuZGVmYXVsdCJdLCJleHAiOjE5NzcxNTU0OTIsImlhdCI6MTY2MTc5NTQ5MiwiaXNzIjoiaHR0cHM6Ly9rdWJlcm5ldGVzLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWwiLCJrdWJlcm5ldGVzLmlvIjp7Im5hbWVzcGFjZSI6Imt1YmUtc3lzdGVtIiwicG9kIjp7Im5hbWUiOiJjb3JlZG5zLTY2ZmZjYzZiNTgteDc5aGIiLCJ1aWQiOiI1YTYzN2Q3Yi0zZmIwLTRmZmYtYWY5Zi1kYWViOTI5MDBkMDcifSwic2VydmljZWFjY291bnQiOnsibmFtZSI6ImNvcmVkbnMiLCJ1aWQiOiI0MTBiYjFhNS04NTExLTRjZjYtODVkYy1lNmVmNTJhYTI2ZTUifX0sIm5iZiI6MTY2MTc5NTQ5Miwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50Omt1YmUtc3lzdGVtOmNvcmVkbnMifQ.YaGZcYfK4WDrINHsmcGa2WM_h1G2YwxxxxtjhJza7VSW3lW_md60zG9k1GVlBCQeroe6aOe4297nPoiY9l2gSY2rQzaMPGV--CyoU1BRGKMb_7zJvOh1h1Bd-q90tot7RtW5cL2DQE3ZJxa0lz2fLihN0tHSw2ZLaoBWtGs8tkNXC5jV9Tm4SK6dpt5GbgZOSYxHx4Zy1epgiLzR_UKvbqhCHyY614AKN9YbcJW0vI9EU8rPIltV0utbBR-Sj039oQOIKGeKm-SN7Qaxr2RG2o9a1oknVMZi8bEiqs5zEpKZHBlbzo-oNFd3J2V7ZjT3sHs7_tcJQqLrBeYG8HIojA\", \"vcluster.loft.sh/object-namespace\": \"kube-system\", \"vcluster.loft.sh/service-account-name\": \"coredns\", \"cluster-autoscaler.kubernetes.io/safe-to-evict\": \"true\"}, \"managedFields\": [{\"time\": \"2022-08-29T17:51:32Z\", \"manager\": \"vcluster\", \"fieldsV1\": {\"f:spec\": {\"f:volumes\": {\".\": {}, \"k:{\\\"name\\\":\\\"config-volume\\\"}\": {\".\": {}, \"f:name\": {}, \"f:configMap\": {\".\": {}, \"f:name\": {}, \"f:items\": {}, \"f:defaultMode\": {}}}, \"k:{\\\"name\\\":\\\"custom-config-volume\\\"}\": {\".\": {}, \"f:name\": {}, \"f:configMap\": {\".\": {}, \"f:name\": {}, \"f:optional\": {}, \"f:defaultMode\": {}}}, \"k:{\\\"name\\\":\\\"kube-api-access-f2bmn\\\"}\": {\".\": {}, \"f:name\": {}, \"f:projected\": {\".\": {}, \"f:sources\": {}, \"f:defaultMode\": {}}}}, \"f:hostname\": {}, \"f:dnsPolicy\": {}, \"f:containers\": {\"k:{\\\"name\\\":\\\"coredns\\\"}\": {\".\": {}, \"f:env\": {\".\": {}, \"k:{\\\"name\\\":\\\"KUBERNETES_PORT\\\"}\": {\".\": {}, \"f:name\": {}, \"f:value\": {}}, \"k:{\\\"name\\\":\\\"KUBERNETES_PORT_443_TCP\\\"}\": {\".\": {}, \"f:name\": {}, \"f:value\": {}}, \"k:{\\\"name\\\":\\\"KUBERNETES_SERVICE_HOST\\\"}\": {\".\": {}, \"f:name\": {}, \"f:value\": {}}, \"k:{\\\"name\\\":\\\"KUBERNETES_SERVICE_PORT\\\"}\": {\".\": {}, \"f:name\": {}, \"f:value\": {}}, \"k:{\\\"name\\\":\\\"KUBERNETES_PORT_443_TCP_ADDR\\\"}\": {\".\": {}, \"f:name\": {}, \"f:value\": {}}, \"k:{\\\"name\\\":\\\"KUBERNETES_PORT_443_TCP_PORT\\\"}\": {\".\": {}, \"f:name\": {}, \"f:value\": {}}, \"k:{\\\"name\\\":\\\"KUBERNETES_PORT_443_TCP_PROTO\\\"}\": {\".\": {}, \"f:name\": {}, \"f:value\": {}}, \"k:{\\\"name\\\":\\\"KUBERNETES_SERVICE_PORT_HTTPS\\\"}\": {\".\": {}, \"f:name\": {}, \"f:value\": {}}}, \"f:args\": {}, \"f:name\": {}, \"f:image\": {}, \"f:ports\": {\".\": {}, \"k:{\\\"containerPort\\\":1053,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:name\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}, \"k:{\\\"containerPort\\\":1053,\\\"protocol\\\":\\\"UDP\\\"}\": {\".\": {}, \"f:name\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}, \"k:{\\\"containerPort\\\":9153,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:name\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}}, \"f:resources\": {\".\": {}, \"f:limits\": {\".\": {}, \"f:cpu\": {}, \"f:memory\": {}}, \"f:requests\": {\".\": {}, \"f:cpu\": {}, \"f:memory\": {}}}, \"f:volumeMounts\": {\".\": {}, \"k:{\\\"mountPath\\\":\\\"/etc/coredns\\\"}\": {\".\": {}, \"f:name\": {}, \"f:readOnly\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/etc/coredns/custom\\\"}\": {\".\": {}, \"f:name\": {}, \"f:readOnly\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/var/run/secrets/kubernetes.io/serviceaccount\\\"}\": {\".\": {}, \"f:name\": {}, \"f:readOnly\": {}, \"f:mountPath\": {}}}, \"f:livenessProbe\": {\".\": {}, \"f:httpGet\": {\".\": {}, \"f:path\": {}, \"f:port\": {}, \"f:scheme\": {}}, \"f:periodSeconds\": {}, \"f:timeoutSeconds\": {}, \"f:failureThreshold\": {}, \"f:successThreshold\": {}, \"f:initialDelaySeconds\": {}}, \"f:readinessProbe\": {\".\": {}, \"f:httpGet\": {\".\": {}, \"f:path\": {}, \"f:port\": {}, \"f:scheme\": {}}, \"f:periodSeconds\": {}, \"f:timeoutSeconds\": {}, \"f:failureThreshold\": {}, \"f:successThreshold\": {}}, \"f:imagePullPolicy\": {}, \"f:securityContext\": {\".\": {}, \"f:runAsUser\": {}, \"f:capabilities\": {\".\": {}, \"f:drop\": {}}, \"f:runAsNonRoot\": {}, \"f:readOnlyRootFilesystem\": {}, \"f:allowPrivilegeEscalation\": {}}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:hostAliases\": {\".\": {}, \"k:{\\\"ip\\\":\\\"10.104.200.214\\\"}\": {\".\": {}, \"f:ip\": {}, \"f:hostnames\": {}}}, \"f:tolerations\": {}, \"f:nodeSelector\": {}, \"f:restartPolicy\": {}, \"f:schedulerName\": {}, \"f:serviceAccount\": {}, \"f:securityContext\": {}, \"f:preemptionPolicy\": {}, \"f:enableServiceLinks\": {}, \"f:serviceAccountName\": {}, \"f:topologySpreadConstraints\": {\".\": {}, \"k:{\\\"topologyKey\\\":\\\"kubernetes.io/hostname\\\",\\\"whenUnsatisfiable\\\":\\\"DoNotSchedule\\\"}\": {\".\": {}, \"f:maxSkew\": {}, \"f:topologyKey\": {}, \"f:labelSelector\": {}, \"f:whenUnsatisfiable\": {}}}, \"f:automountServiceAccountToken\": {}, \"f:terminationGracePeriodSeconds\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:vcluster.loft.sh/namespace\": {}, \"f:vcluster.loft.sh/managed-by\": {}, \"f:vcluster.loft.sh/label-myvc1-x-f0d64011ff\": {}, \"f:vcluster.loft.sh/label-myvc1-x-fdcdfa3fd8\": {}, \"f:vcluster.loft.sh/ns-label-myvc1-x-cf1227b7b2\": {}}, \"f:annotations\": {\".\": {}, \"f:vcluster.loft.sh/uid\": {}, \"f:vcluster.loft.sh/name\": {}, \"f:vcluster.loft.sh/labels\": {}, \"f:vcluster.loft.sh/namespace\": {}, \"f:vcluster.loft.sh/object-name\": {}, \"f:vcluster.loft.sh/owner-set-kind\": {}, \"f:vcluster.loft.sh/token-jtosudef\": {}, \"f:vcluster.loft.sh/object-namespace\": {}, \"f:vcluster.loft.sh/service-account-name\": {}, \"f:cluster-autoscaler.kubernetes.io/safe-to-evict\": {}}, \"f:ownerReferences\": {\".\": {}, \"k:{\\\"uid\\\":\\\"9f4a0851-85b1-4623-bcbe-c4b4d7ac9d5e\\\"}\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2022-08-29T17:51:34Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:status\": {\"f:phase\": {}, \"f:podIP\": {}, \"f:hostIP\": {}, \"f:podIPs\": {\".\": {}, \"k:{\\\"ip\\\":\\\"10.244.1.61\\\"}\": {\".\": {}, \"f:ip\": {}}}, \"f:startTime\": {}, \"f:conditions\": {\"k:{\\\"type\\\":\\\"Ready\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"Initialized\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"ContainersReady\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}, \"f:containerStatuses\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}], \"ownerReferences\": [{\"uid\": \"9f4a0851-85b1-4623-bcbe-c4b4d7ac9d5e\", \"kind\": \"Service\", \"name\": \"myvc1\", \"apiVersion\": \"v1\", \"controller\": true}], \"resourceVersion\": \"157302405\", \"creationTimestamp\": \"2022-08-29T17:51:32Z\"}, \"apiVersion\": \"v1\"}', '2022-08-30 01:51:32', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (868, 'cicd', 'gitea-896444974-fmhcj', '', 'v1', 'pods', 'Pod', '103973293', 'a2f0ec9d-698c-4e99-98b1-46dc2c115828', 'c0ef3fb7-4562-4453-aff5-0c96f0c55a11', 'e5c8267a7360ab37f43f', '{\"kind\": \"Pod\", \"spec\": {\"volumes\": [{\"name\": \"data\", \"hostPath\": {\"path\": \"/home/shenyi/gitea\", \"type\": \"\"}}, {\"name\": \"kube-api-access-q6qdl\", \"projected\": {\"sources\": [{\"serviceAccountToken\": {\"path\": \"token\", \"expirationSeconds\": 3607}}, {\"configMap\": {\"name\": \"kube-root-ca.crt\", \"items\": [{\"key\": \"ca.crt\", \"path\": \"ca.crt\"}]}}, {\"downwardAPI\": {\"items\": [{\"path\": \"namespace\", \"fieldRef\": {\"fieldPath\": \"metadata.namespace\", \"apiVersion\": \"v1\"}}]}}], \"defaultMode\": 420}}], \"nodeName\": \"dsjs2\", \"priority\": 0, \"dnsPolicy\": \"ClusterFirst\", \"containers\": [{\"name\": \"gitea\", \"image\": \"gitea/gitea\", \"ports\": [{\"protocol\": \"TCP\", \"containerPort\": 3000}, {\"protocol\": \"TCP\", \"containerPort\": 22}], \"resources\": {}, \"volumeMounts\": [{\"name\": \"data\", \"mountPath\": \"/data\"}, {\"name\": \"kube-api-access-q6qdl\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\"}], \"imagePullPolicy\": \"IfNotPresent\", \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"tolerations\": [{\"key\": \"node.kubernetes.io/not-ready\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}, {\"key\": \"node.kubernetes.io/unreachable\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}], \"restartPolicy\": \"Always\", \"schedulerName\": \"default-scheduler\", \"serviceAccount\": \"default\", \"securityContext\": {}, \"preemptionPolicy\": \"PreemptLowerPriority\", \"enableServiceLinks\": true, \"serviceAccountName\": \"default\", \"terminationGracePeriodSeconds\": 30}, \"status\": {\"phase\": \"Running\", \"podIP\": \"10.244.1.191\", \"hostIP\": \"172.17.70.145\", \"podIPs\": [{\"ip\": \"10.244.1.191\"}], \"qosClass\": \"BestEffort\", \"startTime\": \"2022-01-21T04:48:40Z\", \"conditions\": [{\"type\": \"Initialized\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-01-21T04:48:40Z\"}, {\"type\": \"Ready\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-01-21T05:12:20Z\"}, {\"type\": \"ContainersReady\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-01-21T05:12:20Z\"}, {\"type\": \"PodScheduled\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-01-21T04:48:40Z\"}], \"containerStatuses\": [{\"name\": \"gitea\", \"image\": \"gitea/gitea:latest\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2022-01-21T05:12:20Z\"}}, \"imageID\": \"docker-pullable://gitea/gitea@sha256:852a6b4a5339aa2ee5ff27207ef4de159dc1a0787cc229247bbe658baba4e0e4\", \"started\": true, \"lastState\": {}, \"containerID\": \"docker://fcebdc451ac5525c7a0998f8dc74bc407eb84e07af0b9a9c357e2925b1e1ef09\", \"restartCount\": 0}]}, \"metadata\": {\"uid\": \"c0ef3fb7-4562-4453-aff5-0c96f0c55a11\", \"name\": \"gitea-896444974-fmhcj\", \"labels\": {\"app\": \"gitea\", \"pod-template-hash\": \"896444974\"}, \"namespace\": \"cicd\", \"generateName\": \"gitea-896444974-\", \"managedFields\": [{\"time\": \"2022-01-21T04:42:29Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:spec\": {\"f:volumes\": {\".\": {}, \"k:{\\\"name\\\":\\\"data\\\"}\": {\".\": {}, \"f:name\": {}, \"f:hostPath\": {\".\": {}, \"f:path\": {}, \"f:type\": {}}}}, \"f:nodeName\": {}, \"f:dnsPolicy\": {}, \"f:containers\": {\"k:{\\\"name\\\":\\\"gitea\\\"}\": {\".\": {}, \"f:name\": {}, \"f:image\": {}, \"f:ports\": {\".\": {}, \"k:{\\\"containerPort\\\":22,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}, \"k:{\\\"containerPort\\\":3000,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}}, \"f:resources\": {}, \"f:volumeMounts\": {\".\": {}, \"k:{\\\"mountPath\\\":\\\"/data\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}}, \"f:imagePullPolicy\": {}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:restartPolicy\": {}, \"f:schedulerName\": {}, \"f:securityContext\": {}, \"f:enableServiceLinks\": {}, \"f:terminationGracePeriodSeconds\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:app\": {}, \"f:pod-template-hash\": {}}, \"f:generateName\": {}, \"f:ownerReferences\": {\".\": {}, \"k:{\\\"uid\\\":\\\"a2f0ec9d-698c-4e99-98b1-46dc2c115828\\\"}\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2022-01-21T05:20:37Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:status\": {\"f:phase\": {}, \"f:podIP\": {}, \"f:hostIP\": {}, \"f:podIPs\": {\".\": {}, \"k:{\\\"ip\\\":\\\"10.244.1.191\\\"}\": {\".\": {}, \"f:ip\": {}}}, \"f:startTime\": {}, \"f:conditions\": {\".\": {}, \"k:{\\\"type\\\":\\\"Ready\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"Initialized\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"PodScheduled\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"ContainersReady\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}, \"f:containerStatuses\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}], \"ownerReferences\": [{\"uid\": \"a2f0ec9d-698c-4e99-98b1-46dc2c115828\", \"kind\": \"ReplicaSet\", \"name\": \"gitea-896444974\", \"apiVersion\": \"apps/v1\", \"controller\": true, \"blockOwnerDeletion\": true}], \"resourceVersion\": \"103973293\", \"creationTimestamp\": \"2022-01-21T04:42:29Z\"}, \"apiVersion\": \"v1\"}', '2022-01-21 12:42:29', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (869, 'default', 'myngx-756c4dd66-jfftv', '', 'v1', 'pods', 'Pod', '152837587', 'd02ed676-a66f-4908-b8d5-354194e3bda8', '02ad1bfc-950f-435a-bfdf-1f34924912a4', '9ac44c0735348b67db60', '{\"kind\": \"Pod\", \"spec\": {\"volumes\": [{\"name\": \"kube-api-access-tppcn\", \"projected\": {\"sources\": [{\"serviceAccountToken\": {\"path\": \"token\", \"expirationSeconds\": 3607}}, {\"configMap\": {\"name\": \"kube-root-ca.crt\", \"items\": [{\"key\": \"ca.crt\", \"path\": \"ca.crt\"}]}}, {\"downwardAPI\": {\"items\": [{\"path\": \"namespace\", \"fieldRef\": {\"fieldPath\": \"metadata.namespace\", \"apiVersion\": \"v1\"}}]}}], \"defaultMode\": 420}}], \"nodeName\": \"dsjs2\", \"priority\": 0, \"dnsPolicy\": \"ClusterFirst\", \"containers\": [{\"name\": \"nginx\", \"image\": \"nginx:1.18-alpine\", \"ports\": [{\"protocol\": \"TCP\", \"containerPort\": 80}], \"resources\": {}, \"volumeMounts\": [{\"name\": \"kube-api-access-tppcn\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\"}], \"imagePullPolicy\": \"IfNotPresent\", \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"tolerations\": [{\"key\": \"node.kubernetes.io/not-ready\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}, {\"key\": \"node.kubernetes.io/unreachable\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}], \"restartPolicy\": \"Always\", \"schedulerName\": \"default-scheduler\", \"serviceAccount\": \"default\", \"securityContext\": {}, \"preemptionPolicy\": \"PreemptLowerPriority\", \"enableServiceLinks\": true, \"serviceAccountName\": \"default\", \"terminationGracePeriodSeconds\": 30}, \"status\": {\"phase\": \"Running\", \"podIP\": \"10.244.1.16\", \"hostIP\": \"172.17.70.145\", \"podIPs\": [{\"ip\": \"10.244.1.16\"}], \"qosClass\": \"BestEffort\", \"startTime\": \"2022-08-04T17:21:59Z\", \"conditions\": [{\"type\": \"Initialized\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-08-04T17:21:59Z\"}, {\"type\": \"Ready\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-08-04T17:22:00Z\"}, {\"type\": \"ContainersReady\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-08-04T17:22:00Z\"}, {\"type\": \"PodScheduled\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-08-04T17:18:45Z\"}], \"containerStatuses\": [{\"name\": \"nginx\", \"image\": \"nginx:1.18-alpine\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2022-08-04T17:22:00Z\"}}, \"imageID\": \"docker-pullable://nginx@sha256:93baf2ec1bfefd04d29eb070900dd5d79b0f79863653453397e55a5b663a6cb1\", \"started\": true, \"lastState\": {}, \"containerID\": \"docker://8c9898ddd6e917b3c15c34b7c84c937f5da2ae0f0782388e4fbc04deec9b5b81\", \"restartCount\": 0}]}, \"metadata\": {\"uid\": \"02ad1bfc-950f-435a-bfdf-1f34924912a4\", \"name\": \"myngx-756c4dd66-jfftv\", \"labels\": {\"app\": \"myngx\", \"pod-template-hash\": \"756c4dd66\"}, \"namespace\": \"default\", \"generateName\": \"myngx-756c4dd66-\", \"managedFields\": [{\"time\": \"2022-08-04T17:18:45Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:spec\": {\"f:dnsPolicy\": {}, \"f:containers\": {\"k:{\\\"name\\\":\\\"nginx\\\"}\": {\".\": {}, \"f:name\": {}, \"f:image\": {}, \"f:ports\": {\".\": {}, \"k:{\\\"containerPort\\\":80,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}}, \"f:resources\": {}, \"f:imagePullPolicy\": {}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:restartPolicy\": {}, \"f:schedulerName\": {}, \"f:securityContext\": {}, \"f:enableServiceLinks\": {}, \"f:terminationGracePeriodSeconds\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:app\": {}, \"f:pod-template-hash\": {}}, \"f:generateName\": {}, \"f:ownerReferences\": {\".\": {}, \"k:{\\\"uid\\\":\\\"d02ed676-a66f-4908-b8d5-354194e3bda8\\\"}\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2022-08-04T17:18:46Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:status\": {\"f:phase\": {}, \"f:podIP\": {}, \"f:hostIP\": {}, \"f:podIPs\": {\".\": {}, \"k:{\\\"ip\\\":\\\"10.244.1.16\\\"}\": {\".\": {}, \"f:ip\": {}}}, \"f:startTime\": {}, \"f:conditions\": {\"k:{\\\"type\\\":\\\"Ready\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"Initialized\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"ContainersReady\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}, \"f:containerStatuses\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}], \"ownerReferences\": [{\"uid\": \"d02ed676-a66f-4908-b8d5-354194e3bda8\", \"kind\": \"ReplicaSet\", \"name\": \"myngx-756c4dd66\", \"apiVersion\": \"apps/v1\", \"controller\": true, \"blockOwnerDeletion\": true}], \"resourceVersion\": \"152837587\", \"creationTimestamp\": \"2022-08-04T17:18:45Z\"}, \"apiVersion\": \"v1\"}', '2022-08-05 01:18:45', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (870, 'kube-system', 'kube-proxy-p2xqv', '', 'v1', 'pods', 'Pod', '136982951', 'f4a0192c-e4d5-454f-b05a-ab242b06c619', 'e00dc731-7577-4f69-8c1f-6e402ba7d140', 'cd22da5eb2146969c9f8', '{\"kind\": \"Pod\", \"spec\": {\"volumes\": [{\"name\": \"kube-proxy\", \"configMap\": {\"name\": \"kube-proxy\", \"defaultMode\": 420}}, {\"name\": \"xtables-lock\", \"hostPath\": {\"path\": \"/run/xtables.lock\", \"type\": \"FileOrCreate\"}}, {\"name\": \"lib-modules\", \"hostPath\": {\"path\": \"/lib/modules\", \"type\": \"\"}}, {\"name\": \"kube-api-access-t2945\", \"projected\": {\"sources\": [{\"serviceAccountToken\": {\"path\": \"token\", \"expirationSeconds\": 3607}}, {\"configMap\": {\"name\": \"kube-root-ca.crt\", \"items\": [{\"key\": \"ca.crt\", \"path\": \"ca.crt\"}]}}, {\"downwardAPI\": {\"items\": [{\"path\": \"namespace\", \"fieldRef\": {\"fieldPath\": \"metadata.namespace\", \"apiVersion\": \"v1\"}}]}}], \"defaultMode\": 420}}], \"affinity\": {\"nodeAffinity\": {\"requiredDuringSchedulingIgnoredDuringExecution\": {\"nodeSelectorTerms\": [{\"matchFields\": [{\"key\": \"metadata.name\", \"values\": [\"dsjs2\"], \"operator\": \"In\"}]}]}}}, \"nodeName\": \"dsjs2\", \"priority\": 2000001000, \"dnsPolicy\": \"ClusterFirst\", \"containers\": [{\"env\": [{\"name\": \"NODE_NAME\", \"valueFrom\": {\"fieldRef\": {\"fieldPath\": \"spec.nodeName\", \"apiVersion\": \"v1\"}}}], \"name\": \"kube-proxy\", \"image\": \"k8s.gcr.io/kube-proxy:v1.22.0\", \"command\": [\"/usr/local/bin/kube-proxy\", \"--config=/var/lib/kube-proxy/config.conf\", \"--hostname-override=$(NODE_NAME)\"], \"resources\": {}, \"volumeMounts\": [{\"name\": \"kube-proxy\", \"mountPath\": \"/var/lib/kube-proxy\"}, {\"name\": \"xtables-lock\", \"mountPath\": \"/run/xtables.lock\"}, {\"name\": \"lib-modules\", \"readOnly\": true, \"mountPath\": \"/lib/modules\"}, {\"name\": \"kube-api-access-t2945\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\"}], \"imagePullPolicy\": \"IfNotPresent\", \"securityContext\": {\"privileged\": true}, \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"hostNetwork\": true, \"tolerations\": [{\"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/not-ready\", \"effect\": \"NoExecute\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/unreachable\", \"effect\": \"NoExecute\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/disk-pressure\", \"effect\": \"NoSchedule\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/memory-pressure\", \"effect\": \"NoSchedule\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/pid-pressure\", \"effect\": \"NoSchedule\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/unschedulable\", \"effect\": \"NoSchedule\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/network-unavailable\", \"effect\": \"NoSchedule\", \"operator\": \"Exists\"}], \"nodeSelector\": {\"kubernetes.io/os\": \"linux\"}, \"restartPolicy\": \"Always\", \"schedulerName\": \"default-scheduler\", \"serviceAccount\": \"kube-proxy\", \"securityContext\": {}, \"preemptionPolicy\": \"PreemptLowerPriority\", \"priorityClassName\": \"system-node-critical\", \"enableServiceLinks\": true, \"serviceAccountName\": \"kube-proxy\", \"terminationGracePeriodSeconds\": 30}, \"status\": {\"phase\": \"Running\", \"podIP\": \"172.17.70.145\", \"hostIP\": \"172.17.70.145\", \"podIPs\": [{\"ip\": \"172.17.70.145\"}], \"qosClass\": \"BestEffort\", \"startTime\": \"2021-08-16T18:25:15Z\", \"conditions\": [{\"type\": \"Initialized\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-08-16T18:25:15Z\"}, {\"type\": \"Ready\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-01-21T04:31:49Z\"}, {\"type\": \"ContainersReady\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-01-21T04:31:49Z\"}, {\"type\": \"PodScheduled\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-08-16T18:25:14Z\"}], \"containerStatuses\": [{\"name\": \"kube-proxy\", \"image\": \"k8s.gcr.io/kube-proxy:v1.22.0\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2022-01-21T04:31:42Z\"}}, \"imageID\": \"docker://sha256:bbad1636b30d8e65e6f9d7a5dad9897c909f19bd665a0a230c245a58278a4a14\", \"started\": true, \"lastState\": {}, \"containerID\": \"docker://758d4d1dd3ef3d4036f59f4861bbd83f32069b5ee826fcb8f48bbdd805b2656a\", \"restartCount\": 1}]}, \"metadata\": {\"uid\": \"e00dc731-7577-4f69-8c1f-6e402ba7d140\", \"name\": \"kube-proxy-p2xqv\", \"labels\": {\"k8s-app\": \"kube-proxy\", \"pod-template-generation\": \"1\", \"controller-revision-hash\": \"55847b5bbd\"}, \"namespace\": \"kube-system\", \"generateName\": \"kube-proxy-\", \"managedFields\": [{\"time\": \"2021-08-16T18:25:14Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:spec\": {\"f:volumes\": {\".\": {}, \"k:{\\\"name\\\":\\\"kube-proxy\\\"}\": {\".\": {}, \"f:name\": {}, \"f:configMap\": {\".\": {}, \"f:name\": {}, \"f:defaultMode\": {}}}, \"k:{\\\"name\\\":\\\"lib-modules\\\"}\": {\".\": {}, \"f:name\": {}, \"f:hostPath\": {\".\": {}, \"f:path\": {}, \"f:type\": {}}}, \"k:{\\\"name\\\":\\\"xtables-lock\\\"}\": {\".\": {}, \"f:name\": {}, \"f:hostPath\": {\".\": {}, \"f:path\": {}, \"f:type\": {}}}}, \"f:affinity\": {\".\": {}, \"f:nodeAffinity\": {\".\": {}, \"f:requiredDuringSchedulingIgnoredDuringExecution\": {}}}, \"f:dnsPolicy\": {}, \"f:containers\": {\"k:{\\\"name\\\":\\\"kube-proxy\\\"}\": {\".\": {}, \"f:env\": {\".\": {}, \"k:{\\\"name\\\":\\\"NODE_NAME\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:fieldRef\": {}}}}, \"f:name\": {}, \"f:image\": {}, \"f:command\": {}, \"f:resources\": {}, \"f:volumeMounts\": {\".\": {}, \"k:{\\\"mountPath\\\":\\\"/lib/modules\\\"}\": {\".\": {}, \"f:name\": {}, \"f:readOnly\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/run/xtables.lock\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/var/lib/kube-proxy\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}}, \"f:imagePullPolicy\": {}, \"f:securityContext\": {\".\": {}, \"f:privileged\": {}}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:hostNetwork\": {}, \"f:tolerations\": {}, \"f:nodeSelector\": {}, \"f:restartPolicy\": {}, \"f:schedulerName\": {}, \"f:serviceAccount\": {}, \"f:securityContext\": {}, \"f:priorityClassName\": {}, \"f:enableServiceLinks\": {}, \"f:serviceAccountName\": {}, \"f:terminationGracePeriodSeconds\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:k8s-app\": {}, \"f:pod-template-generation\": {}, \"f:controller-revision-hash\": {}}, \"f:generateName\": {}, \"f:ownerReferences\": {\".\": {}, \"k:{\\\"uid\\\":\\\"f4a0192c-e4d5-454f-b05a-ab242b06c619\\\"}\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2022-01-21T04:50:45Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:status\": {\"f:phase\": {}, \"f:podIP\": {}, \"f:hostIP\": {}, \"f:podIPs\": {\".\": {}, \"k:{\\\"ip\\\":\\\"172.17.70.145\\\"}\": {\".\": {}, \"f:ip\": {}}}, \"f:startTime\": {}, \"f:conditions\": {\"k:{\\\"type\\\":\\\"Ready\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"Initialized\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"ContainersReady\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}, \"f:containerStatuses\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}], \"ownerReferences\": [{\"uid\": \"f4a0192c-e4d5-454f-b05a-ab242b06c619\", \"kind\": \"DaemonSet\", \"name\": \"kube-proxy\", \"apiVersion\": \"apps/v1\", \"controller\": true, \"blockOwnerDeletion\": true}], \"resourceVersion\": \"136982951\", \"creationTimestamp\": \"2021-08-16T18:25:14Z\"}, \"apiVersion\": \"v1\"}', '2021-08-17 02:25:14', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (871, 'argocd', 'argocd-dex-server-55d954784c-49wmw', '', 'v1', 'pods', 'Pod', '103277324', '7ad07707-513d-401d-9907-2264fde081cf', '59bebe9b-fe81-4d90-ba96-07d0e175e7df', 'b6239ba02c3bddd29f8f', '{\"kind\": \"Pod\", \"spec\": {\"volumes\": [{\"name\": \"static-files\", \"emptyDir\": {}}, {\"name\": \"dexconfig\", \"emptyDir\": {}}, {\"name\": \"kube-api-access-76d8v\", \"projected\": {\"sources\": [{\"serviceAccountToken\": {\"path\": \"token\", \"expirationSeconds\": 3607}}, {\"configMap\": {\"name\": \"kube-root-ca.crt\", \"items\": [{\"key\": \"ca.crt\", \"path\": \"ca.crt\"}]}}, {\"downwardAPI\": {\"items\": [{\"path\": \"namespace\", \"fieldRef\": {\"fieldPath\": \"metadata.namespace\", \"apiVersion\": \"v1\"}}]}}], \"defaultMode\": 420}}], \"affinity\": {\"podAntiAffinity\": {\"preferredDuringSchedulingIgnoredDuringExecution\": [{\"weight\": 5, \"podAffinityTerm\": {\"topologyKey\": \"kubernetes.io/hostname\", \"labelSelector\": {\"matchLabels\": {\"app.kubernetes.io/part-of\": \"argocd\"}}}}]}}, \"nodeName\": \"dsjs\", \"priority\": 0, \"dnsPolicy\": \"ClusterFirst\", \"containers\": [{\"name\": \"dex\", \"image\": \"dexidp/dex:v2.27.0\", \"ports\": [{\"protocol\": \"TCP\", \"containerPort\": 5556}, {\"protocol\": \"TCP\", \"containerPort\": 5557}, {\"protocol\": \"TCP\", \"containerPort\": 5558}], \"command\": [\"/shared/argocd-dex\", \"rundex\"], \"resources\": {}, \"volumeMounts\": [{\"name\": \"static-files\", \"mountPath\": \"/shared\"}, {\"name\": \"dexconfig\", \"mountPath\": \"/tmp\"}, {\"name\": \"kube-api-access-76d8v\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\"}], \"imagePullPolicy\": \"Always\", \"securityContext\": {\"runAsNonRoot\": true, \"readOnlyRootFilesystem\": true, \"allowPrivilegeEscalation\": false}, \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"tolerations\": [{\"key\": \"node.kubernetes.io/not-ready\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}, {\"key\": \"node.kubernetes.io/unreachable\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}], \"restartPolicy\": \"Always\", \"schedulerName\": \"default-scheduler\", \"initContainers\": [{\"name\": \"copyutil\", \"image\": \"argoproj/argocd:v2.1.2\", \"command\": [\"cp\", \"-n\", \"/usr/local/bin/argocd\", \"/shared/argocd-dex\"], \"resources\": {}, \"volumeMounts\": [{\"name\": \"static-files\", \"mountPath\": \"/shared\"}, {\"name\": \"dexconfig\", \"mountPath\": \"/tmp\"}, {\"name\": \"kube-api-access-76d8v\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\"}], \"imagePullPolicy\": \"Always\", \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"serviceAccount\": \"argocd-dex-server\", \"securityContext\": {}, \"preemptionPolicy\": \"PreemptLowerPriority\", \"enableServiceLinks\": true, \"serviceAccountName\": \"argocd-dex-server\", \"terminationGracePeriodSeconds\": 30}, \"status\": {\"phase\": \"Running\", \"podIP\": \"10.244.0.216\", \"hostIP\": \"172.17.70.144\", \"podIPs\": [{\"ip\": \"10.244.0.216\"}], \"qosClass\": \"BestEffort\", \"startTime\": \"2022-01-19T16:02:38Z\", \"conditions\": [{\"type\": \"Initialized\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-01-19T16:06:34Z\"}, {\"type\": \"Ready\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-01-19T16:09:32Z\"}, {\"type\": \"ContainersReady\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-01-19T16:09:32Z\"}, {\"type\": \"PodScheduled\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-01-19T16:02:38Z\"}], \"containerStatuses\": [{\"name\": \"dex\", \"image\": \"dexidp/dex:v2.27.0\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2022-01-19T16:09:31Z\"}}, \"imageID\": \"docker-pullable://dexidp/dex@sha256:ff94efdd1ec68f43e01b39a2d11a73961b1cf73860515893118af731551f1939\", \"started\": true, \"lastState\": {}, \"containerID\": \"docker://6b50b65118425bbe718824d0945b5e645e69f99888cd3a1ee8113d2a6b0a6455\", \"restartCount\": 0}], \"initContainerStatuses\": [{\"name\": \"copyutil\", \"image\": \"argoproj/argocd:v2.1.2\", \"ready\": true, \"state\": {\"terminated\": {\"reason\": \"Completed\", \"exitCode\": 0, \"startedAt\": \"2022-01-19T16:06:32Z\", \"finishedAt\": \"2022-01-19T16:06:33Z\", \"containerID\": \"docker://1b4fd1e6af0af8239cbc1c3883e9e7f1e9f040663edd27a376c5816a861b838f\"}}, \"imageID\": \"docker-pullable://argoproj/argocd@sha256:2e0e725c9282bfb7b08bea7dbbfd8dbce6410d670e3f8addd9b6540d818ad520\", \"lastState\": {}, \"containerID\": \"docker://1b4fd1e6af0af8239cbc1c3883e9e7f1e9f040663edd27a376c5816a861b838f\", \"restartCount\": 0}]}, \"metadata\": {\"uid\": \"59bebe9b-fe81-4d90-ba96-07d0e175e7df\", \"name\": \"argocd-dex-server-55d954784c-49wmw\", \"labels\": {\"pod-template-hash\": \"55d954784c\", \"app.kubernetes.io/name\": \"argocd-dex-server\"}, \"namespace\": \"argocd\", \"generateName\": \"argocd-dex-server-55d954784c-\", \"managedFields\": [{\"time\": \"2022-01-19T16:02:38Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:spec\": {\"f:volumes\": {\".\": {}, \"k:{\\\"name\\\":\\\"dexconfig\\\"}\": {\".\": {}, \"f:name\": {}, \"f:emptyDir\": {}}, \"k:{\\\"name\\\":\\\"static-files\\\"}\": {\".\": {}, \"f:name\": {}, \"f:emptyDir\": {}}}, \"f:affinity\": {\".\": {}, \"f:podAntiAffinity\": {\".\": {}, \"f:preferredDuringSchedulingIgnoredDuringExecution\": {}}}, \"f:dnsPolicy\": {}, \"f:containers\": {\"k:{\\\"name\\\":\\\"dex\\\"}\": {\".\": {}, \"f:name\": {}, \"f:image\": {}, \"f:ports\": {\".\": {}, \"k:{\\\"containerPort\\\":5556,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}, \"k:{\\\"containerPort\\\":5557,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}, \"k:{\\\"containerPort\\\":5558,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}}, \"f:command\": {}, \"f:resources\": {}, \"f:volumeMounts\": {\".\": {}, \"k:{\\\"mountPath\\\":\\\"/tmp\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/shared\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}}, \"f:imagePullPolicy\": {}, \"f:securityContext\": {\".\": {}, \"f:runAsNonRoot\": {}, \"f:readOnlyRootFilesystem\": {}, \"f:allowPrivilegeEscalation\": {}}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:restartPolicy\": {}, \"f:schedulerName\": {}, \"f:initContainers\": {\".\": {}, \"k:{\\\"name\\\":\\\"copyutil\\\"}\": {\".\": {}, \"f:name\": {}, \"f:image\": {}, \"f:command\": {}, \"f:resources\": {}, \"f:volumeMounts\": {\".\": {}, \"k:{\\\"mountPath\\\":\\\"/tmp\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/shared\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}}, \"f:imagePullPolicy\": {}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:serviceAccount\": {}, \"f:securityContext\": {}, \"f:enableServiceLinks\": {}, \"f:serviceAccountName\": {}, \"f:terminationGracePeriodSeconds\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:pod-template-hash\": {}, \"f:app.kubernetes.io/name\": {}}, \"f:generateName\": {}, \"f:ownerReferences\": {\".\": {}, \"k:{\\\"uid\\\":\\\"7ad07707-513d-401d-9907-2264fde081cf\\\"}\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2022-01-19T16:09:32Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:status\": {\"f:phase\": {}, \"f:podIP\": {}, \"f:hostIP\": {}, \"f:podIPs\": {\".\": {}, \"k:{\\\"ip\\\":\\\"10.244.0.216\\\"}\": {\".\": {}, \"f:ip\": {}}}, \"f:startTime\": {}, \"f:conditions\": {\"k:{\\\"type\\\":\\\"Ready\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"Initialized\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"ContainersReady\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}, \"f:containerStatuses\": {}, \"f:initContainerStatuses\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}], \"ownerReferences\": [{\"uid\": \"7ad07707-513d-401d-9907-2264fde081cf\", \"kind\": \"ReplicaSet\", \"name\": \"argocd-dex-server-55d954784c\", \"apiVersion\": \"apps/v1\", \"controller\": true, \"blockOwnerDeletion\": true}], \"resourceVersion\": \"103277324\", \"creationTimestamp\": \"2022-01-19T16:02:38Z\"}, \"apiVersion\": \"v1\"}', '2022-01-20 00:02:38', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (872, 'ingress-nginx', 'myingress-ingress-nginx-controller-5pjlb', '', 'v1', 'pods', 'Pod', '136982872', '8c6da241-aa55-44d8-8169-b2e85565218f', 'e216d8e7-df0e-4bb3-8672-29fca8974c99', '9a0828301e79e9c74d93', '{\"kind\": \"Pod\", \"spec\": {\"volumes\": [{\"name\": \"kube-api-access-rrnzs\", \"projected\": {\"sources\": [{\"serviceAccountToken\": {\"path\": \"token\", \"expirationSeconds\": 3607}}, {\"configMap\": {\"name\": \"kube-root-ca.crt\", \"items\": [{\"key\": \"ca.crt\", \"path\": \"ca.crt\"}]}}, {\"downwardAPI\": {\"items\": [{\"path\": \"namespace\", \"fieldRef\": {\"fieldPath\": \"metadata.namespace\", \"apiVersion\": \"v1\"}}]}}], \"defaultMode\": 420}}], \"affinity\": {\"nodeAffinity\": {\"requiredDuringSchedulingIgnoredDuringExecution\": {\"nodeSelectorTerms\": [{\"matchFields\": [{\"key\": \"metadata.name\", \"values\": [\"dsjs2\"], \"operator\": \"In\"}]}]}}}, \"nodeName\": \"dsjs2\", \"priority\": 0, \"dnsPolicy\": \"ClusterFirst\", \"containers\": [{\"env\": [{\"name\": \"POD_NAME\", \"valueFrom\": {\"fieldRef\": {\"fieldPath\": \"metadata.name\", \"apiVersion\": \"v1\"}}}, {\"name\": \"POD_NAMESPACE\", \"valueFrom\": {\"fieldRef\": {\"fieldPath\": \"metadata.namespace\", \"apiVersion\": \"v1\"}}}, {\"name\": \"LD_PRELOAD\", \"value\": \"/usr/local/lib/libmimalloc.so\"}], \"args\": [\"/nginx-ingress-controller\", \"--publish-service=$(POD_NAMESPACE)/myingress-ingress-nginx-controller\", \"--election-id=ingress-controller-leader\", \"--controller-class=k8s.io/ingress-nginx\", \"--configmap=$(POD_NAMESPACE)/myingress-ingress-nginx-controller\", \"--enable-ssl-passthrough\"], \"name\": \"controller\", \"image\": \"docker.io/willdockerhub/ingress-nginx-controller:v1.0.0-beta.3\", \"ports\": [{\"name\": \"http\", \"hostPort\": 80, \"protocol\": \"TCP\", \"containerPort\": 80}, {\"name\": \"https\", \"hostPort\": 443, \"protocol\": \"TCP\", \"containerPort\": 443}], \"lifecycle\": {\"preStop\": {\"exec\": {\"command\": [\"/wait-shutdown\"]}}}, \"resources\": {\"requests\": {\"cpu\": \"100m\", \"memory\": \"90Mi\"}}, \"volumeMounts\": [{\"name\": \"kube-api-access-rrnzs\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\"}], \"livenessProbe\": {\"httpGet\": {\"path\": \"/healthz\", \"port\": 10254, \"scheme\": \"HTTP\"}, \"periodSeconds\": 10, \"timeoutSeconds\": 1, \"failureThreshold\": 5, \"successThreshold\": 1, \"initialDelaySeconds\": 10}, \"readinessProbe\": {\"httpGet\": {\"path\": \"/healthz\", \"port\": 10254, \"scheme\": \"HTTP\"}, \"periodSeconds\": 10, \"timeoutSeconds\": 1, \"failureThreshold\": 3, \"successThreshold\": 1, \"initialDelaySeconds\": 10}, \"imagePullPolicy\": \"IfNotPresent\", \"securityContext\": {\"runAsUser\": 101, \"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"], \"drop\": [\"ALL\"]}, \"allowPrivilegeEscalation\": true}, \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"hostNetwork\": true, \"tolerations\": [{\"key\": \"node.kubernetes.io/not-ready\", \"effect\": \"NoExecute\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/unreachable\", \"effect\": \"NoExecute\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/disk-pressure\", \"effect\": \"NoSchedule\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/memory-pressure\", \"effect\": \"NoSchedule\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/pid-pressure\", \"effect\": \"NoSchedule\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/unschedulable\", \"effect\": \"NoSchedule\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/network-unavailable\", \"effect\": \"NoSchedule\", \"operator\": \"Exists\"}], \"nodeSelector\": {\"kubernetes.io/os\": \"linux\"}, \"restartPolicy\": \"Always\", \"schedulerName\": \"default-scheduler\", \"serviceAccount\": \"myingress-ingress-nginx\", \"securityContext\": {}, \"preemptionPolicy\": \"PreemptLowerPriority\", \"enableServiceLinks\": true, \"serviceAccountName\": \"myingress-ingress-nginx\", \"terminationGracePeriodSeconds\": 300}, \"status\": {\"phase\": \"Running\", \"podIP\": \"172.17.70.145\", \"hostIP\": \"172.17.70.145\", \"podIPs\": [{\"ip\": \"172.17.70.145\"}], \"qosClass\": \"Burstable\", \"startTime\": \"2021-09-28T13:18:41Z\", \"conditions\": [{\"type\": \"Initialized\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-09-28T13:18:41Z\"}, {\"type\": \"Ready\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-01-21T04:33:31Z\"}, {\"type\": \"ContainersReady\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-01-21T04:33:31Z\"}, {\"type\": \"PodScheduled\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-09-28T13:18:56Z\"}], \"containerStatuses\": [{\"name\": \"controller\", \"image\": \"willdockerhub/ingress-nginx-controller:v1.0.0-beta.3\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2022-01-21T04:33:13Z\"}}, \"imageID\": \"docker-pullable://willdockerhub/ingress-nginx-controller@sha256:44a7a06b71187a4529b0a9edee5cc22bdf71b414470eff696c3869ea8d90a695\", \"started\": true, \"lastState\": {}, \"containerID\": \"docker://6196da550094a309ce4a5658e1139017d53a7cf3e632846c2b4a4ab564a18d2d\", \"restartCount\": 1}]}, \"metadata\": {\"uid\": \"e216d8e7-df0e-4bb3-8672-29fca8974c99\", \"name\": \"myingress-ingress-nginx-controller-5pjlb\", \"labels\": {\"app.kubernetes.io/name\": \"ingress-nginx\", \"pod-template-generation\": \"5\", \"controller-revision-hash\": \"6cdc7b7848\", \"app.kubernetes.io/instance\": \"myingress\", \"app.kubernetes.io/component\": \"controller\"}, \"namespace\": \"ingress-nginx\", \"generateName\": \"myingress-ingress-nginx-controller-\", \"managedFields\": [{\"time\": \"2021-09-28T13:18:56Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:spec\": {\"f:affinity\": {\".\": {}, \"f:nodeAffinity\": {\".\": {}, \"f:requiredDuringSchedulingIgnoredDuringExecution\": {}}}, \"f:dnsPolicy\": {}, \"f:containers\": {\"k:{\\\"name\\\":\\\"controller\\\"}\": {\".\": {}, \"f:env\": {\".\": {}, \"k:{\\\"name\\\":\\\"POD_NAME\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:fieldRef\": {}}}, \"k:{\\\"name\\\":\\\"LD_PRELOAD\\\"}\": {\".\": {}, \"f:name\": {}, \"f:value\": {}}, \"k:{\\\"name\\\":\\\"POD_NAMESPACE\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:fieldRef\": {}}}}, \"f:args\": {}, \"f:name\": {}, \"f:image\": {}, \"f:ports\": {\".\": {}, \"k:{\\\"containerPort\\\":80,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:name\": {}, \"f:hostPort\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}, \"k:{\\\"containerPort\\\":443,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:name\": {}, \"f:hostPort\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}}, \"f:lifecycle\": {\".\": {}, \"f:preStop\": {\".\": {}, \"f:exec\": {\".\": {}, \"f:command\": {}}}}, \"f:resources\": {\".\": {}, \"f:requests\": {\".\": {}, \"f:cpu\": {}, \"f:memory\": {}}}, \"f:livenessProbe\": {\".\": {}, \"f:httpGet\": {\".\": {}, \"f:path\": {}, \"f:port\": {}, \"f:scheme\": {}}, \"f:periodSeconds\": {}, \"f:timeoutSeconds\": {}, \"f:failureThreshold\": {}, \"f:successThreshold\": {}, \"f:initialDelaySeconds\": {}}, \"f:readinessProbe\": {\".\": {}, \"f:httpGet\": {\".\": {}, \"f:path\": {}, \"f:port\": {}, \"f:scheme\": {}}, \"f:periodSeconds\": {}, \"f:timeoutSeconds\": {}, \"f:failureThreshold\": {}, \"f:successThreshold\": {}, \"f:initialDelaySeconds\": {}}, \"f:imagePullPolicy\": {}, \"f:securityContext\": {\".\": {}, \"f:runAsUser\": {}, \"f:capabilities\": {\".\": {}, \"f:add\": {}, \"f:drop\": {}}, \"f:allowPrivilegeEscalation\": {}}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:hostNetwork\": {}, \"f:tolerations\": {}, \"f:nodeSelector\": {}, \"f:restartPolicy\": {}, \"f:schedulerName\": {}, \"f:serviceAccount\": {}, \"f:securityContext\": {}, \"f:enableServiceLinks\": {}, \"f:serviceAccountName\": {}, \"f:terminationGracePeriodSeconds\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:app.kubernetes.io/name\": {}, \"f:pod-template-generation\": {}, \"f:controller-revision-hash\": {}, \"f:app.kubernetes.io/instance\": {}, \"f:app.kubernetes.io/component\": {}}, \"f:generateName\": {}, \"f:ownerReferences\": {\".\": {}, \"k:{\\\"uid\\\":\\\"8c6da241-aa55-44d8-8169-b2e85565218f\\\"}\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2022-01-21T04:40:10Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:status\": {\"f:phase\": {}, \"f:podIP\": {}, \"f:hostIP\": {}, \"f:podIPs\": {\".\": {}, \"k:{\\\"ip\\\":\\\"172.17.70.145\\\"}\": {\".\": {}, \"f:ip\": {}}}, \"f:startTime\": {}, \"f:conditions\": {\"k:{\\\"type\\\":\\\"Ready\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"Initialized\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"ContainersReady\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}, \"f:containerStatuses\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}], \"ownerReferences\": [{\"uid\": \"8c6da241-aa55-44d8-8169-b2e85565218f\", \"kind\": \"DaemonSet\", \"name\": \"myingress-ingress-nginx-controller\", \"apiVersion\": \"apps/v1\", \"controller\": true, \"blockOwnerDeletion\": true}], \"resourceVersion\": \"136982872\", \"creationTimestamp\": \"2021-09-28T13:18:56Z\"}, \"apiVersion\": \"v1\"}', '2021-09-28 21:18:56', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (873, 'istio-system', 'ingressgateway-7876ff6878-zxmvk', '', 'v1', 'pods', 'Pod', '137982203', 'b602d9f7-dc3c-468c-b85f-84b6386f38db', '07f5267b-50a2-4b13-bf50-d69721853e86', 'e89fbfac1185218f7c9a', '{\"kind\": \"Pod\", \"spec\": {\"volumes\": [{\"name\": \"istio-envoy\", \"emptyDir\": {\"medium\": \"Memory\"}}, {\"name\": \"istio-data\", \"emptyDir\": {}}, {\"name\": \"istio-podinfo\", \"downwardAPI\": {\"items\": [{\"path\": \"labels\", \"fieldRef\": {\"fieldPath\": \"metadata.labels\", \"apiVersion\": \"v1\"}}, {\"path\": \"annotations\", \"fieldRef\": {\"fieldPath\": \"metadata.annotations\", \"apiVersion\": \"v1\"}}], \"defaultMode\": 420}}, {\"name\": \"istio-token\", \"projected\": {\"sources\": [{\"serviceAccountToken\": {\"path\": \"istio-token\", \"audience\": \"istio-ca\", \"expirationSeconds\": 43200}}], \"defaultMode\": 420}}, {\"name\": \"istiod-ca-cert\", \"configMap\": {\"name\": \"istio-ca-root-cert\", \"defaultMode\": 420}}, {\"name\": \"ingressgateway-certs\", \"secret\": {\"optional\": true, \"secretName\": \"istio-ingressgateway-certs\", \"defaultMode\": 420}}, {\"name\": \"ingressgateway-ca-certs\", \"secret\": {\"optional\": true, \"secretName\": \"istio-ingressgateway-ca-certs\", \"defaultMode\": 420}}, {\"name\": \"kube-api-access-xrch4\", \"projected\": {\"sources\": [{\"serviceAccountToken\": {\"path\": \"token\", \"expirationSeconds\": 3607}}, {\"configMap\": {\"name\": \"kube-root-ca.crt\", \"items\": [{\"key\": \"ca.crt\", \"path\": \"ca.crt\"}]}}, {\"downwardAPI\": {\"items\": [{\"path\": \"namespace\", \"fieldRef\": {\"fieldPath\": \"metadata.namespace\", \"apiVersion\": \"v1\"}}]}}], \"defaultMode\": 420}}], \"affinity\": {\"nodeAffinity\": {\"requiredDuringSchedulingIgnoredDuringExecution\": {\"nodeSelectorTerms\": [{\"matchExpressions\": [{\"key\": \"kubernetes.io/arch\", \"values\": [\"amd64\", \"arm64\", \"ppc64le\", \"s390x\"], \"operator\": \"In\"}]}]}, \"preferredDuringSchedulingIgnoredDuringExecution\": [{\"weight\": 2, \"preference\": {\"matchExpressions\": [{\"key\": \"kubernetes.io/arch\", \"values\": [\"amd64\"], \"operator\": \"In\"}]}}, {\"weight\": 2, \"preference\": {\"matchExpressions\": [{\"key\": \"kubernetes.io/arch\", \"values\": [\"arm64\"], \"operator\": \"In\"}]}}, {\"weight\": 2, \"preference\": {\"matchExpressions\": [{\"key\": \"kubernetes.io/arch\", \"values\": [\"ppc64le\"], \"operator\": \"In\"}]}}, {\"weight\": 2, \"preference\": {\"matchExpressions\": [{\"key\": \"kubernetes.io/arch\", \"values\": [\"s390x\"], \"operator\": \"In\"}]}}]}}, \"nodeName\": \"dsjs\", \"priority\": 0, \"dnsPolicy\": \"ClusterFirst\", \"containers\": [{\"env\": [{\"name\": \"JWT_POLICY\", \"value\": \"third-party-jwt\"}, {\"name\": \"PILOT_CERT_PROVIDER\", \"value\": \"istiod\"}, {\"name\": \"CA_ADDR\", \"value\": \"istiod.istio-system.svc:15012\"}, {\"name\": \"POD_NAME\", \"valueFrom\": {\"fieldRef\": {\"fieldPath\": \"metadata.name\", \"apiVersion\": \"v1\"}}}, {\"name\": \"POD_NAMESPACE\", \"valueFrom\": {\"fieldRef\": {\"fieldPath\": \"metadata.namespace\", \"apiVersion\": \"v1\"}}}, {\"name\": \"INSTANCE_IP\", \"valueFrom\": {\"fieldRef\": {\"fieldPath\": \"status.podIP\", \"apiVersion\": \"v1\"}}}, {\"name\": \"SERVICE_ACCOUNT\", \"valueFrom\": {\"fieldRef\": {\"fieldPath\": \"spec.serviceAccountName\", \"apiVersion\": \"v1\"}}}, {\"name\": \"HOST_IP\", \"valueFrom\": {\"fieldRef\": {\"fieldPath\": \"status.hostIP\", \"apiVersion\": \"v1\"}}}, {\"name\": \"PROXY_CONFIG\", \"value\": \"{}\\n\"}, {\"name\": \"ISTIO_META_POD_PORTS\", \"value\": \"[\\n    {\\\"containerPort\\\":15021,\\\"protocol\\\":\\\"TCP\\\"}\\n    ,{\\\"containerPort\\\":8080,\\\"protocol\\\":\\\"TCP\\\"}\\n    ,{\\\"containerPort\\\":8443,\\\"protocol\\\":\\\"TCP\\\"}\\n    ,{\\\"name\\\":\\\"http-envoy-prom\\\",\\\"containerPort\\\":15090,\\\"protocol\\\":\\\"TCP\\\"}\\n]\"}, {\"name\": \"ISTIO_META_APP_CONTAINERS\"}, {\"name\": \"ISTIO_META_CLUSTER_ID\", \"value\": \"Kubernetes\"}, {\"name\": \"ISTIO_META_INTERCEPTION_MODE\", \"value\": \"REDIRECT\"}, {\"name\": \"ISTIO_META_WORKLOAD_NAME\", \"value\": \"ingressgateway\"}, {\"name\": \"ISTIO_META_OWNER\", \"value\": \"kubernetes://apis/apps/v1/namespaces/istio-system/deployments/ingressgateway\"}, {\"name\": \"ISTIO_META_MESH_ID\", \"value\": \"cluster.local\"}, {\"name\": \"TRUST_DOMAIN\", \"value\": \"cluster.local\"}, {\"name\": \"ISTIO_META_UNPRIVILEGED_POD\", \"value\": \"true\"}], \"args\": [\"proxy\", \"router\", \"--domain\", \"$(POD_NAMESPACE).svc.cluster.local\", \"--proxyLogLevel=warning\", \"--proxyComponentLogLevel=misc:error\", \"--log_output_level=default:info\"], \"name\": \"istio-proxy\", \"image\": \"docker.io/istio/proxyv2:1.13.2\", \"ports\": [{\"protocol\": \"TCP\", \"containerPort\": 15021}, {\"protocol\": \"TCP\", \"containerPort\": 8080}, {\"protocol\": \"TCP\", \"containerPort\": 8443}, {\"name\": \"http-envoy-prom\", \"protocol\": \"TCP\", \"containerPort\": 15090}], \"resources\": {\"limits\": {\"cpu\": \"2\", \"memory\": \"1Gi\"}, \"requests\": {\"cpu\": \"100m\", \"memory\": \"128Mi\"}}, \"volumeMounts\": [{\"name\": \"istiod-ca-cert\", \"mountPath\": \"/var/run/secrets/istio\"}, {\"name\": \"istio-data\", \"mountPath\": \"/var/lib/istio/data\"}, {\"name\": \"istio-envoy\", \"mountPath\": \"/etc/istio/proxy\"}, {\"name\": \"istio-token\", \"mountPath\": \"/var/run/secrets/tokens\"}, {\"name\": \"istio-podinfo\", \"mountPath\": \"/etc/istio/pod\"}, {\"name\": \"ingressgateway-certs\", \"readOnly\": true, \"mountPath\": \"/etc/istio/ingressgateway-certs\"}, {\"name\": \"ingressgateway-ca-certs\", \"readOnly\": true, \"mountPath\": \"/etc/istio/ingressgateway-ca-certs\"}, {\"name\": \"kube-api-access-xrch4\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\"}], \"readinessProbe\": {\"httpGet\": {\"path\": \"/healthz/ready\", \"port\": 15021, \"scheme\": \"HTTP\"}, \"periodSeconds\": 2, \"timeoutSeconds\": 3, \"failureThreshold\": 30, \"successThreshold\": 1, \"initialDelaySeconds\": 1}, \"imagePullPolicy\": \"IfNotPresent\", \"securityContext\": {\"privileged\": false, \"capabilities\": {\"drop\": [\"ALL\"]}, \"readOnlyRootFilesystem\": true, \"allowPrivilegeEscalation\": false}, \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"tolerations\": [{\"key\": \"node.kubernetes.io/not-ready\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}, {\"key\": \"node.kubernetes.io/unreachable\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}], \"nodeSelector\": {\"gateway\": \"ingress\"}, \"restartPolicy\": \"Always\", \"schedulerName\": \"default-scheduler\", \"serviceAccount\": \"ingressgateway-service-account\", \"securityContext\": {\"fsGroup\": 1337, \"runAsUser\": 1337, \"runAsGroup\": 1337, \"runAsNonRoot\": true}, \"preemptionPolicy\": \"PreemptLowerPriority\", \"enableServiceLinks\": true, \"serviceAccountName\": \"ingressgateway-service-account\", \"terminationGracePeriodSeconds\": 30}, \"status\": {\"phase\": \"Running\", \"podIP\": \"10.244.0.189\", \"hostIP\": \"172.17.70.144\", \"podIPs\": [{\"ip\": \"10.244.0.189\"}], \"qosClass\": \"Burstable\", \"startTime\": \"2022-05-19T05:15:34Z\", \"conditions\": [{\"type\": \"Initialized\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-05-19T05:15:34Z\"}, {\"type\": \"Ready\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-05-19T05:17:14Z\"}, {\"type\": \"ContainersReady\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-05-19T05:17:14Z\"}, {\"type\": \"PodScheduled\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-05-19T05:15:34Z\"}], \"containerStatuses\": [{\"name\": \"istio-proxy\", \"image\": \"istio/proxyv2:1.13.2\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2022-05-19T05:17:07Z\"}}, \"imageID\": \"docker-pullable://istio/proxyv2@sha256:fa15cda114bff2dd9bc0f98e988e65f5f43d77dcea652313d77b5bdfa0faf1b8\", \"started\": true, \"lastState\": {}, \"containerID\": \"docker://670862aa21f950733f5f33f624786875c63833c297bb965670fafea3bd57bee5\", \"restartCount\": 0}]}, \"metadata\": {\"uid\": \"07f5267b-50a2-4b13-bf50-d69721853e86\", \"name\": \"ingressgateway-7876ff6878-zxmvk\", \"labels\": {\"app\": \"istio-ingressgateway\", \"chart\": \"gateways\", \"istio\": \"ingressgateway\", \"release\": \"istio\", \"heritage\": \"Tiller\", \"istio.io/rev\": \"default\", \"pod-template-hash\": \"7876ff6878\", \"sidecar.istio.io/inject\": \"true\", \"operator.istio.io/component\": \"IngressGateways\", \"service.istio.io/canonical-name\": \"istio-ingressgateway\", \"service.istio.io/canonical-revision\": \"latest\", \"install.operator.istio.io/owning-resource\": \"unknown\"}, \"namespace\": \"istio-system\", \"annotations\": {\"prometheus.io/path\": \"/stats/prometheus\", \"prometheus.io/port\": \"15020\", \"prometheus.io/scrape\": \"true\", \"sidecar.istio.io/inject\": \"true\", \"sidecar.istio.io/status\": \"{\\\"initContainers\\\":null,\\\"containers\\\":[\\\"istio-proxy\\\"],\\\"volumes\\\":[\\\"istio-envoy\\\",\\\"istio-data\\\",\\\"istio-podinfo\\\",\\\"istio-token\\\",\\\"istiod-ca-cert\\\"],\\\"imagePullSecrets\\\":null,\\\"revision\\\":\\\"default\\\"}\", \"proxy.istio.io/overrides\": \"{\\\"containers\\\":[{\\\"name\\\":\\\"istio-proxy\\\",\\\"ports\\\":[{\\\"containerPort\\\":15021,\\\"protocol\\\":\\\"TCP\\\"},{\\\"containerPort\\\":8080,\\\"protocol\\\":\\\"TCP\\\"},{\\\"containerPort\\\":8443,\\\"protocol\\\":\\\"TCP\\\"},{\\\"name\\\":\\\"http-envoy-prom\\\",\\\"containerPort\\\":15090,\\\"protocol\\\":\\\"TCP\\\"}],\\\"env\\\":[{\\\"name\\\":\\\"ISTIO_META_UNPRIVILEGED_POD\\\",\\\"value\\\":\\\"true\\\"}],\\\"resources\\\":{\\\"limits\\\":{\\\"cpu\\\":\\\"2\\\",\\\"memory\\\":\\\"1Gi\\\"},\\\"requests\\\":{\\\"cpu\\\":\\\"100m\\\",\\\"memory\\\":\\\"128Mi\\\"}},\\\"volumeMounts\\\":[{\\\"name\\\":\\\"ingressgateway-certs\\\",\\\"readOnly\\\":true,\\\"mountPath\\\":\\\"/etc/istio/ingressgateway-certs\\\"},{\\\"name\\\":\\\"ingressgateway-ca-certs\\\",\\\"readOnly\\\":true,\\\"mountPath\\\":\\\"/etc/istio/ingressgateway-ca-certs\\\"},{\\\"name\\\":\\\"kube-api-access-xrch4\\\",\\\"readOnly\\\":true,\\\"mountPath\\\":\\\"/var/run/secrets/kubernetes.io/serviceaccount\\\"}],\\\"terminationMessagePath\\\":\\\"/dev/termination-log\\\",\\\"terminationMessagePolicy\\\":\\\"File\\\",\\\"imagePullPolicy\\\":\\\"IfNotPresent\\\",\\\"securityContext\\\":{\\\"capabilities\\\":{\\\"drop\\\":[\\\"ALL\\\"]},\\\"privileged\\\":false,\\\"readOnlyRootFilesystem\\\":true,\\\"allowPrivilegeEscalation\\\":false}}]}\", \"inject.istio.io/templates\": \"gateway\"}, \"generateName\": \"ingressgateway-7876ff6878-\", \"managedFields\": [{\"time\": \"2022-05-19T05:15:34Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:spec\": {\"f:volumes\": {\".\": {}, \"k:{\\\"name\\\":\\\"ingressgateway-certs\\\"}\": {\".\": {}, \"f:name\": {}, \"f:secret\": {\".\": {}, \"f:optional\": {}, \"f:secretName\": {}, \"f:defaultMode\": {}}}, \"k:{\\\"name\\\":\\\"ingressgateway-ca-certs\\\"}\": {\".\": {}, \"f:name\": {}, \"f:secret\": {\".\": {}, \"f:optional\": {}, \"f:secretName\": {}, \"f:defaultMode\": {}}}}, \"f:affinity\": {\".\": {}, \"f:nodeAffinity\": {\".\": {}, \"f:requiredDuringSchedulingIgnoredDuringExecution\": {}, \"f:preferredDuringSchedulingIgnoredDuringExecution\": {}}}, \"f:dnsPolicy\": {}, \"f:containers\": {\"k:{\\\"name\\\":\\\"istio-proxy\\\"}\": {\".\": {}, \"f:env\": {\".\": {}, \"k:{\\\"name\\\":\\\"ISTIO_META_UNPRIVILEGED_POD\\\"}\": {\".\": {}, \"f:name\": {}, \"f:value\": {}}}, \"f:name\": {}, \"f:image\": {}, \"f:ports\": {\".\": {}, \"k:{\\\"containerPort\\\":8080,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}, \"k:{\\\"containerPort\\\":8443,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}, \"k:{\\\"containerPort\\\":15021,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}, \"k:{\\\"containerPort\\\":15090,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:name\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}}, \"f:resources\": {\".\": {}, \"f:limits\": {\".\": {}, \"f:cpu\": {}, \"f:memory\": {}}, \"f:requests\": {\".\": {}, \"f:cpu\": {}, \"f:memory\": {}}}, \"f:volumeMounts\": {\".\": {}, \"k:{\\\"mountPath\\\":\\\"/etc/istio/ingressgateway-certs\\\"}\": {\".\": {}, \"f:name\": {}, \"f:readOnly\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/etc/istio/ingressgateway-ca-certs\\\"}\": {\".\": {}, \"f:name\": {}, \"f:readOnly\": {}, \"f:mountPath\": {}}}, \"f:imagePullPolicy\": {}, \"f:securityContext\": {\".\": {}, \"f:privileged\": {}, \"f:capabilities\": {\".\": {}, \"f:drop\": {}}, \"f:readOnlyRootFilesystem\": {}, \"f:allowPrivilegeEscalation\": {}}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:nodeSelector\": {}, \"f:restartPolicy\": {}, \"f:schedulerName\": {}, \"f:serviceAccount\": {}, \"f:securityContext\": {\".\": {}, \"f:fsGroup\": {}, \"f:runAsUser\": {}, \"f:runAsGroup\": {}, \"f:runAsNonRoot\": {}}, \"f:enableServiceLinks\": {}, \"f:serviceAccountName\": {}, \"f:terminationGracePeriodSeconds\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:app\": {}, \"f:chart\": {}, \"f:istio\": {}, \"f:release\": {}, \"f:heritage\": {}, \"f:pod-template-hash\": {}, \"f:sidecar.istio.io/inject\": {}, \"f:operator.istio.io/component\": {}, \"f:install.operator.istio.io/owning-resource\": {}}, \"f:annotations\": {\".\": {}, \"f:prometheus.io/path\": {}, \"f:prometheus.io/port\": {}, \"f:prometheus.io/scrape\": {}, \"f:sidecar.istio.io/inject\": {}, \"f:inject.istio.io/templates\": {}}, \"f:generateName\": {}, \"f:ownerReferences\": {\".\": {}, \"k:{\\\"uid\\\":\\\"b602d9f7-dc3c-468c-b85f-84b6386f38db\\\"}\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2022-05-19T05:17:14Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:status\": {\"f:phase\": {}, \"f:podIP\": {}, \"f:hostIP\": {}, \"f:podIPs\": {\".\": {}, \"k:{\\\"ip\\\":\\\"10.244.0.189\\\"}\": {\".\": {}, \"f:ip\": {}}}, \"f:startTime\": {}, \"f:conditions\": {\"k:{\\\"type\\\":\\\"Ready\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"Initialized\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"ContainersReady\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}, \"f:containerStatuses\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}], \"ownerReferences\": [{\"uid\": \"b602d9f7-dc3c-468c-b85f-84b6386f38db\", \"kind\": \"ReplicaSet\", \"name\": \"ingressgateway-7876ff6878\", \"apiVersion\": \"apps/v1\", \"controller\": true, \"blockOwnerDeletion\": true}], \"resourceVersion\": \"137982203\", \"creationTimestamp\": \"2022-05-19T05:15:34Z\"}, \"apiVersion\": \"v1\"}', '2022-05-19 13:15:34', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (874, 'kube-system', 'kube-proxy-9f9fl', '', 'v1', 'pods', 'Pod', '31164272', 'f4a0192c-e4d5-454f-b05a-ab242b06c619', 'aeb363b7-e8d4-485a-a84d-92de28659972', 'e6515407538fd7fae683', '{\"kind\": \"Pod\", \"spec\": {\"volumes\": [{\"name\": \"kube-proxy\", \"configMap\": {\"name\": \"kube-proxy\", \"defaultMode\": 420}}, {\"name\": \"xtables-lock\", \"hostPath\": {\"path\": \"/run/xtables.lock\", \"type\": \"FileOrCreate\"}}, {\"name\": \"lib-modules\", \"hostPath\": {\"path\": \"/lib/modules\", \"type\": \"\"}}, {\"name\": \"kube-api-access-n48tv\", \"projected\": {\"sources\": [{\"serviceAccountToken\": {\"path\": \"token\", \"expirationSeconds\": 3607}}, {\"configMap\": {\"name\": \"kube-root-ca.crt\", \"items\": [{\"key\": \"ca.crt\", \"path\": \"ca.crt\"}]}}, {\"downwardAPI\": {\"items\": [{\"path\": \"namespace\", \"fieldRef\": {\"fieldPath\": \"metadata.namespace\", \"apiVersion\": \"v1\"}}]}}], \"defaultMode\": 420}}], \"affinity\": {\"nodeAffinity\": {\"requiredDuringSchedulingIgnoredDuringExecution\": {\"nodeSelectorTerms\": [{\"matchFields\": [{\"key\": \"metadata.name\", \"values\": [\"dsjs\"], \"operator\": \"In\"}]}]}}}, \"nodeName\": \"dsjs\", \"priority\": 2000001000, \"dnsPolicy\": \"ClusterFirst\", \"containers\": [{\"env\": [{\"name\": \"NODE_NAME\", \"valueFrom\": {\"fieldRef\": {\"fieldPath\": \"spec.nodeName\", \"apiVersion\": \"v1\"}}}], \"name\": \"kube-proxy\", \"image\": \"k8s.gcr.io/kube-proxy:v1.22.0\", \"command\": [\"/usr/local/bin/kube-proxy\", \"--config=/var/lib/kube-proxy/config.conf\", \"--hostname-override=$(NODE_NAME)\"], \"resources\": {}, \"volumeMounts\": [{\"name\": \"kube-proxy\", \"mountPath\": \"/var/lib/kube-proxy\"}, {\"name\": \"xtables-lock\", \"mountPath\": \"/run/xtables.lock\"}, {\"name\": \"lib-modules\", \"readOnly\": true, \"mountPath\": \"/lib/modules\"}, {\"name\": \"kube-api-access-n48tv\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\"}], \"imagePullPolicy\": \"IfNotPresent\", \"securityContext\": {\"privileged\": true}, \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"hostNetwork\": true, \"tolerations\": [{\"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/not-ready\", \"effect\": \"NoExecute\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/unreachable\", \"effect\": \"NoExecute\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/disk-pressure\", \"effect\": \"NoSchedule\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/memory-pressure\", \"effect\": \"NoSchedule\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/pid-pressure\", \"effect\": \"NoSchedule\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/unschedulable\", \"effect\": \"NoSchedule\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/network-unavailable\", \"effect\": \"NoSchedule\", \"operator\": \"Exists\"}], \"nodeSelector\": {\"kubernetes.io/os\": \"linux\"}, \"restartPolicy\": \"Always\", \"schedulerName\": \"default-scheduler\", \"serviceAccount\": \"kube-proxy\", \"securityContext\": {}, \"preemptionPolicy\": \"PreemptLowerPriority\", \"priorityClassName\": \"system-node-critical\", \"enableServiceLinks\": true, \"serviceAccountName\": \"kube-proxy\", \"terminationGracePeriodSeconds\": 30}, \"status\": {\"phase\": \"Running\", \"podIP\": \"172.17.70.144\", \"hostIP\": \"172.17.70.144\", \"podIPs\": [{\"ip\": \"172.17.70.144\"}], \"qosClass\": \"BestEffort\", \"startTime\": \"2021-08-16T18:25:09Z\", \"conditions\": [{\"type\": \"Initialized\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-08-16T18:25:09Z\"}, {\"type\": \"Ready\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-08-30T08:32:50Z\"}, {\"type\": \"ContainersReady\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-08-30T08:32:50Z\"}, {\"type\": \"PodScheduled\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-08-16T18:25:09Z\"}], \"containerStatuses\": [{\"name\": \"kube-proxy\", \"image\": \"k8s.gcr.io/kube-proxy:v1.22.0\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2021-08-30T08:32:48Z\"}}, \"imageID\": \"docker-pullable://registry.aliyuncs.com/google_containers/kube-proxy@sha256:29e70ce3c241fe0b410d89cf20b453a750eb8513ea7bd9ef9c2fd35f8e45e68e\", \"started\": true, \"lastState\": {\"terminated\": {\"reason\": \"Error\", \"exitCode\": 255, \"startedAt\": \"2021-08-30T08:11:02Z\", \"finishedAt\": \"2021-08-30T08:32:18Z\", \"containerID\": \"docker://d5e44fb6d05f25a1fa1e0bbcecc2e080f3cea6084beabe490cdfe1e111fdc3cf\"}}, \"containerID\": \"docker://41029e1199c20d250dd75ca0f2418d6cd82b25ed7326d8ff699d2c2f5621b12f\", \"restartCount\": 2}]}, \"metadata\": {\"uid\": \"aeb363b7-e8d4-485a-a84d-92de28659972\", \"name\": \"kube-proxy-9f9fl\", \"labels\": {\"k8s-app\": \"kube-proxy\", \"pod-template-generation\": \"1\", \"controller-revision-hash\": \"55847b5bbd\"}, \"namespace\": \"kube-system\", \"generateName\": \"kube-proxy-\", \"managedFields\": [{\"time\": \"2021-08-16T18:25:09Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:spec\": {\"f:volumes\": {\".\": {}, \"k:{\\\"name\\\":\\\"kube-proxy\\\"}\": {\".\": {}, \"f:name\": {}, \"f:configMap\": {\".\": {}, \"f:name\": {}, \"f:defaultMode\": {}}}, \"k:{\\\"name\\\":\\\"lib-modules\\\"}\": {\".\": {}, \"f:name\": {}, \"f:hostPath\": {\".\": {}, \"f:path\": {}, \"f:type\": {}}}, \"k:{\\\"name\\\":\\\"xtables-lock\\\"}\": {\".\": {}, \"f:name\": {}, \"f:hostPath\": {\".\": {}, \"f:path\": {}, \"f:type\": {}}}}, \"f:affinity\": {\".\": {}, \"f:nodeAffinity\": {\".\": {}, \"f:requiredDuringSchedulingIgnoredDuringExecution\": {}}}, \"f:dnsPolicy\": {}, \"f:containers\": {\"k:{\\\"name\\\":\\\"kube-proxy\\\"}\": {\".\": {}, \"f:env\": {\".\": {}, \"k:{\\\"name\\\":\\\"NODE_NAME\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:fieldRef\": {}}}}, \"f:name\": {}, \"f:image\": {}, \"f:command\": {}, \"f:resources\": {}, \"f:volumeMounts\": {\".\": {}, \"k:{\\\"mountPath\\\":\\\"/lib/modules\\\"}\": {\".\": {}, \"f:name\": {}, \"f:readOnly\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/run/xtables.lock\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/var/lib/kube-proxy\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}}, \"f:imagePullPolicy\": {}, \"f:securityContext\": {\".\": {}, \"f:privileged\": {}}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:hostNetwork\": {}, \"f:tolerations\": {}, \"f:nodeSelector\": {}, \"f:restartPolicy\": {}, \"f:schedulerName\": {}, \"f:serviceAccount\": {}, \"f:securityContext\": {}, \"f:priorityClassName\": {}, \"f:enableServiceLinks\": {}, \"f:serviceAccountName\": {}, \"f:terminationGracePeriodSeconds\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:k8s-app\": {}, \"f:pod-template-generation\": {}, \"f:controller-revision-hash\": {}}, \"f:generateName\": {}, \"f:ownerReferences\": {\".\": {}, \"k:{\\\"uid\\\":\\\"f4a0192c-e4d5-454f-b05a-ab242b06c619\\\"}\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2021-08-30T08:32:59Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:status\": {\"f:phase\": {}, \"f:podIP\": {}, \"f:hostIP\": {}, \"f:podIPs\": {\".\": {}, \"k:{\\\"ip\\\":\\\"172.17.70.144\\\"}\": {\".\": {}, \"f:ip\": {}}}, \"f:startTime\": {}, \"f:conditions\": {\"k:{\\\"type\\\":\\\"Ready\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"Initialized\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"ContainersReady\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}, \"f:containerStatuses\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}], \"ownerReferences\": [{\"uid\": \"f4a0192c-e4d5-454f-b05a-ab242b06c619\", \"kind\": \"DaemonSet\", \"name\": \"kube-proxy\", \"apiVersion\": \"apps/v1\", \"controller\": true, \"blockOwnerDeletion\": true}], \"resourceVersion\": \"31164272\", \"creationTimestamp\": \"2021-08-16T18:25:09Z\"}, \"apiVersion\": \"v1\"}', '2021-08-17 02:25:09', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (875, 'kube-system', 'kube-scheduler-dsjs', '', 'v1', 'pods', 'Pod', '155111098', 'f87a4d29-ccdc-452e-a510-ba5c16954185', '446c2515-8b2c-4250-bf04-a2f8a8725468', '08b11913190126c0c707', '{\"kind\": \"Pod\", \"spec\": {\"volumes\": [{\"name\": \"kubeconfig\", \"hostPath\": {\"path\": \"/etc/kubernetes/scheduler.conf\", \"type\": \"FileOrCreate\"}}], \"nodeName\": \"dsjs\", \"priority\": 2000001000, \"dnsPolicy\": \"ClusterFirst\", \"containers\": [{\"name\": \"kube-scheduler\", \"image\": \"k8s.gcr.io/kube-scheduler:v1.22.0\", \"command\": [\"kube-scheduler\", \"--authentication-kubeconfig=/etc/kubernetes/scheduler.conf\", \"--authorization-kubeconfig=/etc/kubernetes/scheduler.conf\", \"--bind-address=127.0.0.1\", \"--kubeconfig=/etc/kubernetes/scheduler.conf\", \"--leader-elect=true\"], \"resources\": {\"requests\": {\"cpu\": \"100m\"}}, \"startupProbe\": {\"httpGet\": {\"host\": \"127.0.0.1\", \"path\": \"/healthz\", \"port\": 10259, \"scheme\": \"HTTPS\"}, \"periodSeconds\": 10, \"timeoutSeconds\": 15, \"failureThreshold\": 24, \"successThreshold\": 1, \"initialDelaySeconds\": 10}, \"volumeMounts\": [{\"name\": \"kubeconfig\", \"readOnly\": true, \"mountPath\": \"/etc/kubernetes/scheduler.conf\"}], \"livenessProbe\": {\"httpGet\": {\"host\": \"127.0.0.1\", \"path\": \"/healthz\", \"port\": 10259, \"scheme\": \"HTTPS\"}, \"periodSeconds\": 10, \"timeoutSeconds\": 15, \"failureThreshold\": 8, \"successThreshold\": 1, \"initialDelaySeconds\": 10}, \"imagePullPolicy\": \"IfNotPresent\", \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"hostNetwork\": true, \"tolerations\": [{\"effect\": \"NoExecute\", \"operator\": \"Exists\"}], \"restartPolicy\": \"Always\", \"schedulerName\": \"default-scheduler\", \"securityContext\": {\"seccompProfile\": {\"type\": \"RuntimeDefault\"}}, \"preemptionPolicy\": \"PreemptLowerPriority\", \"priorityClassName\": \"system-node-critical\", \"enableServiceLinks\": true, \"terminationGracePeriodSeconds\": 30}, \"status\": {\"phase\": \"Running\", \"podIP\": \"172.17.70.144\", \"hostIP\": \"172.17.70.144\", \"podIPs\": [{\"ip\": \"172.17.70.144\"}], \"qosClass\": \"Burstable\", \"startTime\": \"2021-08-30T08:32:24Z\", \"conditions\": [{\"type\": \"Initialized\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-08-30T08:32:24Z\"}, {\"type\": \"Ready\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-08-16T18:25:09Z\"}, {\"type\": \"ContainersReady\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-08-16T18:25:09Z\"}, {\"type\": \"PodScheduled\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-08-30T08:32:24Z\"}], \"containerStatuses\": [{\"name\": \"kube-scheduler\", \"image\": \"k8s.gcr.io/kube-scheduler:v1.22.0\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2022-08-16T18:24:55Z\"}}, \"imageID\": \"docker-pullable://registry.aliyuncs.com/google_containers/kube-scheduler@sha256:128124f448bd36a985fc0c571e383786c8e6b6753fe159e71c42afd033fd14ef\", \"started\": true, \"lastState\": {\"terminated\": {\"reason\": \"Error\", \"exitCode\": 1, \"startedAt\": \"2021-08-30T08:32:25Z\", \"finishedAt\": \"2022-08-16T18:24:54Z\", \"containerID\": \"docker://55258db2904effd8dab0b7d930f5f7f342e7d70af58ac12b2d96ca678452db50\"}}, \"containerID\": \"docker://57b560a1894df040f3c9e4ccf3a4303b717efc7951a3b1a048fab69c92acd6c9\", \"restartCount\": 3}]}, \"metadata\": {\"uid\": \"446c2515-8b2c-4250-bf04-a2f8a8725468\", \"name\": \"kube-scheduler-dsjs\", \"labels\": {\"tier\": \"control-plane\", \"component\": \"kube-scheduler\"}, \"namespace\": \"kube-system\", \"annotations\": {\"kubernetes.io/config.hash\": \"3617aad52556844f2db01c0515671207\", \"kubernetes.io/config.seen\": \"2021-08-17T02:30:55.364818322+08:00\", \"kubernetes.io/config.mirror\": \"3617aad52556844f2db01c0515671207\", \"kubernetes.io/config.source\": \"file\", \"seccomp.security.alpha.kubernetes.io/pod\": \"runtime/default\"}, \"managedFields\": [{\"time\": \"2021-08-16T18:30:55Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:spec\": {\"f:volumes\": {\".\": {}, \"k:{\\\"name\\\":\\\"kubeconfig\\\"}\": {\".\": {}, \"f:name\": {}, \"f:hostPath\": {\".\": {}, \"f:path\": {}, \"f:type\": {}}}}, \"f:nodeName\": {}, \"f:dnsPolicy\": {}, \"f:containers\": {\"k:{\\\"name\\\":\\\"kube-scheduler\\\"}\": {\".\": {}, \"f:name\": {}, \"f:image\": {}, \"f:command\": {}, \"f:resources\": {\".\": {}, \"f:requests\": {\".\": {}, \"f:cpu\": {}}}, \"f:startupProbe\": {\".\": {}, \"f:httpGet\": {\".\": {}, \"f:host\": {}, \"f:path\": {}, \"f:port\": {}, \"f:scheme\": {}}, \"f:periodSeconds\": {}, \"f:timeoutSeconds\": {}, \"f:failureThreshold\": {}, \"f:successThreshold\": {}, \"f:initialDelaySeconds\": {}}, \"f:volumeMounts\": {\".\": {}, \"k:{\\\"mountPath\\\":\\\"/etc/kubernetes/scheduler.conf\\\"}\": {\".\": {}, \"f:name\": {}, \"f:readOnly\": {}, \"f:mountPath\": {}}}, \"f:livenessProbe\": {\".\": {}, \"f:httpGet\": {\".\": {}, \"f:host\": {}, \"f:path\": {}, \"f:port\": {}, \"f:scheme\": {}}, \"f:periodSeconds\": {}, \"f:timeoutSeconds\": {}, \"f:failureThreshold\": {}, \"f:successThreshold\": {}, \"f:initialDelaySeconds\": {}}, \"f:imagePullPolicy\": {}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:hostNetwork\": {}, \"f:tolerations\": {}, \"f:restartPolicy\": {}, \"f:schedulerName\": {}, \"f:securityContext\": {\".\": {}, \"f:seccompProfile\": {\".\": {}, \"f:type\": {}}}, \"f:priorityClassName\": {}, \"f:enableServiceLinks\": {}, \"f:terminationGracePeriodSeconds\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:tier\": {}, \"f:component\": {}}, \"f:annotations\": {\".\": {}, \"f:kubernetes.io/config.hash\": {}, \"f:kubernetes.io/config.seen\": {}, \"f:kubernetes.io/config.mirror\": {}, \"f:kubernetes.io/config.source\": {}}, \"f:ownerReferences\": {\".\": {}, \"k:{\\\"uid\\\":\\\"f87a4d29-ccdc-452e-a510-ba5c16954185\\\"}\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2022-08-16T18:25:09Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:status\": {\"f:phase\": {}, \"f:podIP\": {}, \"f:hostIP\": {}, \"f:podIPs\": {\".\": {}, \"k:{\\\"ip\\\":\\\"172.17.70.144\\\"}\": {\".\": {}, \"f:ip\": {}}}, \"f:startTime\": {}, \"f:conditions\": {\".\": {}, \"k:{\\\"type\\\":\\\"Ready\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"Initialized\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"PodScheduled\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"ContainersReady\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}, \"f:containerStatuses\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}], \"ownerReferences\": [{\"uid\": \"f87a4d29-ccdc-452e-a510-ba5c16954185\", \"kind\": \"Node\", \"name\": \"dsjs\", \"apiVersion\": \"v1\", \"controller\": true}], \"resourceVersion\": \"155111098\", \"creationTimestamp\": \"2021-08-16T18:30:55Z\"}, \"apiVersion\": \"v1\"}', '2021-08-17 02:30:55', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (876, 'cattle-system', 'cattle-cluster-agent-57847cb99d-l5wwp', '', 'v1', 'pods', 'Pod', '103946924', '4c1822f4-7b2b-4840-bda7-346eb065a460', '08f5b67a-eda1-4300-becc-3d1d25aee948', '560b75ba1fbc93f8978b', '{\"kind\": \"Pod\", \"spec\": {\"volumes\": [{\"name\": \"cattle-credentials\", \"secret\": {\"secretName\": \"cattle-credentials-6490127\", \"defaultMode\": 320}}, {\"name\": \"kube-api-access-cwxgx\", \"projected\": {\"sources\": [{\"serviceAccountToken\": {\"path\": \"token\", \"expirationSeconds\": 3607}}, {\"configMap\": {\"name\": \"kube-root-ca.crt\", \"items\": [{\"key\": \"ca.crt\", \"path\": \"ca.crt\"}]}}, {\"downwardAPI\": {\"items\": [{\"path\": \"namespace\", \"fieldRef\": {\"fieldPath\": \"metadata.namespace\", \"apiVersion\": \"v1\"}}]}}], \"defaultMode\": 420}}], \"affinity\": {\"nodeAffinity\": {\"requiredDuringSchedulingIgnoredDuringExecution\": {\"nodeSelectorTerms\": [{\"matchExpressions\": [{\"key\": \"beta.kubernetes.io/os\", \"values\": [\"windows\"], \"operator\": \"NotIn\"}]}]}, \"preferredDuringSchedulingIgnoredDuringExecution\": [{\"weight\": 100, \"preference\": {\"matchExpressions\": [{\"key\": \"node-role.kubernetes.io/controlplane\", \"values\": [\"true\"], \"operator\": \"In\"}]}}, {\"weight\": 100, \"preference\": {\"matchExpressions\": [{\"key\": \"node-role.kubernetes.io/control-plane\", \"values\": [\"true\"], \"operator\": \"In\"}]}}, {\"weight\": 100, \"preference\": {\"matchExpressions\": [{\"key\": \"node-role.kubernetes.io/master\", \"values\": [\"true\"], \"operator\": \"In\"}]}}, {\"weight\": 1, \"preference\": {\"matchExpressions\": [{\"key\": \"cattle.io/cluster-agent\", \"values\": [\"true\"], \"operator\": \"In\"}]}}]}, \"podAntiAffinity\": {\"preferredDuringSchedulingIgnoredDuringExecution\": [{\"weight\": 100, \"podAffinityTerm\": {\"topologyKey\": \"kubernetes.io/hostname\", \"labelSelector\": {\"matchExpressions\": [{\"key\": \"app\", \"values\": [\"cattle-cluster-agent\"], \"operator\": \"In\"}]}}}]}}, \"nodeName\": \"dsjs\", \"priority\": 0, \"dnsPolicy\": \"ClusterFirst\", \"containers\": [{\"env\": [{\"name\": \"CATTLE_IS_RKE\", \"value\": \"false\"}, {\"name\": \"CATTLE_SERVER\", \"value\": \"https://172.17.70.145:9443\"}, {\"name\": \"CATTLE_CA_CHECKSUM\", \"value\": \"f0b7d4ad9d7e04452c8e791b46304f5533a7b4f95ac2cba0d440e05dd57d666f\"}, {\"name\": \"CATTLE_CLUSTER\", \"value\": \"true\"}, {\"name\": \"CATTLE_K8S_MANAGED\", \"value\": \"true\"}], \"name\": \"cluster-register\", \"image\": \"registry.cn-hangzhou.aliyuncs.com/rancher/rancher-agent:v2.6.0\", \"resources\": {}, \"volumeMounts\": [{\"name\": \"cattle-credentials\", \"readOnly\": true, \"mountPath\": \"/cattle-credentials\"}, {\"name\": \"kube-api-access-cwxgx\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\"}], \"imagePullPolicy\": \"IfNotPresent\", \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"tolerations\": [{\"key\": \"node-role.kubernetes.io/controlplane\", \"value\": \"true\", \"effect\": \"NoSchedule\"}, {\"key\": \"node-role.kubernetes.io/control-plane\", \"effect\": \"NoSchedule\", \"operator\": \"Exists\"}, {\"key\": \"node-role.kubernetes.io/master\", \"effect\": \"NoSchedule\", \"operator\": \"Exists\"}, {\"key\": \"node.kubernetes.io/not-ready\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}, {\"key\": \"node.kubernetes.io/unreachable\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}], \"restartPolicy\": \"Always\", \"schedulerName\": \"default-scheduler\", \"serviceAccount\": \"cattle\", \"securityContext\": {}, \"preemptionPolicy\": \"PreemptLowerPriority\", \"enableServiceLinks\": true, \"serviceAccountName\": \"cattle\", \"terminationGracePeriodSeconds\": 30}, \"status\": {\"phase\": \"Running\", \"podIP\": \"10.244.0.214\", \"hostIP\": \"172.17.70.144\", \"podIPs\": [{\"ip\": \"10.244.0.214\"}], \"qosClass\": \"BestEffort\", \"startTime\": \"2022-01-19T16:02:38Z\", \"conditions\": [{\"type\": \"Initialized\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-01-19T16:02:38Z\"}, {\"type\": \"Ready\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-01-21T04:28:15Z\"}, {\"type\": \"ContainersReady\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-01-21T04:28:15Z\"}, {\"type\": \"PodScheduled\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-01-19T16:02:38Z\"}], \"containerStatuses\": [{\"name\": \"cluster-register\", \"image\": \"registry.cn-hangzhou.aliyuncs.com/rancher/rancher-agent:v2.6.0\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2022-01-21T04:28:14Z\"}}, \"imageID\": \"docker-pullable://registry.cn-hangzhou.aliyuncs.com/rancher/rancher-agent@sha256:7caff695bc9bc2338949092c6582a3bc8dac6461f2c0530797cfc181b5054d1e\", \"started\": true, \"lastState\": {\"terminated\": {\"reason\": \"Error\", \"exitCode\": 1, \"startedAt\": \"2022-01-21T04:23:11Z\", \"finishedAt\": \"2022-01-21T04:23:11Z\", \"containerID\": \"docker://e2cd7084ac11d4aafe568e171cda171a920a010245349c893d054c238d887bfe\"}}, \"containerID\": \"docker://e0ae6d009821de415f560b1420d46e77eab189f8e4b6f4d40a860275dd622393\", \"restartCount\": 426}]}, \"metadata\": {\"uid\": \"08f5b67a-eda1-4300-becc-3d1d25aee948\", \"name\": \"cattle-cluster-agent-57847cb99d-l5wwp\", \"labels\": {\"app\": \"cattle-cluster-agent\", \"pod-template-hash\": \"57847cb99d\"}, \"namespace\": \"cattle-system\", \"generateName\": \"cattle-cluster-agent-57847cb99d-\", \"managedFields\": [{\"time\": \"2022-01-19T16:02:38Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:spec\": {\"f:volumes\": {\".\": {}, \"k:{\\\"name\\\":\\\"cattle-credentials\\\"}\": {\".\": {}, \"f:name\": {}, \"f:secret\": {\".\": {}, \"f:secretName\": {}, \"f:defaultMode\": {}}}}, \"f:affinity\": {\".\": {}, \"f:nodeAffinity\": {\".\": {}, \"f:requiredDuringSchedulingIgnoredDuringExecution\": {}, \"f:preferredDuringSchedulingIgnoredDuringExecution\": {}}, \"f:podAntiAffinity\": {\".\": {}, \"f:preferredDuringSchedulingIgnoredDuringExecution\": {}}}, \"f:dnsPolicy\": {}, \"f:containers\": {\"k:{\\\"name\\\":\\\"cluster-register\\\"}\": {\".\": {}, \"f:env\": {\".\": {}, \"k:{\\\"name\\\":\\\"CATTLE_IS_RKE\\\"}\": {\".\": {}, \"f:name\": {}, \"f:value\": {}}, \"k:{\\\"name\\\":\\\"CATTLE_SERVER\\\"}\": {\".\": {}, \"f:name\": {}, \"f:value\": {}}, \"k:{\\\"name\\\":\\\"CATTLE_CLUSTER\\\"}\": {\".\": {}, \"f:name\": {}, \"f:value\": {}}, \"k:{\\\"name\\\":\\\"CATTLE_CA_CHECKSUM\\\"}\": {\".\": {}, \"f:name\": {}, \"f:value\": {}}, \"k:{\\\"name\\\":\\\"CATTLE_K8S_MANAGED\\\"}\": {\".\": {}, \"f:name\": {}, \"f:value\": {}}}, \"f:name\": {}, \"f:image\": {}, \"f:resources\": {}, \"f:volumeMounts\": {\".\": {}, \"k:{\\\"mountPath\\\":\\\"/cattle-credentials\\\"}\": {\".\": {}, \"f:name\": {}, \"f:readOnly\": {}, \"f:mountPath\": {}}}, \"f:imagePullPolicy\": {}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:tolerations\": {}, \"f:restartPolicy\": {}, \"f:schedulerName\": {}, \"f:serviceAccount\": {}, \"f:securityContext\": {}, \"f:enableServiceLinks\": {}, \"f:serviceAccountName\": {}, \"f:terminationGracePeriodSeconds\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:app\": {}, \"f:pod-template-hash\": {}}, \"f:generateName\": {}, \"f:ownerReferences\": {\".\": {}, \"k:{\\\"uid\\\":\\\"4c1822f4-7b2b-4840-bda7-346eb065a460\\\"}\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2022-01-21T04:28:15Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:status\": {\"f:phase\": {}, \"f:podIP\": {}, \"f:hostIP\": {}, \"f:podIPs\": {\".\": {}, \"k:{\\\"ip\\\":\\\"10.244.0.214\\\"}\": {\".\": {}, \"f:ip\": {}}}, \"f:startTime\": {}, \"f:conditions\": {\"k:{\\\"type\\\":\\\"Ready\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"Initialized\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"ContainersReady\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}, \"f:containerStatuses\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}], \"ownerReferences\": [{\"uid\": \"4c1822f4-7b2b-4840-bda7-346eb065a460\", \"kind\": \"ReplicaSet\", \"name\": \"cattle-cluster-agent-57847cb99d\", \"apiVersion\": \"apps/v1\", \"controller\": true, \"blockOwnerDeletion\": true}], \"resourceVersion\": \"103946924\", \"creationTimestamp\": \"2022-01-19T16:02:38Z\"}, \"apiVersion\": \"v1\"}', '2022-01-20 00:02:38', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (877, 'kube-system', 'metrics-server-655d65c95-rxqvh', '', 'v1', 'pods', 'Pod', '117887930', '690775ea-6769-4513-9ee8-c884673b16b3', '89cdd5f7-cac2-4e64-969b-e44d2540dbbc', 'e6d0af544bb241842b2b', '{\"kind\": \"Pod\", \"spec\": {\"volumes\": [{\"name\": \"tmp-dir\", \"emptyDir\": {}}, {\"name\": \"kube-api-access-s6rkj\", \"projected\": {\"sources\": [{\"serviceAccountToken\": {\"path\": \"token\", \"expirationSeconds\": 3607}}, {\"configMap\": {\"name\": \"kube-root-ca.crt\", \"items\": [{\"key\": \"ca.crt\", \"path\": \"ca.crt\"}]}}, {\"downwardAPI\": {\"items\": [{\"path\": \"namespace\", \"fieldRef\": {\"fieldPath\": \"metadata.namespace\", \"apiVersion\": \"v1\"}}]}}], \"defaultMode\": 420}}], \"nodeName\": \"dsjs2\", \"priority\": 2000000000, \"dnsPolicy\": \"ClusterFirst\", \"containers\": [{\"args\": [\"--cert-dir=/tmp\", \"--secure-port=4443\", \"--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname\", \"--kubelet-use-node-status-port\", \"--metric-resolution=15s\", \"--kubelet-insecure-tls\"], \"name\": \"metrics-server\", \"image\": \"bitnami/metrics-server:0.6.1\", \"ports\": [{\"name\": \"https\", \"protocol\": \"TCP\", \"containerPort\": 4443}], \"resources\": {\"requests\": {\"cpu\": \"100m\", \"memory\": \"200Mi\"}}, \"volumeMounts\": [{\"name\": \"tmp-dir\", \"mountPath\": \"/tmp\"}, {\"name\": \"kube-api-access-s6rkj\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\"}], \"livenessProbe\": {\"httpGet\": {\"path\": \"/livez\", \"port\": \"https\", \"scheme\": \"HTTPS\"}, \"periodSeconds\": 10, \"timeoutSeconds\": 1, \"failureThreshold\": 3, \"successThreshold\": 1}, \"readinessProbe\": {\"httpGet\": {\"path\": \"/readyz\", \"port\": \"https\", \"scheme\": \"HTTPS\"}, \"periodSeconds\": 10, \"timeoutSeconds\": 1, \"failureThreshold\": 3, \"successThreshold\": 1, \"initialDelaySeconds\": 20}, \"imagePullPolicy\": \"IfNotPresent\", \"securityContext\": {\"runAsUser\": 1000, \"runAsNonRoot\": true, \"readOnlyRootFilesystem\": true, \"allowPrivilegeEscalation\": false}, \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"tolerations\": [{\"key\": \"node.kubernetes.io/not-ready\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}, {\"key\": \"node.kubernetes.io/unreachable\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}], \"nodeSelector\": {\"kubernetes.io/os\": \"linux\"}, \"restartPolicy\": \"Always\", \"schedulerName\": \"default-scheduler\", \"serviceAccount\": \"metrics-server\", \"securityContext\": {}, \"preemptionPolicy\": \"PreemptLowerPriority\", \"priorityClassName\": \"system-cluster-critical\", \"enableServiceLinks\": true, \"serviceAccountName\": \"metrics-server\", \"terminationGracePeriodSeconds\": 30}, \"status\": {\"phase\": \"Running\", \"podIP\": \"10.244.1.250\", \"hostIP\": \"172.17.70.145\", \"podIPs\": [{\"ip\": \"10.244.1.250\"}], \"qosClass\": \"Burstable\", \"startTime\": \"2022-02-11T16:11:58Z\", \"conditions\": [{\"type\": \"Initialized\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-02-11T16:11:58Z\"}, {\"type\": \"Ready\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-02-11T16:12:29Z\"}, {\"type\": \"ContainersReady\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-02-11T16:12:29Z\"}, {\"type\": \"PodScheduled\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2022-02-11T16:06:35Z\"}], \"containerStatuses\": [{\"name\": \"metrics-server\", \"image\": \"bitnami/metrics-server:0.6.1\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2022-02-11T16:11:59Z\"}}, \"imageID\": \"docker-pullable://bitnami/metrics-server@sha256:43e1deb65b3b821808261fbde57f44e8438a257fc6bc677f9093887bfb129a79\", \"started\": true, \"lastState\": {}, \"containerID\": \"docker://4a4d770ab94014d3feccee4eeb164c3a08b8e1bfc42b1bce5eb0d4381aaf2985\", \"restartCount\": 0}]}, \"metadata\": {\"uid\": \"89cdd5f7-cac2-4e64-969b-e44d2540dbbc\", \"name\": \"metrics-server-655d65c95-rxqvh\", \"labels\": {\"k8s-app\": \"metrics-server\", \"pod-template-hash\": \"655d65c95\"}, \"namespace\": \"kube-system\", \"generateName\": \"metrics-server-655d65c95-\", \"managedFields\": [{\"time\": \"2022-02-11T16:06:35Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:spec\": {\"f:volumes\": {\".\": {}, \"k:{\\\"name\\\":\\\"tmp-dir\\\"}\": {\".\": {}, \"f:name\": {}, \"f:emptyDir\": {}}}, \"f:dnsPolicy\": {}, \"f:containers\": {\"k:{\\\"name\\\":\\\"metrics-server\\\"}\": {\".\": {}, \"f:args\": {}, \"f:name\": {}, \"f:image\": {}, \"f:ports\": {\".\": {}, \"k:{\\\"containerPort\\\":4443,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:name\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}}, \"f:resources\": {\".\": {}, \"f:requests\": {\".\": {}, \"f:cpu\": {}, \"f:memory\": {}}}, \"f:volumeMounts\": {\".\": {}, \"k:{\\\"mountPath\\\":\\\"/tmp\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}}, \"f:livenessProbe\": {\".\": {}, \"f:httpGet\": {\".\": {}, \"f:path\": {}, \"f:port\": {}, \"f:scheme\": {}}, \"f:periodSeconds\": {}, \"f:timeoutSeconds\": {}, \"f:failureThreshold\": {}, \"f:successThreshold\": {}}, \"f:readinessProbe\": {\".\": {}, \"f:httpGet\": {\".\": {}, \"f:path\": {}, \"f:port\": {}, \"f:scheme\": {}}, \"f:periodSeconds\": {}, \"f:timeoutSeconds\": {}, \"f:failureThreshold\": {}, \"f:successThreshold\": {}, \"f:initialDelaySeconds\": {}}, \"f:imagePullPolicy\": {}, \"f:securityContext\": {\".\": {}, \"f:runAsUser\": {}, \"f:runAsNonRoot\": {}, \"f:readOnlyRootFilesystem\": {}, \"f:allowPrivilegeEscalation\": {}}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:nodeSelector\": {}, \"f:restartPolicy\": {}, \"f:schedulerName\": {}, \"f:serviceAccount\": {}, \"f:securityContext\": {}, \"f:priorityClassName\": {}, \"f:enableServiceLinks\": {}, \"f:serviceAccountName\": {}, \"f:terminationGracePeriodSeconds\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:k8s-app\": {}, \"f:pod-template-hash\": {}}, \"f:generateName\": {}, \"f:ownerReferences\": {\".\": {}, \"k:{\\\"uid\\\":\\\"690775ea-6769-4513-9ee8-c884673b16b3\\\"}\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2022-02-11T16:07:05Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:status\": {\"f:phase\": {}, \"f:podIP\": {}, \"f:hostIP\": {}, \"f:podIPs\": {\".\": {}, \"k:{\\\"ip\\\":\\\"10.244.1.250\\\"}\": {\".\": {}, \"f:ip\": {}}}, \"f:startTime\": {}, \"f:conditions\": {\"k:{\\\"type\\\":\\\"Ready\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"Initialized\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"ContainersReady\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}, \"f:containerStatuses\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}], \"ownerReferences\": [{\"uid\": \"690775ea-6769-4513-9ee8-c884673b16b3\", \"kind\": \"ReplicaSet\", \"name\": \"metrics-server-655d65c95\", \"apiVersion\": \"apps/v1\", \"controller\": true, \"blockOwnerDeletion\": true}], \"resourceVersion\": \"117887930\", \"creationTimestamp\": \"2022-02-11T16:06:35Z\"}, \"apiVersion\": \"v1\"}', '2022-02-12 00:06:35', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `resources` VALUES (878, 'argocd', 'argocd-application-controller-0', '', 'v1', 'pods', 'Pod', '31177346', '8551d1dd-c574-40fd-a9b5-77363e36f6f5', '5f6e1ae9-5adb-4f7e-ba12-5d0341fb4488', '48585870dae563b65da2', '{\"kind\": \"Pod\", \"spec\": {\"volumes\": [{\"name\": \"argocd-home\", \"emptyDir\": {}}, {\"name\": \"argocd-repo-server-tls\", \"secret\": {\"items\": [{\"key\": \"tls.crt\", \"path\": \"tls.crt\"}, {\"key\": \"tls.key\", \"path\": \"tls.key\"}, {\"key\": \"ca.crt\", \"path\": \"ca.crt\"}], \"optional\": true, \"secretName\": \"argocd-repo-server-tls\", \"defaultMode\": 420}}, {\"name\": \"kube-api-access-xc92n\", \"projected\": {\"sources\": [{\"serviceAccountToken\": {\"path\": \"token\", \"expirationSeconds\": 3607}}, {\"configMap\": {\"name\": \"kube-root-ca.crt\", \"items\": [{\"key\": \"ca.crt\", \"path\": \"ca.crt\"}]}}, {\"downwardAPI\": {\"items\": [{\"path\": \"namespace\", \"fieldRef\": {\"fieldPath\": \"metadata.namespace\", \"apiVersion\": \"v1\"}}]}}], \"defaultMode\": 420}}], \"affinity\": {\"podAntiAffinity\": {\"preferredDuringSchedulingIgnoredDuringExecution\": [{\"weight\": 100, \"podAffinityTerm\": {\"topologyKey\": \"kubernetes.io/hostname\", \"labelSelector\": {\"matchLabels\": {\"app.kubernetes.io/name\": \"argocd-application-controller\"}}}}, {\"weight\": 5, \"podAffinityTerm\": {\"topologyKey\": \"kubernetes.io/hostname\", \"labelSelector\": {\"matchLabels\": {\"app.kubernetes.io/part-of\": \"argocd\"}}}}]}}, \"hostname\": \"argocd-application-controller-0\", \"nodeName\": \"dsjs\", \"priority\": 0, \"dnsPolicy\": \"ClusterFirst\", \"subdomain\": \"argocd-application-controller\", \"containers\": [{\"env\": [{\"name\": \"ARGOCD_RECONCILIATION_TIMEOUT\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"timeout.reconciliation\", \"name\": \"argocd-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"repo.server\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"controller.repo.server.timeout.seconds\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_APPLICATION_CONTROLLER_STATUS_PROCESSORS\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"controller.status.processors\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_APPLICATION_CONTROLLER_OPERATION_PROCESSORS\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"controller.operation.processors\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_APPLICATION_CONTROLLER_LOGFORMAT\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"controller.log.format\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_APPLICATION_CONTROLLER_LOGLEVEL\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"controller.log.level\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_APPLICATION_CONTROLLER_METRICS_CACHE_EXPIRATION\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"controller.metrics.cache.expiration\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_TIMEOUT_SECONDS\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"controller.self.heal.timeout.seconds\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_PLAINTEXT\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"controller.repo.server.plaintext\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_STRICT_TLS\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"controller.repo.server.strict.tls\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_APP_STATE_CACHE_EXPIRATION\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"controller.app.state.cache.expiration\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"REDIS_SERVER\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"redis.server\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"REDISDB\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"redis.db\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}, {\"name\": \"ARGOCD_DEFAULT_CACHE_EXPIRATION\", \"valueFrom\": {\"configMapKeyRef\": {\"key\": \"controller.default.cache.expiration\", \"name\": \"argocd-cmd-params-cm\", \"optional\": true}}}], \"name\": \"argocd-application-controller\", \"image\": \"argoproj/argocd:v2.1.2\", \"ports\": [{\"protocol\": \"TCP\", \"containerPort\": 8082}], \"command\": [\"argocd-application-controller\"], \"resources\": {}, \"workingDir\": \"/home/argocd\", \"volumeMounts\": [{\"name\": \"argocd-repo-server-tls\", \"mountPath\": \"/app/config/controller/tls\"}, {\"name\": \"argocd-home\", \"mountPath\": \"/home/argocd\"}, {\"name\": \"kube-api-access-xc92n\", \"readOnly\": true, \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\"}], \"livenessProbe\": {\"httpGet\": {\"path\": \"/healthz\", \"port\": 8082, \"scheme\": \"HTTP\"}, \"periodSeconds\": 10, \"timeoutSeconds\": 1, \"failureThreshold\": 3, \"successThreshold\": 1, \"initialDelaySeconds\": 5}, \"readinessProbe\": {\"httpGet\": {\"path\": \"/healthz\", \"port\": 8082, \"scheme\": \"HTTP\"}, \"periodSeconds\": 10, \"timeoutSeconds\": 1, \"failureThreshold\": 3, \"successThreshold\": 1, \"initialDelaySeconds\": 5}, \"imagePullPolicy\": \"Always\", \"securityContext\": {\"capabilities\": {\"drop\": [\"all\"]}, \"runAsNonRoot\": true, \"readOnlyRootFilesystem\": true, \"allowPrivilegeEscalation\": false}, \"terminationMessagePath\": \"/dev/termination-log\", \"terminationMessagePolicy\": \"File\"}], \"tolerations\": [{\"key\": \"node.kubernetes.io/not-ready\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}, {\"key\": \"node.kubernetes.io/unreachable\", \"effect\": \"NoExecute\", \"operator\": \"Exists\", \"tolerationSeconds\": 300}], \"restartPolicy\": \"Always\", \"schedulerName\": \"default-scheduler\", \"serviceAccount\": \"argocd-application-controller\", \"securityContext\": {}, \"preemptionPolicy\": \"PreemptLowerPriority\", \"enableServiceLinks\": true, \"serviceAccountName\": \"argocd-application-controller\", \"terminationGracePeriodSeconds\": 30}, \"status\": {\"phase\": \"Running\", \"podIP\": \"10.244.0.122\", \"hostIP\": \"172.17.70.144\", \"podIPs\": [{\"ip\": \"10.244.0.122\"}], \"qosClass\": \"BestEffort\", \"startTime\": \"2021-10-15T10:23:26Z\", \"conditions\": [{\"type\": \"Initialized\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-10-15T10:23:26Z\"}, {\"type\": \"Ready\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-10-15T10:23:46Z\"}, {\"type\": \"ContainersReady\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-10-15T10:23:46Z\"}, {\"type\": \"PodScheduled\", \"status\": \"True\", \"lastProbeTime\": null, \"lastTransitionTime\": \"2021-10-15T10:23:26Z\"}], \"containerStatuses\": [{\"name\": \"argocd-application-controller\", \"image\": \"argoproj/argocd:v2.1.2\", \"ready\": true, \"state\": {\"running\": {\"startedAt\": \"2021-10-15T10:23:34Z\"}}, \"imageID\": \"docker-pullable://argoproj/argocd@sha256:2e0e725c9282bfb7b08bea7dbbfd8dbce6410d670e3f8addd9b6540d818ad520\", \"started\": true, \"lastState\": {}, \"containerID\": \"docker://f2cef11862d3830ebace9d01d41e5b165640d172f1564fad73cbf7e7a7861b58\", \"restartCount\": 0}]}, \"metadata\": {\"uid\": \"5f6e1ae9-5adb-4f7e-ba12-5d0341fb4488\", \"name\": \"argocd-application-controller-0\", \"labels\": {\"app.kubernetes.io/name\": \"argocd-application-controller\", \"controller-revision-hash\": \"argocd-application-controller-58f86f6f48\", \"statefulset.kubernetes.io/pod-name\": \"argocd-application-controller-0\"}, \"namespace\": \"argocd\", \"generateName\": \"argocd-application-controller-\", \"managedFields\": [{\"time\": \"2021-10-15T10:23:25Z\", \"manager\": \"kube-controller-manager\", \"fieldsV1\": {\"f:spec\": {\"f:volumes\": {\".\": {}, \"k:{\\\"name\\\":\\\"argocd-home\\\"}\": {\".\": {}, \"f:name\": {}, \"f:emptyDir\": {}}, \"k:{\\\"name\\\":\\\"argocd-repo-server-tls\\\"}\": {\".\": {}, \"f:name\": {}, \"f:secret\": {\".\": {}, \"f:items\": {}, \"f:optional\": {}, \"f:secretName\": {}, \"f:defaultMode\": {}}}}, \"f:affinity\": {\".\": {}, \"f:podAntiAffinity\": {\".\": {}, \"f:preferredDuringSchedulingIgnoredDuringExecution\": {}}}, \"f:hostname\": {}, \"f:dnsPolicy\": {}, \"f:subdomain\": {}, \"f:containers\": {\"k:{\\\"name\\\":\\\"argocd-application-controller\\\"}\": {\".\": {}, \"f:env\": {\".\": {}, \"k:{\\\"name\\\":\\\"REDISDB\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"REDIS_SERVER\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_RECONCILIATION_TIMEOUT\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_DEFAULT_CACHE_EXPIRATION\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_APP_STATE_CACHE_EXPIRATION\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_APPLICATION_CONTROLLER_LOGLEVEL\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_APPLICATION_CONTROLLER_LOGFORMAT\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_APPLICATION_CONTROLLER_STATUS_PROCESSORS\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_APPLICATION_CONTROLLER_OPERATION_PROCESSORS\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_PLAINTEXT\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_STRICT_TLS\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_APPLICATION_CONTROLLER_METRICS_CACHE_EXPIRATION\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_TIMEOUT_SECONDS\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}, \"k:{\\\"name\\\":\\\"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS\\\"}\": {\".\": {}, \"f:name\": {}, \"f:valueFrom\": {\".\": {}, \"f:configMapKeyRef\": {}}}}, \"f:name\": {}, \"f:image\": {}, \"f:ports\": {\".\": {}, \"k:{\\\"containerPort\\\":8082,\\\"protocol\\\":\\\"TCP\\\"}\": {\".\": {}, \"f:protocol\": {}, \"f:containerPort\": {}}}, \"f:command\": {}, \"f:resources\": {}, \"f:workingDir\": {}, \"f:volumeMounts\": {\".\": {}, \"k:{\\\"mountPath\\\":\\\"/home/argocd\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}, \"k:{\\\"mountPath\\\":\\\"/app/config/controller/tls\\\"}\": {\".\": {}, \"f:name\": {}, \"f:mountPath\": {}}}, \"f:livenessProbe\": {\".\": {}, \"f:httpGet\": {\".\": {}, \"f:path\": {}, \"f:port\": {}, \"f:scheme\": {}}, \"f:periodSeconds\": {}, \"f:timeoutSeconds\": {}, \"f:failureThreshold\": {}, \"f:successThreshold\": {}, \"f:initialDelaySeconds\": {}}, \"f:readinessProbe\": {\".\": {}, \"f:httpGet\": {\".\": {}, \"f:path\": {}, \"f:port\": {}, \"f:scheme\": {}}, \"f:periodSeconds\": {}, \"f:timeoutSeconds\": {}, \"f:failureThreshold\": {}, \"f:successThreshold\": {}, \"f:initialDelaySeconds\": {}}, \"f:imagePullPolicy\": {}, \"f:securityContext\": {\".\": {}, \"f:capabilities\": {\".\": {}, \"f:drop\": {}}, \"f:runAsNonRoot\": {}, \"f:readOnlyRootFilesystem\": {}, \"f:allowPrivilegeEscalation\": {}}, \"f:terminationMessagePath\": {}, \"f:terminationMessagePolicy\": {}}}, \"f:restartPolicy\": {}, \"f:schedulerName\": {}, \"f:serviceAccount\": {}, \"f:securityContext\": {}, \"f:enableServiceLinks\": {}, \"f:serviceAccountName\": {}, \"f:terminationGracePeriodSeconds\": {}}, \"f:metadata\": {\"f:labels\": {\".\": {}, \"f:app.kubernetes.io/name\": {}, \"f:controller-revision-hash\": {}, \"f:statefulset.kubernetes.io/pod-name\": {}}, \"f:generateName\": {}, \"f:ownerReferences\": {\".\": {}, \"k:{\\\"uid\\\":\\\"8551d1dd-c574-40fd-a9b5-77363e36f6f5\\\"}\": {}}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\"}, {\"time\": \"2021-10-15T10:23:46Z\", \"manager\": \"kubelet\", \"fieldsV1\": {\"f:status\": {\"f:phase\": {}, \"f:podIP\": {}, \"f:hostIP\": {}, \"f:podIPs\": {\".\": {}, \"k:{\\\"ip\\\":\\\"10.244.0.122\\\"}\": {\".\": {}, \"f:ip\": {}}}, \"f:startTime\": {}, \"f:conditions\": {\"k:{\\\"type\\\":\\\"Ready\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"Initialized\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}, \"k:{\\\"type\\\":\\\"ContainersReady\\\"}\": {\".\": {}, \"f:type\": {}, \"f:status\": {}, \"f:lastProbeTime\": {}, \"f:lastTransitionTime\": {}}}, \"f:containerStatuses\": {}}}, \"operation\": \"Update\", \"apiVersion\": \"v1\", \"fieldsType\": \"FieldsV1\", \"subresource\": \"status\"}], \"ownerReferences\": [{\"uid\": \"8551d1dd-c574-40fd-a9b5-77363e36f6f5\", \"kind\": \"StatefulSet\", \"name\": \"argocd-application-controller\", \"apiVersion\": \"apps/v1\", \"controller\": true, \"blockOwnerDeletion\": true}], \"resourceVersion\": \"31177346\", \"creationTimestamp\": \"2021-10-15T10:23:25Z\"}, \"apiVersion\": \"v1\"}', '2021-10-15 18:23:25', '0000-00-00 00:00:00', '0000-00-00 00:00:00');

SET FOREIGN_KEY_CHECKS = 1;
